var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AnimationStateService.html",[0,0.975,1,2.567]],["body/injectables/AnimationStateService.html",[0,1.704,1,4.488,2,2.366,3,0.246,4,0.215,5,0.215,6,6.118,7,4.647,8,0.215,9,0.331,10,1.495,11,6.881,12,4.131,13,5.91,14,0.22,15,0.019,16,2.152,17,0.599,18,0.762,19,1.623,20,0.353,21,5.411,22,5.411,23,5.411,24,5.411,25,5.411,26,0.448,27,0.278,28,0.448,29,0.64,30,0.768,31,0.378,32,0.412,33,2.502,34,2.366,35,0.246,36,0.041,37,1.92,38,6.444,39,5.411,40,5.411,41,0.016,42,0.016]],["title/components/AppComponent.html",[43,0.101,44,0.554]],["body/components/AppComponent.html",[3,0.192,4,0.168,5,0.168,8,0.168,9,0.283,14,0.188,15,0.019,17,0.611,18,0.611,20,0.283,27,0.283,31,0.472,32,0.322,34,2.414,35,0.192,36,0.032,41,0.014,42,0.014,43,0.168,44,0.98,45,0.877,46,0.709,47,0.709,48,0.709,49,3.628,50,0.671,51,1.302,52,1.302,53,0.877,54,0.783,55,0.927,56,6.149,57,0.98,58,3.202,59,0.927,60,5.52,61,0.927,62,5.52,63,3.614,64,6.149,65,4.741,66,4.224,67,0.532,68,3.539,69,4.224,70,1.577,71,2.07,72,0.927,73,3.235,74,4.224,75,2.942,76,1.426,77,0.709,78,0.927,79,0.927,80,0.709,81,1.094,82,0.709,83,0.709,84,0.635,85,0.532,86,1.094,87,0.635,88,0.532,89,0.709,90,0.635,91,1.136,92,0.635,93,0.927,94,0.635,95,0.877,96,0.635,97,0.635,98,0.927,99,0.635,100,0.727,101,0.927,102,0.635,103,0.635,104,0.877,105,0.709,106,0.635,107,0.709,108,0.927,109,0.635,110,0.709,111,0.635,112,0.709,113,0.635,114,0.877,115,1.032,116,0.635,117,0.695,118,0.709,119,0.635,120,0.709,121,0.635,122,0.437,123,0.671,124,0.709,125,0.709,126,0.635,127,0.635,128,0.635,129,0.927,130,0.927,131,0.635,132,0.635,133,0.635,134,0.709,135,0.635,136,0.709,137,0.635,138,0.709,139,0.709,140,0.635,141,0.709,142,0.635,143,0.709,144,0.635,145,0.671,146,0.635,147,0.709,148,0.709,149,0.635,150,0.671,151,0.709,152,0.635,153,0.877,154,0.635,155,0.709,156,0.709,157,0.709]],["title/injectables/AuthService.html",[0,0.975,158,0.724]],["body/injectables/AuthService.html",[0,0.9,2,0.946,3,0.098,4,0.086,5,0.086,8,0.086,9,0.175,10,1.482,14,0.243,15,0.02,16,1.39,17,0.748,18,0.748,19,1.201,20,0.376,26,0.429,27,0.347,28,0.456,29,0.757,30,0.677,31,0.428,32,0.165,33,1.001,34,0.946,35,0.098,36,0.016,37,1.493,41,0.008,42,0.008,63,2.867,67,0.915,70,0.808,71,1.061,100,0.77,122,0.674,127,0.325,158,0.669,159,1.859,160,4.206,161,1.583,162,6.281,163,3.971,164,5.505,165,4.946,166,3.461,167,4.206,168,4.206,169,4.206,170,4.206,171,4.206,172,2.837,173,4.155,174,4.206,175,4.206,176,4.411,177,0.429,178,4.769,179,4.202,180,3.403,181,4.096,182,3.403,183,4.096,184,4.769,185,4.096,186,4.769,187,3.403,188,5.185,189,2.923,190,0.282,191,2.164,192,2.518,193,3.824,194,3.692,195,3.403,196,2.164,197,4.411,198,3.403,199,2.164,200,2.607,201,5.591,202,2.164,203,3.403,204,2.164,205,1.859,206,2.164,207,2.164,208,2.164,209,2.164,210,3.403,211,2.164,212,2.164,213,3.403,214,2.164,215,3.653,216,3.403,217,2.164,218,2.164,219,2.164,220,2.164,221,2.164,222,3.403,223,2.164,224,2.164,225,3.928,226,2.164,227,2.164,228,2.164,229,2.164,230,2.164,231,2.164,232,4.206,233,2.164,234,4.769,235,2.164,236,2.164,237,2.164,238,2.164,239,2.164,240,2.164,241,4.769,242,2.164,243,2.164,244,2.164,245,2.164,246,2.164,247,2.164,248,2.164,249,2.164,250,2.164,251,1.859,252,1.859,253,2.164,254,1.202,255,1.859,256,1.507,257,2.607,258,1.859,259,1.859,260,2.164,261,1.658,262,1.387,263,2.164,264,1.859,265,2.164,266,2.164,267,2.164,268,2.164,269,2.164,270,2.164,271,4.769,272,5.505,273,2.428,274,4.728,275,4.728,276,4.216,277,2.164,278,2.164,279,3.403,280,5.505,281,2.164,282,1.859,283,2.164,284,4.02,285,4.769,286,2.164,287,3.403,288,3.403,289,2.164,290,2.164,291,1.859,292,2.061,293,2.164,294,1.387,295,1.859,296,4.206,297,3.613,298,2.164,299,1.658,300,2.164,301,2.37,302,2.696,303,2.923,304,2.164,305,2.164,306,3.611,307,4.093,308,3.403,309,2.607,310,4.206,311,4.011,312,4.946,313,5.759,314,3.611,315,3.403,316,5.185,317,3.403,318,3.403,319,3.403,320,4.769,321,2.923,322,1.859,323,3.403,324,2.164,325,4.206,326,4.206,327,4.769,328,2.837,329,2.085,330,4.206,331,1.859,332,2.164,333,2.164,334,1.658,335,2.164,336,1.859,337,1.202,338,2.164,339,2.164,340,1.061,341,1.287,342,2.164,343,1.859,344,3.403,345,2.923,346,2.607,347,2.164,348,2.164,349,2.164,350,2.164,351,2.164,352,4.206,353,2.164,354,4.453,355,3.403,356,2.164,357,2.164,358,2.164,359,2.164,360,1.859,361,1.859,362,1.859,363,2.164,364,2.164,365,2.164,366,2.923,367,2.164,368,2.164,369,1.859,370,1.061,371,1.859,372,2.164,373,2.164,374,3.403,375,2.923,376,3.403,377,3.403,378,1.859,379,2.164,380,2.923,381,2.164,382,2.164,383,2.164,384,2.164,385,2.164,386,2.502,387,2.336,388,2.164,389,2.164,390,2.164,391,2.164,392,2.164,393,2.164,394,1.658,395,2.164,396,2.164,397,2.164,398,2.164,399,4.206,400,1.859,401,2.164,402,2.025,403,2.182,404,3.403,405,1.507,406,3.403,407,3.403,408,3.321,409,4.769,410,2.164,411,2.164,412,2.164,413,2.164,414,2.164,415,2.164,416,2.164,417,2.164,418,1.859,419,1.859,420,1.859,421,2.164,422,2.164,423,2.164,424,2.164]],["title/classes/Channel.html",[36,0.028,85,0.464]],["body/classes/Channel.html",[3,0.236,4,0.207,5,0.207,8,0.207,9,0.323,14,0.249,15,0.019,20,0.376,26,0.43,27,0.361,28,0.56,35,0.236,36,0.039,41,0.016,42,0.016,67,0.952,85,0.792,190,0.43,301,3.621,425,2.887,426,4.465,427,6.765,428,6.765,429,4.712,430,4.337,431,3.093,432,6.291,433,4.063,434,3.093,435,5.199,436,5.199,437,5.199,438,5.199,439,3.093,440,4.465,441,2.887,442,3.621,443,5.199,444,5.199,445,4.465,446,4.465,447,5.199,448,5.199]],["title/components/ChannelBoardComponent.html",[43,0.101,84,0.554]],["body/components/ChannelBoardComponent.html",[3,0.105,4,0.092,5,0.092,8,0.266,9,0.184,10,1.074,14,0.228,15,0.02,16,1.44,17,0.547,18,0.547,19,1.105,20,0.364,26,0.468,27,0.329,28,0.548,29,0.721,30,0.889,31,0.482,32,0.176,35,0.105,36,0.017,37,1.271,41,0.009,42,0.009,43,0.12,44,0.347,45,0.569,46,0.388,47,0.388,48,0.388,50,0.367,51,1.245,52,1.245,53,0.569,54,0.803,55,0.601,57,0.347,59,0.601,61,0.601,67,0.622,72,0.388,76,0.78,77,0.388,78,0.601,79,0.601,80,0.388,81,0.829,82,0.388,83,0.388,84,0.743,85,0.862,86,0.829,87,0.347,88,0.291,89,0.388,90,0.347,91,1.125,92,0.347,93,0.601,94,0.538,95,0.785,96,0.347,97,0.347,98,0.601,99,0.347,100,0.721,101,0.601,102,0.347,103,0.347,104,0.569,105,0.388,106,0.347,107,0.388,108,0.601,109,0.347,110,0.388,111,0.347,112,0.388,113,0.347,114,0.785,115,0.736,116,0.743,117,0.451,118,0.388,119,0.743,120,0.388,121,0.347,122,0.239,123,0.367,124,0.388,125,0.388,126,0.347,127,0.347,128,0.347,129,0.601,130,0.601,131,0.85,132,0.887,133,0.347,134,0.388,135,0.347,136,0.388,137,0.347,138,0.388,139,0.388,140,0.347,141,0.388,142,0.743,143,0.388,144,0.347,145,0.367,146,0.743,147,0.388,148,0.388,149,0.347,150,0.367,151,0.388,152,0.347,153,0.569,154,0.743,155,0.388,156,0.388,157,0.388,158,1.257,161,1.488,177,0.451,190,0.191,273,1.209,292,1.756,328,2.131,329,1.918,340,2.15,346,2.744,408,2.495,449,1.98,450,6.126,451,5.463,452,1.481,453,2.495,454,2.285,455,3.055,456,2.495,457,2.495,458,4.387,459,3.768,460,4.387,461,3.768,462,2.271,463,4.387,464,3.768,465,3.36,466,2.056,467,4.942,468,3.077,469,3.077,470,3.582,471,3.582,472,4.942,473,3.785,474,2.495,475,1.481,476,2.785,477,2.436,478,2.745,479,3.582,480,2.311,481,1.985,482,2.311,483,1.985,484,2.311,485,2.311,486,3.582,487,2.311,488,3.582,489,2.311,490,2.311,491,2.311,492,2.311,493,2.311,494,2.744,495,2.311,496,4.942,497,2.311,498,2.311,499,1.985,500,2.285,501,1.99,502,3.582,503,2.311,504,5.069,505,2.311,506,4.244,507,1.985,508,3.077,509,1.77,510,1.375,511,1.61,512,1.375,513,1.61,514,2.744,515,1.481,516,1.77,517,1.481,518,1.77,519,1.484,520,1.283,521,1.481,522,1.985,523,0.908,524,1.61,525,1.133,526,1.011,527,0.908,528,1.61,529,1.283,530,1.61,531,1.77,532,1.61,533,0.642,534,1.77,535,1.481,536,1.77,537,2.311,538,0.863,539,2.311,540,1.481,541,1.481,542,1.481,543,1.61,544,2.311,545,3.582,546,2.311,547,3.582,548,2.311,549,2.311,550,2.311,551,2.311,552,2.311,553,2.311,554,2.311,555,3.582,556,2.311,557,2.311,558,2.311,559,2.311,560,2.311,561,1.99,562,1.985,563,2.311,564,1.985,565,2.311,566,4.387,567,2.311,568,1.77,569,2.311,570,2.311,571,2.311,572,2.311,573,2.311,574,2.311,575,3.582,576,3.582,577,2.311,578,3.077,579,3.077,580,3.582,581,2.311,582,2.102,583,2.311,584,2.311,585,1.481,586,2.311,587,1.985,588,2.311,589,1.985,590,3.077,591,2.311,592,2.311,593,1.985,594,4.859,595,3.077,596,4.244,597,3.582,598,2.616,599,3.582,600,4.244,601,3.077,602,4.333,603,3.077,604,3.582,605,3.582,606,3.785,607,3.582,608,3.582,609,3.582,610,2.744,611,3.582,612,3.582,613,4.942,614,5.657,615,1.756,616,3.785,617,3.582,618,2.495,619,3.582,620,2.744,621,3.582,622,2.297]],["title/classes/Chat.html",[36,0.028,88,0.464]],["body/classes/Chat.html",[3,0.246,4,0.215,5,0.215,8,0.215,9,0.331,14,0.243,15,0.019,20,0.366,26,0.448,27,0.278,28,0.448,31,0.378,35,0.246,36,0.041,41,0.016,42,0.016,67,0.811,88,0.811,117,0.867,190,0.448,425,3.005,431,3.219,433,3.956,434,3.219,439,3.219,441,3.005,623,4.647,624,6.881,625,5.271,626,4.411,627,6.444,628,5.411,629,2.98,630,5.411,631,5.411,632,4.647,633,4.144,634,4.144,635,5.411,636,5.411]],["title/components/ChatBoardComponent.html",[43,0.101,87,0.554]],["body/components/ChatBoardComponent.html",[3,0.118,4,0.103,5,0.103,8,0.244,9,0.201,14,0.221,15,0.02,16,1.373,17,0.522,18,0.522,19,1.321,20,0.353,26,0.39,27,0.344,28,0.466,29,0.557,30,0.745,31,0.479,32,0.198,35,0.118,36,0.019,41,0.01,42,0.01,43,0.129,44,0.39,45,0.622,46,0.435,47,0.435,48,0.435,50,0.412,51,1.258,52,1.258,53,0.622,54,0.745,55,0.656,57,0.39,59,0.656,61,0.656,67,0.593,72,0.435,77,0.435,78,0.656,79,0.656,80,0.435,81,0.881,82,0.435,83,0.435,84,0.39,85,0.326,86,0.881,87,0.789,88,0.774,89,0.435,90,0.39,91,1.107,92,0.39,93,0.656,94,0.39,95,0.622,96,0.588,97,0.708,98,0.656,99,0.39,100,0.7,101,0.656,102,0.39,103,0.39,104,0.622,105,0.435,106,0.39,107,0.435,108,0.656,109,0.39,110,0.435,111,0.39,112,0.435,113,0.39,114,0.834,115,0.791,116,0.789,117,0.492,118,0.435,119,0.789,120,0.435,121,0.39,122,0.268,123,0.412,124,0.435,125,0.435,126,0.39,127,0.39,128,0.39,129,0.656,130,0.656,131,0.39,132,0.39,133,0.39,134,0.435,135,0.39,136,0.435,137,0.39,138,0.435,139,0.435,140,0.39,141,0.435,142,0.789,143,0.435,144,0.39,145,0.412,146,0.789,147,0.435,148,0.435,149,0.39,150,0.412,151,0.435,152,0.39,153,0.622,154,0.789,155,0.656,156,0.435,157,0.435,158,1.296,161,1.584,177,0.492,190,0.215,273,0.875,294,3.363,311,1.805,329,1.71,334,2.996,340,1.917,341,3.121,403,2.507,449,1.926,452,1.662,453,2.724,454,2.453,456,2.724,457,2.724,459,4.045,462,2.341,465,3.608,466,2.12,473,4.018,474,2.724,475,1.662,476,2.932,494,2.996,499,4.836,500,2.453,501,1.44,507,2.226,509,2.996,510,1.542,511,1.805,512,1.542,513,1.805,514,2.996,515,1.662,516,1.985,517,1.662,518,1.985,519,1.62,520,1.44,523,1.019,524,1.805,525,1.27,526,1.71,527,1.019,533,0.72,534,1.985,535,1.662,536,1.985,538,0.968,540,1.662,541,1.662,542,1.662,543,1.805,582,1.537,587,2.226,589,2.226,590,2.226,593,2.226,598,1.809,606,4.018,610,2.996,615,1.917,616,4.018,618,2.724,637,5.958,638,5.313,639,3.294,640,4.71,641,4.71,642,2.724,643,3.359,644,1.985,645,2.592,646,2.592,647,2.592,648,3.911,649,2.592,650,2.226,651,1.35,652,1.44,653,2.592,654,2.226,655,2.226,656,2.226,657,2.226,658,1.985,659,1.985,660,2.226,661,1.985,662,2.226,663,1.985,664,2.226,665,1.985,666,2.226,667,2.592,668,2.592,669,2.592,670,3.011,671,6.791,672,3.795,673,3.911,674,4.123,675,5.246,676,5.246,677,3.911,678,3.121,679,2.724,680,3.911,681,3.911,682,4.506,683,3.911,684,2.592,685,5.084,686,3.911,687,3.911,688,3.911,689,3.911,690,3.911,691,3.911,692,3.911,693,2.996,694,3.911,695,3.911,696,2.996,697,3.911,698,3.911,699,3.359,700,3.911,701,3.911,702,3.911,703,3.911,704,3.911,705,3.911,706,3.911,707,2.996,708,3.911,709,3.911,710,3.911,711,3.911,712,3.359,713,3.359,714,3.359]],["title/components/ConfirmationOverlayComponent.html",[43,0.101,57,0.554]],["body/components/ConfirmationOverlayComponent.html",[3,0.196,4,0.171,5,0.171,8,0.171,9,0.287,14,0.147,15,0.019,17,0.478,18,0.478,20,0.221,27,0.287,31,0.433,32,0.328,35,0.196,36,0.032,41,0.014,42,0.014,43,0.17,44,0.648,45,0.889,46,0.724,47,0.724,48,0.724,50,0.685,51,1.303,52,1.303,53,0.889,54,0.794,55,0.939,57,0.988,59,0.939,61,0.939,63,3.634,65,4.804,70,1.609,72,1.192,73,4.284,75,3.002,76,1.455,77,0.724,78,0.939,79,0.939,80,0.724,81,1.103,82,0.724,83,0.724,84,0.648,85,0.543,86,1.103,87,0.648,88,0.543,89,0.724,90,0.648,91,1.143,92,0.648,93,0.939,94,0.648,95,0.889,96,0.648,97,0.648,98,0.939,99,0.648,100,0.734,101,0.939,102,0.648,103,0.648,104,0.889,105,0.724,106,0.648,107,0.724,108,0.939,109,0.648,110,0.724,111,0.648,112,0.724,113,0.648,114,0.889,115,1.042,116,0.648,117,0.704,118,0.724,119,0.648,120,0.724,121,0.648,122,0.446,123,0.685,124,0.724,125,0.724,126,0.648,127,0.648,128,0.648,129,0.939,130,0.939,131,0.648,132,0.648,133,0.648,134,0.724,135,0.648,136,0.724,137,0.648,138,0.724,139,0.724,140,0.648,141,0.724,142,0.648,143,0.724,144,0.648,145,0.685,146,0.648,147,0.724,148,0.724,149,0.648,150,0.685,151,0.724,152,0.648,153,0.889,154,0.648,155,0.724,156,0.724,157,0.724,715,4.804,716,3.702,717,5.593,718,4.325,719,5.593,720,5.593,721,4.31,722,2.113]],["title/components/DialogAddChannelComponent.html",[43,0.101,90,0.554]],["body/components/DialogAddChannelComponent.html",[3,0.139,4,0.122,5,0.122,8,0.122,9,0.227,10,0.961,14,0.194,15,0.019,16,1.513,17,0.575,18,0.575,19,1.433,20,0.347,26,0.366,27,0.323,28,0.52,29,0.673,30,0.807,31,0.463,32,0.233,35,0.139,36,0.023,41,0.011,42,0.011,43,0.142,44,0.46,45,0.703,46,0.514,47,0.514,48,0.514,50,0.487,51,1.275,52,1.275,53,0.703,54,0.807,55,0.742,57,0.46,59,0.742,61,0.742,72,0.514,77,0.514,78,0.742,79,0.742,80,0.514,81,0.955,82,0.514,83,0.514,84,0.46,85,0.921,86,0.955,87,0.46,88,0.386,89,0.514,90,0.855,91,1.167,92,1.13,93,0.742,94,0.46,95,0.703,96,0.46,97,0.46,98,0.742,99,0.46,100,0.614,101,0.742,102,0.46,103,0.46,104,0.703,105,0.514,106,0.46,107,0.514,108,0.742,109,0.46,110,0.514,111,0.46,112,0.514,113,0.46,114,0.703,115,0.872,116,0.46,117,0.557,118,0.514,119,0.46,120,0.514,121,0.46,122,0.537,123,0.487,124,0.514,125,0.514,126,0.46,127,0.46,128,0.46,129,0.742,130,0.742,131,0.945,132,0.781,133,0.46,134,0.514,135,0.46,136,0.514,137,0.46,138,0.514,139,0.514,140,0.46,141,0.514,142,0.46,143,0.514,144,0.46,145,0.487,146,0.46,147,0.514,148,0.514,149,0.46,150,0.487,151,0.514,152,0.46,153,0.703,154,0.46,155,0.514,156,0.514,157,0.514,158,1.273,177,0.557,190,0.253,370,2.168,405,3.961,430,2.836,449,1.906,462,2.231,464,4.46,466,2.083,501,1.701,508,3.799,510,1.822,519,1.268,521,4.401,523,1.203,527,1.203,528,2.133,529,1.701,530,2.133,531,2.345,533,0.85,578,2.63,579,2.63,582,1.203,600,3.799,602,4.815,603,4.885,615,1.501,622,3.329,723,4.084,724,2.345,725,2.704,726,4.46,727,3.329,728,3.329,729,3.617,730,3.799,731,3.799,732,5.193,733,5.193,734,5.687,735,5.687,736,5.687,737,4.423,738,2.133,739,4.423,740,3.062,741,3.062,742,3.062,743,4.423,744,2.63,745,4.423,746,3.062,747,2.63,748,2.63,749,1.143,750,1.339,751,3.062,752,4.423,753,3.062,754,3.062,755,3.062,756,2.63,757,3.062,758,3.062,759,3.062,760,3.062,761,2.63,762,3.062,763,3.062,764,3.062,765,3.062,766,6.286,767,6.286,768,4.423,769,3.799,770,5.687,771,4.423,772,4.423,773,4.423,774,4.423,775,4.423,776,4.423,777,4.423,778,4.423,779,4.423,780,4.423,781,4.423,782,2.631,783,4.423,784,4.423,785,3.799,786,3.799,787,3.081,788,3.799,789,4.423,790,4.423,791,4.423,792,3.799]],["title/components/DialogEditChannelComponent.html",[43,0.101,94,0.554]],["body/components/DialogEditChannelComponent.html",[3,0.14,4,0.122,5,0.122,8,0.176,9,0.228,10,0.668,14,0.206,15,0.019,17,0.577,18,0.577,19,1.586,20,0.361,26,0.367,27,0.333,28,0.367,29,0.714,30,0.858,31,0.439,32,0.234,35,0.14,36,0.023,41,0.011,42,0.011,43,0.142,44,0.462,45,0.705,46,0.516,47,0.516,48,0.516,50,0.489,51,1.275,52,1.275,53,0.705,54,0.809,55,0.745,57,0.462,59,0.745,61,0.745,67,0.559,72,0.516,77,0.516,78,0.745,79,0.745,80,0.516,81,0.956,82,0.516,83,0.516,84,0.462,85,0.893,86,0.956,87,0.462,88,0.387,89,0.516,90,0.462,91,1.168,92,0.462,93,0.745,94,0.856,95,1.209,96,0.462,97,0.462,98,0.745,99,0.462,100,0.615,101,0.745,102,0.462,103,0.462,104,0.705,105,0.516,106,0.462,107,0.516,108,0.745,109,0.462,110,0.516,111,0.462,112,0.516,113,0.462,114,0.705,115,0.874,116,0.462,117,0.559,118,0.516,119,0.462,120,0.516,121,0.462,122,0.318,123,0.489,124,0.516,125,0.516,126,0.462,127,0.462,128,0.462,129,0.745,130,0.745,131,0.462,132,0.462,133,0.462,134,0.516,135,0.462,136,0.516,137,0.462,138,0.516,139,0.516,140,0.462,141,0.516,142,0.462,143,0.516,144,0.462,145,0.489,146,0.462,147,0.516,148,0.516,149,0.462,150,0.489,151,0.516,152,0.462,153,0.705,154,0.462,155,0.516,156,0.516,157,0.516,158,1.275,161,1.38,177,0.559,190,0.254,346,3.397,449,1.97,461,4.47,462,2.401,466,2.208,504,4.47,519,1.273,521,4.549,523,1.208,527,1.208,531,2.354,533,0.853,538,1.147,585,1.97,670,1.506,674,3.089,723,4.221,724,2.354,727,3.336,728,3.336,729,3.625,730,3.81,731,3.81,738,2.141,744,2.64,747,3.81,748,3.81,756,2.64,786,3.81,788,3.81,793,5.204,794,5.204,795,5.698,796,5.698,797,5.698,798,5.698,799,4.436,800,3.074,801,3.074,802,3.074,803,3.074,804,3.074,805,3.074,806,3.074,807,3.074,808,3.074,809,4.436,810,4.436,811,3.074,812,3.074,813,3.074,814,3.074,815,3.074,816,4.436,817,3.074,818,3.074,819,2.64,820,3.074,821,3.074,822,4.436,823,3.074,824,3.074,825,2.354,826,3.074,827,5.698,828,4.436,829,4.364,830,5.698,831,4.894,832,4.436,833,5.698,834,5.698,835,4.436,836,4.436,837,4.436]],["title/components/DialogShowProfilComponent.html",[43,0.101,96,0.554]],["body/components/DialogShowProfilComponent.html",[3,0.163,4,0.143,5,0.143,8,0.143,9,0.254,10,1.231,14,0.226,15,0.019,20,0.313,26,0.297,27,0.291,28,0.297,29,0.424,30,0.509,31,0.473,32,0.273,35,0.163,36,0.027,41,0.012,42,0.012,43,0.155,44,0.539,45,0.786,46,0.602,47,0.602,48,0.602,50,0.57,51,1.289,52,1.289,53,0.786,54,0.702,55,0.83,57,0.539,59,0.83,61,0.83,67,0.769,70,1.34,72,0.602,77,0.602,78,0.83,79,0.83,80,0.602,81,1.025,82,0.602,83,0.602,84,0.539,85,0.452,86,1.025,87,0.539,88,0.452,89,0.602,90,0.539,91,1.203,92,0.539,93,0.83,94,0.539,95,0.786,96,0.917,97,1.117,98,0.83,99,0.539,100,0.67,101,0.83,102,0.539,103,0.539,104,0.786,105,0.602,106,0.539,107,0.602,108,0.83,109,0.539,110,0.602,111,0.539,112,0.602,113,0.539,114,0.786,115,0.95,116,0.539,117,0.623,118,0.602,119,0.539,120,0.602,121,0.539,122,0.371,123,0.57,124,0.602,125,0.602,126,0.539,127,0.539,128,0.539,129,0.83,130,0.83,131,0.539,132,0.539,133,0.539,134,0.602,135,0.539,136,0.602,137,0.539,138,0.602,139,0.602,140,0.539,141,0.602,142,0.539,143,0.602,144,0.539,145,0.57,146,0.539,147,0.602,148,0.602,149,0.539,150,0.57,151,0.602,152,0.539,153,0.786,154,0.539,155,1.075,156,0.602,157,0.602,158,1.332,161,1.462,177,0.623,190,0.297,254,1.993,386,2.943,387,2.748,402,2.943,449,1.777,466,2.057,501,1.993,519,1.487,527,1.41,533,0.996,538,1.34,615,1.759,626,3.172,639,3.532,651,3.335,652,1.993,658,4.904,659,2.749,661,2.749,663,2.749,665,2.749,723,3.809,726,4.863,727,3.63,728,3.63,729,3.944,838,2.499,839,3.79,840,3.79,841,5.242,842,6.103,843,3.589,844,3.369,845,2.991,846,3.63,847,3.082,848,3.589,849,4.948,850,4.249,851,3.589,852,2.135,853,3.589,854,4.249,855,4.249,856,3.589,857,3.589,858,3.082,859,2.749,860,3.082,861,3.589,862,3.082,863,3.082,864,3.082,865,3.589,866,3.589,867,3.589,868,4.948,869,4.948,870,3.446]],["title/components/DialogUserMenuComponent.html",[43,0.101,99,0.554]],["body/components/DialogUserMenuComponent.html",[3,0.17,4,0.148,5,0.148,8,0.148,9,0.261,14,0.212,15,0.019,20,0.344,26,0.309,27,0.297,28,0.309,29,0.601,30,0.722,31,0.453,32,0.284,35,0.17,36,0.028,41,0.013,42,0.013,43,0.158,44,0.561,45,0.808,46,0.627,47,0.627,48,0.627,50,0.593,51,1.292,52,1.292,53,0.808,54,0.722,55,0.853,57,0.561,59,0.853,61,0.853,72,0.627,77,0.627,78,0.853,79,0.853,80,0.627,81,1.042,82,0.627,83,0.627,84,0.561,85,0.47,86,1.042,87,0.561,88,0.47,89,0.627,90,0.561,91,1.253,92,0.561,93,0.853,94,0.561,95,0.808,96,0.561,97,0.561,98,0.853,99,0.933,100,0.901,101,0.853,102,0.764,103,0.561,104,0.808,105,0.627,106,0.561,107,0.627,108,0.853,109,0.561,110,0.627,111,0.561,112,0.627,113,0.561,114,0.808,115,0.97,116,0.561,117,0.64,118,0.627,119,0.561,120,0.627,121,0.561,122,0.386,123,0.593,124,0.627,125,0.627,126,0.561,127,0.561,128,0.561,129,0.853,130,0.853,131,0.561,132,0.561,133,0.561,134,0.627,135,0.561,136,0.627,137,0.561,138,0.627,139,0.627,140,0.561,141,0.627,142,0.561,143,0.627,144,0.561,145,0.593,146,0.561,147,0.627,148,0.627,149,0.561,150,0.593,151,0.627,152,0.561,153,0.808,154,0.561,155,0.97,156,0.627,157,0.627,158,1.405,161,1.483,177,0.64,190,0.309,394,3.893,449,1.903,454,3.01,469,4.965,475,2.393,476,3.381,519,2.106,526,1.633,533,1.036,538,1.393,540,2.393,541,2.393,542,2.393,561,2.823,562,3.206,651,1.944,723,4.078,727,3.706,728,3.706,871,5.25,872,2.859,873,4.366,874,4.366,875,4.366,876,5.78,877,6.206,878,5.083,879,3.733,880,3.206,881,5.083,882,5.78,883,3.893,884,3.733,885,3.733,886,2.859,887,3.206,888,3.733,889,3.733,890,3.733,891,5.083]],["title/components/DialogUserProfilComponent.html",[43,0.101,102,0.554]],["body/components/DialogUserProfilComponent.html",[3,0.155,4,0.136,5,0.136,8,0.136,9,0.246,14,0.204,15,0.019,17,0.611,18,0.611,19,1.39,20,0.351,26,0.283,27,0.323,28,0.283,29,0.652,30,0.783,31,0.439,32,0.26,35,0.155,36,0.026,41,0.012,42,0.012,43,0.151,44,0.514,45,0.76,46,0.573,47,0.573,48,0.573,50,0.543,51,1.285,52,1.285,53,0.76,54,0.783,55,0.803,57,0.514,59,0.803,61,0.803,67,0.752,72,0.573,76,1.153,77,0.573,78,0.803,79,0.803,80,0.573,81,1.003,82,0.573,83,0.573,84,0.514,85,0.43,86,1.003,87,0.514,88,0.43,89,0.573,90,0.514,91,1.192,92,0.514,93,0.803,94,0.514,95,0.76,96,0.514,97,0.514,98,0.803,99,0.514,100,0.897,101,0.803,102,0.898,103,0.514,104,0.76,105,0.573,106,0.514,107,0.573,108,0.803,109,0.514,110,0.573,111,0.514,112,0.573,113,0.514,114,0.76,115,0.926,116,0.514,117,0.602,118,0.573,119,0.514,120,0.573,121,0.514,122,0.354,123,0.543,124,0.573,125,0.573,126,0.514,127,0.514,128,0.514,129,0.803,130,0.803,131,0.514,132,0.514,133,0.514,134,0.573,135,0.514,136,0.573,137,0.514,138,0.573,139,0.573,140,0.514,141,0.573,142,0.514,143,0.573,144,0.514,145,0.543,146,0.514,147,0.573,148,0.573,149,0.514,150,0.543,151,0.573,152,0.514,153,0.76,154,0.514,155,1.123,156,0.573,157,0.573,158,1.363,161,1.092,166,2.703,177,0.602,189,5.132,190,0.283,302,3.065,321,4.738,386,3.555,387,3.319,402,3.555,449,1.926,455,3.842,519,1.415,533,0.948,538,1.275,651,3.613,723,4.127,725,2.873,727,3.536,728,3.536,729,3.842,749,1.275,829,4.577,831,4.107,838,2.379,839,3.662,840,3.662,850,2.934,892,5.516,893,5.975,894,5.975,895,2.934,896,2.934,897,3.416,898,3.416,899,3.416,900,2.934,901,2.934,902,3.416,903,4.781,904,3.416,905,4.738,906,5.516,907,3.416,908,3.416,909,5.975,910,6.518,911,4.107,912,4.781,913,4.107]],["title/components/EditMsgTextareaComponent.html",[43,0.101,103,0.554]],["body/components/EditMsgTextareaComponent.html",[3,0.138,4,0.12,5,0.174,8,0.12,9,0.225,10,0.658,14,0.239,15,0.019,16,1.825,17,0.694,18,0.694,19,1.578,20,0.363,26,0.468,27,0.322,28,0.468,29,0.669,30,0.803,31,0.462,32,0.231,35,0.138,36,0.023,41,0.011,42,0.011,43,0.141,44,0.455,45,0.698,46,0.508,47,0.508,48,0.508,50,0.481,51,1.274,52,1.274,53,0.698,54,0.803,55,0.737,57,0.455,59,0.737,61,0.737,67,0.713,72,0.508,77,0.508,78,0.737,79,0.737,80,0.508,81,0.95,82,0.508,83,0.508,84,0.455,85,0.381,86,0.95,87,0.455,88,0.381,89,0.508,90,0.455,91,1.008,92,0.455,93,0.737,94,0.455,95,1.052,96,0.455,97,0.455,98,0.737,99,0.455,100,0.61,101,0.737,102,0.455,103,0.941,104,1.211,105,0.508,106,0.455,107,0.508,108,0.737,109,0.455,110,0.508,111,0.455,112,0.508,113,0.455,114,0.698,115,0.866,116,0.455,117,0.789,118,0.508,119,0.455,120,0.508,121,0.455,122,0.454,123,0.481,124,0.508,125,0.508,126,0.455,127,0.455,128,0.455,129,0.737,130,0.737,131,0.455,132,0.455,133,0.455,134,0.508,135,0.455,136,0.508,137,0.455,138,0.508,139,0.508,140,0.455,141,0.508,142,0.455,143,0.866,144,0.455,145,0.481,146,0.455,147,0.508,148,0.508,149,0.455,150,0.481,151,0.508,152,0.455,153,0.698,154,0.455,155,0.508,156,0.508,157,0.508,161,1.002,177,0.553,190,0.251,225,3.071,292,1.485,329,2.627,403,1.942,449,1.98,462,2.393,523,1.191,538,1.131,582,1.725,585,1.942,629,2.03,639,3.365,652,1.682,722,3.166,725,2.688,738,2.11,749,1.131,913,3.77,914,6.127,915,5.464,916,2.602,917,3.595,918,3.595,919,3.595,920,4.389,921,4.389,922,3.057,923,4.389,924,4.335,925,4.389,926,2.611,927,3.953,928,3.595,929,3.953,930,3.595,931,3.595,932,2.814,933,5.161,934,4.389,935,3.029,936,3.029,937,3.029,938,3.029,939,3.029,940,3.029,941,3.057,942,3.942,943,3.029,944,4.389,945,3.029,946,3.029,947,4.389,948,5.159,949,3.029,950,3.029,951,2.814,952,2.814,953,3.309,954,1.942,955,2.32,956,2.11,957,2.11,958,2.11,959,3.953,960,3.362,961,2.32,962,2.32,963,3.029,964,3.029,965,3.029,966,3.77,967,3.029,968,3.77,969,2.32,970,2.32,971,2.602,972,4.389,973,2.602,974,2.602,975,2.602,976,2.602,977,2.602,978,2.32,979,3.029,980,2.11,981,2.602,982,4.389,983,3.362]],["title/injectables/EventService.html",[0,0.975,845,1.806]],["body/injectables/EventService.html",[0,1.415,2,1.761,3,0.183,4,0.16,5,0.16,8,0.16,9,0.275,10,1.631,14,0.227,15,0.019,16,2.114,17,0.738,18,0.738,20,0.389,26,0.551,27,0.342,28,0.551,29,0.876,30,1.007,31,0.373,32,0.307,33,1.862,34,1.761,35,0.183,36,0.03,37,2.364,41,0.013,42,0.013,85,0.507,88,0.674,122,0.757,145,0.64,153,0.64,177,0.674,190,0.497,215,3.085,254,2.237,561,3.336,845,2.622,984,3.459,985,6.007,986,6.007,987,6.007,988,6.007,989,6.007,990,6.007,991,6.4,992,6.4,993,6.4,994,6.4,995,6.4,996,4.595,997,4.097,998,4.097,999,5.349,1000,4.595,1001,6.4,1002,6.007,1003,5.349,1004,4.027,1005,4.027,1006,4.027,1007,4.027,1008,4.027,1009,4.027,1010,4.027,1011,4.027,1012,5.102,1013,4.027,1014,4.027,1015,4.027,1016,4.027,1017,4.027,1018,4.027,1019,4.027,1020,4.027,1021,4.027,1022,4.027,1023,6.848,1024,4.027,1025,5.497,1026,4.027,1027,4.027,1028,4.027,1029,5.721,1030,4.027,1031,4.027,1032,4.027,1033,4.027,1034,4.027,1035,4.027,1036,4.027,1037,4.027,1038,4.027,1039,4.027,1040,4.027,1041,4.027,1042,4.027,1043,4.027,1044,4.027,1045,2.805,1046,4.027,1047,4.027,1048,4.027,1049,4.027,1050,4.027,1051,4.097]],["title/injectables/FileUploadService.html",[0,0.975,1052,2.567]],["body/injectables/FileUploadService.html",[0,1.296,2,1.547,3,0.161,4,0.141,5,0.289,8,0.223,9,0.252,10,1.633,14,0.225,15,0.02,16,1.428,17,0.748,18,0.748,19,1.416,20,0.37,29,0.717,30,0.502,31,0.392,32,0.27,33,1.636,34,1.547,35,0.161,36,0.027,37,2.153,41,0.012,42,0.012,54,0.502,67,0.617,122,0.507,150,0.562,161,1.283,177,0.617,179,4.097,190,0.465,251,3.038,254,1.965,273,2.36,284,3.92,292,3.229,306,3.914,307,3.92,314,3.914,328,2.915,329,1.547,337,3.369,340,2.401,345,4.208,582,2.209,620,2.71,629,1.636,670,2.754,693,2.71,699,5.803,787,2.464,846,3.141,924,4.646,978,4.304,980,3.914,981,4.208,1052,3.412,1053,3.038,1054,5.62,1055,5.62,1056,4.827,1057,4.827,1058,4.827,1059,4.827,1060,6.066,1061,6.066,1062,6.066,1063,4.899,1064,3.538,1065,3.538,1066,3.538,1067,3.538,1068,6.37,1069,3.538,1070,3.538,1071,4.208,1072,3.538,1073,4.304,1074,3.538,1075,4.208,1076,4.208,1077,3.538,1078,3.538,1079,3.038,1080,3.038,1081,3.038,1082,3.538,1083,3.038,1084,4.646,1085,3.538,1086,3.538,1087,3.538,1088,3.538,1089,3.538,1090,3.538,1091,3.538,1092,3.038,1093,3.538,1094,3.538,1095,3.038,1096,3.538,1097,3.538,1098,3.538,1099,3.538,1100,3.538,1101,3.538,1102,3.538,1103,3.538,1104,3.538,1105,3.538,1106,3.038,1107,4.899,1108,3.538,1109,3.538,1110,3.538,1111,3.038,1112,3.538,1113,3.038,1114,3.538,1115,3.538,1116,3.538,1117,3.538,1118,2.71,1119,4.899,1120,3.538,1121,3.538,1122,4.827,1123,3.538,1124,3.538,1125,3.538,1126,3.538,1127,3.538,1128,3.538,1129,3.538,1130,3.538,1131,3.538,1132,3.538,1133,3.538,1134,4.899,1135,3.538,1136,3.538,1137,3.038,1138,5.21,1139,3.752,1140,5.62,1141,3.538,1142,3.538,1143,6.066,1144,3.538,1145,4.208,1146,4.208,1147,4.899,1148,4.899,1149,4.899,1150,4.899,1151,4.208,1152,3.538,1153,3.538]],["title/components/ForgotPasswordComponent.html",[43,0.101,106,0.554]],["body/components/ForgotPasswordComponent.html",[3,0.155,4,0.136,5,0.136,8,0.136,9,0.246,10,1.039,12,3.065,14,0.214,15,0.019,17,0.611,18,0.662,20,0.344,26,0.283,27,0.283,28,0.283,29,0.404,30,0.485,31,0.439,32,0.26,35,0.155,36,0.026,37,1.957,41,0.012,42,0.012,43,0.151,44,0.514,45,0.76,46,0.573,47,0.573,48,0.573,50,0.543,51,1.285,52,1.285,53,0.76,54,0.679,55,0.803,57,0.514,58,2.873,59,0.803,61,0.803,67,0.602,70,1.275,72,0.573,76,1.153,77,0.573,78,0.803,79,0.803,80,0.573,81,1.003,82,0.573,83,0.573,84,0.514,85,0.43,86,1.003,87,0.514,88,0.43,89,0.573,90,0.514,91,1.056,92,0.514,93,0.803,94,0.514,95,0.76,96,0.514,97,0.514,98,0.803,99,0.514,100,0.652,101,0.803,102,0.514,103,0.514,104,0.76,105,0.573,106,0.898,107,1.123,108,0.803,109,0.514,110,0.573,111,0.514,112,0.573,113,0.514,114,0.76,115,0.926,116,0.514,117,0.602,118,0.573,119,0.514,120,0.573,121,0.514,122,0.354,123,0.543,124,0.573,125,0.573,126,0.514,127,0.514,128,0.514,129,0.803,130,0.803,131,0.514,132,0.514,133,0.514,134,0.573,135,0.514,136,0.573,137,0.514,138,0.573,139,0.573,140,0.514,141,0.573,142,0.514,143,0.573,144,0.514,145,0.543,146,0.514,147,0.573,148,0.573,149,0.514,150,0.543,151,0.573,152,0.514,153,0.76,154,0.514,155,0.573,156,0.573,157,0.573,158,1.28,166,2.703,172,2.845,177,0.602,190,0.283,192,2.85,273,1.614,302,2.19,337,2.656,340,1.674,370,3.082,386,4.062,387,3.792,402,3.555,477,3.064,478,3.319,500,3.112,533,0.948,679,2.379,749,1.275,750,1.494,782,3.282,1106,4.107,1154,3.556,1155,5.864,1156,5.23,1157,2.617,1158,3.842,1159,4.107,1160,4.107,1161,3.842,1162,4.162,1163,4.817,1164,2.19,1165,3.831,1166,3.842,1167,4.107,1168,3.065,1169,3.416,1170,2.343,1171,3.416,1172,3.416,1173,2.845,1174,3.536,1175,3.416,1176,2.617,1177,3.416,1178,2.379,1179,1.897,1180,2.379,1181,2.19,1182,2.379,1183,2.934,1184,4.225,1185,3.662,1186,2.617,1187,2.617,1188,2.934,1189,3.416,1190,2.617,1191,2.617,1192,3.416,1193,2.617,1194,2.617,1195,2.617,1196,2.617,1197,3.842,1198,3.842,1199,3.282,1200,2.934,1201,2.617,1202,2.617,1203,4.162,1204,4.107,1205,4.107,1206,5.975,1207,4.781,1208,3.662,1209,4.107,1210,4.107,1211,4.107]],["title/injectables/GuestUserService.html",[0,0.975,1212,2.363]],["body/injectables/GuestUserService.html",[0,1.134,2,1.283,3,0.133,4,0.117,5,0.117,8,0.117,9,0.22,10,1.58,14,0.224,15,0.02,17,0.325,18,0.325,20,0.349,26,0.53,27,0.329,28,0.53,29,0.775,31,0.354,32,0.224,33,1.357,34,1.283,35,0.133,36,0.022,37,1.521,41,0.011,42,0.011,67,0.92,122,0.444,158,1.257,161,1.157,176,2.247,177,0.54,179,4.409,190,0.243,193,3.971,200,5.434,201,6.324,205,5.839,256,2.043,257,4.269,258,2.519,261,2.247,262,1.881,273,2.566,274,2.519,275,2.519,276,3.284,282,2.519,292,2.101,294,2.749,295,2.519,299,3.881,307,4.364,328,1.745,337,2.381,340,2.483,354,2.519,362,2.519,366,2.519,369,2.519,370,2.732,371,2.519,400,2.519,419,2.519,420,2.519,429,3.529,430,2.749,622,3.573,644,2.247,672,1.881,750,1.283,787,4.13,859,2.247,980,2.043,1118,2.247,1145,2.519,1146,2.519,1208,2.247,1212,2.749,1213,5.917,1214,2.519,1215,5.067,1216,5.067,1217,5.574,1218,4.288,1219,4.288,1220,4.288,1221,5.574,1222,4.288,1223,4.288,1224,4.288,1225,2.933,1226,4.288,1227,2.933,1228,2.933,1229,2.933,1230,4.288,1231,2.933,1232,4.288,1233,2.933,1234,2.933,1235,4.288,1236,2.933,1237,4.288,1238,2.933,1239,4.288,1240,2.933,1241,4.288,1242,2.519,1243,2.519,1244,2.519,1245,2.043,1246,2.933,1247,2.933,1248,3.683,1249,2.519,1250,5.067,1251,5.067,1252,2.519,1253,4.288,1254,4.288,1255,2.519,1256,4.288,1257,2.933,1258,2.247,1259,2.933,1260,2.933,1261,2.933,1262,2.933,1263,2.933,1264,2.933,1265,2.933,1266,2.519,1267,2.933,1268,2.933,1269,2.933,1270,2.933,1271,6.194,1272,5.067,1273,5.93,1274,5.067,1275,5.067,1276,4.288,1277,2.933,1278,2.933,1279,5.93,1280,2.933,1281,5.067,1282,5.067,1283,4.288,1284,5.067,1285,5.93,1286,5.93,1287,5.574,1288,5.93,1289,5.093,1290,5.574,1291,5.574,1292,5.93,1293,5.574,1294,2.933,1295,2.043,1296,2.933,1297,2.933,1298,4.288,1299,3.683,1300,2.519,1301,2.933,1302,2.933,1303,2.933,1304,2.933,1305,2.519,1306,2.933,1307,2.933,1308,2.933,1309,3.683,1310,3.683,1311,3.683,1312,4.288,1313,3.683,1314,4.288,1315,3.683,1316,4.288,1317,3.683,1318,2.933,1319,2.933,1320,2.933,1321,2.933,1322,2.933,1323,2.933,1324,2.933,1325,2.519,1326,2.519,1327,2.933,1328,3.683,1329,2.933,1330,2.933,1331,2.933,1332,2.933,1333,2.933,1334,2.933]],["title/components/ImprintComponent.html",[43,0.101,109,0.554]],["body/components/ImprintComponent.html",[3,0.194,4,0.169,5,0.169,8,0.169,9,0.285,14,0.189,15,0.019,20,0.285,26,0.352,27,0.317,28,0.352,31,0.387,32,0.324,35,0.194,36,0.032,41,0.014,42,0.014,43,0.169,44,0.64,45,0.882,46,0.714,47,0.714,48,0.714,50,0.676,51,1.302,52,1.302,53,0.882,54,0.787,55,0.714,57,0.64,59,0.931,61,0.931,71,2.085,72,0.714,77,0.714,78,0.931,79,0.931,80,0.714,81,1.098,82,0.714,83,0.714,84,0.64,85,0.536,86,1.098,87,0.64,88,0.536,89,0.714,90,0.64,91,1.138,92,0.64,93,0.931,94,0.64,95,0.882,96,0.64,97,0.64,98,0.931,99,0.64,100,0.73,101,0.931,102,0.64,103,0.64,104,0.882,105,0.714,106,0.64,107,0.714,108,0.931,109,0.983,110,0.714,111,0.64,112,0.714,113,0.64,114,0.882,115,1.036,116,0.64,117,0.698,118,0.714,119,0.64,120,0.714,121,0.64,122,0.44,123,0.676,124,0.714,125,0.714,126,0.64,127,0.64,128,0.64,129,0.931,130,0.931,131,0.64,132,0.64,133,0.64,134,0.714,135,0.64,136,0.714,137,0.64,138,0.714,139,0.714,140,0.64,141,0.714,142,0.64,143,0.714,144,0.64,145,0.676,146,0.64,147,0.714,148,0.714,149,0.64,150,0.676,151,0.714,152,0.64,153,0.882,154,0.64,155,0.714,156,0.714,157,0.714,161,1.409,166,2.718,190,0.459,194,4.655,1335,3.655,1336,5.547,1337,5.547,1338,5.547,1339,3.655,1340,4.255,1341,4.255,1342,4.248,1343,5.547,1344,5.547,1345,5.547,1346,5.547,1347,5.547,1348,5.547,1349,5.547,1350,4.255,1351,4.255]],["title/pipes/InputFilterPipe.html",[1352,2.567,1353,2.363]],["body/pipes/InputFilterPipe.html",[3,0.243,4,0.213,5,0.213,14,0.182,15,0.019,20,0.275,26,0.443,27,0.352,28,0.443,29,0.633,31,0.373,32,0.408,35,0.243,36,0.04,37,2.519,41,0.016,42,0.016,50,0.851,53,1.018,54,0.909,67,0.863,177,0.674,273,2.161,1352,4.459,1353,4.104,1354,5.353,1355,5.499,1356,4.597,1357,4.904,1358,5.353,1359,6.402,1360,4.651,1361,5.353,1362,5.883,1363,6.402,1364,4.597,1365,5.353,1366,5.353,1367,6.402,1368,5.353,1369,5.353,1370,6.402,1371,5.353,1372,5.353]],["title/components/LoginComponent.html",[43,0.101,111,0.554]],["body/components/LoginComponent.html",[3,0.142,4,0.124,5,0.124,8,0.124,9,0.23,10,1.14,12,2.872,14,0.216,15,0.019,17,0.635,18,0.701,20,0.358,26,0.258,27,0.269,28,0.258,29,0.62,30,0.442,31,0.465,32,0.238,35,0.142,36,0.023,37,2.156,41,0.011,42,0.011,43,0.143,44,0.469,45,0.712,46,0.523,47,0.523,48,0.523,50,0.495,51,1.277,52,1.277,53,0.712,54,0.636,55,0.752,57,0.469,58,2.732,59,0.752,61,0.752,63,3.164,67,0.66,70,1.163,71,1.528,72,0.523,75,2.171,76,1.052,77,0.523,78,0.752,79,0.752,80,0.523,81,0.963,82,0.523,83,0.523,84,0.469,85,0.392,86,0.963,87,0.469,88,0.392,89,0.523,90,0.469,91,1.02,92,0.469,93,0.752,94,0.469,95,0.712,96,0.469,97,0.469,98,0.752,99,0.469,100,0.62,101,0.752,102,0.469,103,0.469,104,0.712,105,0.523,106,0.469,107,0.523,108,0.752,109,0.469,110,0.523,111,0.862,112,0.523,113,0.469,114,0.712,115,0.88,116,0.469,117,0.564,118,0.523,119,0.469,120,0.523,121,0.469,122,0.323,123,0.495,124,0.523,125,0.523,126,0.469,127,0.469,128,0.469,129,0.752,130,0.752,131,0.469,132,0.469,133,0.469,134,0.523,135,0.469,136,0.523,137,0.469,138,0.523,139,0.523,140,0.469,141,0.523,142,0.469,143,0.523,144,0.469,145,0.495,146,0.469,147,0.523,148,0.523,149,0.469,150,0.495,151,0.523,152,0.469,153,0.712,154,0.469,155,0.523,156,0.523,157,0.523,158,1.243,166,2.196,172,3.12,177,0.564,179,3.763,181,4.925,183,4.925,190,0.258,192,2.766,273,1.771,284,1.854,292,2.196,306,2.171,307,1.854,314,2.171,337,3.185,340,1.528,370,2.196,386,3.412,387,3.185,402,3.412,403,2.872,477,2.913,478,3.185,500,2.987,533,0.865,678,2.665,679,2.171,685,3.848,696,4.017,718,3.653,749,1.163,750,1.363,782,2.665,1154,3.672,1158,3.653,1161,3.653,1162,3.994,1163,4.653,1164,1.998,1165,3.676,1166,3.653,1168,2.872,1170,2.196,1173,2.665,1174,3.363,1176,2.387,1178,2.171,1179,1.731,1180,2.171,1181,1.998,1182,3.121,1184,4.017,1185,3.432,1186,2.387,1187,2.387,1191,2.387,1193,2.387,1194,2.387,1195,2.387,1196,2.387,1197,3.121,1198,2.171,1199,2.665,1201,2.387,1202,2.387,1203,3.121,1205,3.848,1209,2.677,1212,4.055,1305,3.848,1373,2.677,1374,3.653,1375,4.48,1376,4.48,1377,6.075,1378,4.925,1379,4.653,1380,4.48,1381,3.117,1382,3.117,1383,3.117,1384,3.117,1385,3.848,1386,3.117,1387,3.994,1388,3.117,1389,3.117,1390,3.117,1391,2.387,1392,3.117,1393,2.677,1394,2.387,1395,3.117,1396,3.117,1397,2.677,1398,3.117,1399,3.117,1400,3.117,1401,2.677,1402,2.677,1403,2.387,1404,3.117,1405,2.387,1406,2.387,1407,2.387,1408,3.117,1409,5.735,1410,4.48,1411,4.48,1412,4.48,1413,4.48,1414,4.48,1415,4.48,1416,4.48,1417,3.848,1418,4.48]],["title/injectables/LoginService.html",[0,0.975,192,1.612]],["body/injectables/LoginService.html",[0,1.554,2,2.037,3,0.212,4,0.185,5,0.185,8,0.185,9,0.302,14,0.231,15,0.019,16,2.132,17,0.773,18,0.773,19,1.843,20,0.386,29,0.842,30,1.011,31,0.325,32,0.355,33,2.154,34,2.037,35,0.212,36,0.035,41,0.015,42,0.015,54,0.834,177,0.74,190,0.533,192,2.571,1419,4.001,1420,6.44,1421,6.44,1422,6.44,1423,6.44,1424,6.44,1425,6.764,1426,6.764,1427,6.764,1428,6.764,1429,6.764,1430,6.764,1431,5.878,1432,4.658,1433,4.658,1434,4.658,1435,4.658,1436,4.658,1437,4.658,1438,4.658,1439,4.658,1440,4.658,1441,4.658,1442,7.121,1443,6.764,1444,7.121,1445,5.878,1446,5.878,1447,4.001]],["title/components/MainPageComponent.html",[43,0.101,113,0.554]],["body/components/MainPageComponent.html",[3,0.108,4,0.094,5,0.094,8,0.094,9,0.188,14,0.23,15,0.02,16,1.577,17,0.726,18,0.737,19,1.44,20,0.377,26,0.415,27,0.294,28,0.415,29,0.797,30,0.945,31,0.494,32,0.181,35,0.108,36,0.018,41,0.009,42,0.009,43,0.122,44,0.356,45,0.581,46,0.398,47,0.398,48,0.398,50,0.377,51,1.248,52,1.248,53,0.581,54,0.915,55,0.613,57,0.356,58,2.322,59,0.613,61,0.613,67,0.811,70,0.885,72,0.398,76,0.801,77,0.398,78,0.613,79,0.613,80,0.398,81,0.841,82,0.398,83,0.398,84,0.753,85,0.46,86,0.841,87,0.753,88,0.46,89,0.398,90,0.356,91,1.082,92,0.356,93,0.613,94,0.356,95,0.581,96,0.356,97,0.356,98,0.613,99,0.549,100,0.746,101,0.613,102,0.356,103,0.356,104,0.796,105,0.398,106,0.356,107,0.398,108,0.613,109,0.356,110,0.398,111,0.356,112,0.398,113,0.753,114,0.978,115,0.748,116,0.356,117,0.631,118,0.398,119,0.356,120,0.398,121,0.753,122,0.378,123,0.377,124,0.398,125,0.398,126,0.356,127,0.356,128,0.356,129,0.613,130,0.613,131,0.356,132,0.356,133,0.356,134,0.398,135,0.356,136,0.398,137,0.356,138,0.398,139,0.398,140,0.356,141,0.398,142,0.356,143,0.398,144,0.753,145,0.581,146,0.356,147,0.398,148,0.398,149,0.356,150,0.377,151,0.398,152,0.753,153,0.947,154,0.753,155,0.398,156,0.398,157,0.398,158,1.123,161,1.405,165,3.83,176,3.415,177,0.46,190,0.196,197,3.415,255,2.037,449,2.045,451,1.816,454,2.322,462,2.287,476,2.818,519,1.514,520,1.317,523,0.932,524,1.652,525,1.162,526,1.037,533,0.658,538,0.885,561,2.783,568,1.816,582,2.533,598,2.644,638,1.816,707,2.799,725,2.322,749,0.885,782,2.174,844,2.981,845,2.652,852,1.411,871,1.816,905,3.139,997,3.837,998,3.415,1000,3.83,1029,4.648,1051,2.799,1170,1.791,1199,2.174,1249,3.139,1295,2.545,1299,3.139,1360,2.858,1387,3.49,1448,6.326,1449,1.652,1450,2.545,1451,3.415,1452,4.459,1453,4.459,1454,2.799,1455,2.545,1456,4.459,1457,4.459,1458,4.459,1459,4.459,1460,3.982,1461,4.459,1462,4.459,1463,4.459,1464,3.212,1465,2.799,1466,4.459,1467,3.655,1468,4.459,1469,3.655,1470,3.415,1471,3.83,1472,5.01,1473,1.652,1474,3.655,1475,2.371,1476,2.371,1477,2.037,1478,2.371,1479,2.371,1480,2.371,1481,2.371,1482,2.371,1483,3.655,1484,2.371,1485,2.371,1486,2.037,1487,2.371,1488,2.371,1489,2.371,1490,2.371,1491,2.371,1492,2.371,1493,2.371,1494,2.037,1495,2.037,1496,4.459,1497,1.816,1498,1.816,1499,1.816,1500,3.655,1501,2.037,1502,2.037,1503,2.037,1504,2.037,1505,2.037,1506,1.816,1507,3.655,1508,5.01,1509,1.816,1510,2.371,1511,2.371,1512,1.816,1513,2.371,1514,2.371,1515,2.371,1516,2.371,1517,2.371,1518,2.371,1519,2.371,1520,2.371,1521,2.371,1522,2.371,1523,4.459,1524,2.037,1525,2.371,1526,2.371,1527,2.371,1528,2.371,1529,2.037,1530,5.717,1531,5.01,1532,3.655,1533,3.655,1534,3.139,1535,2.799,1536,3.655,1537,3.655,1538,3.655,1539,2.799,1540,3.655,1541,4.91,1542,5.717,1543,3.655,1544,3.655,1545,3.655,1546,3.655,1547,3.139,1548,3.655,1549,2.799,1550,2.799,1551,3.655,1552,3.655,1553,3.655,1554,3.655,1555,5.01,1556,3.655,1557,3.655,1558,3.655,1559,3.655,1560,3.655,1561,3.655,1562,3.655]],["title/classes/Message.html",[36,0.028,117,0.464]],["body/classes/Message.html",[3,0.229,4,0.2,5,0.2,8,0.2,9,0.317,14,0.251,15,0.019,20,0.377,26,0.416,27,0.317,28,0.416,31,0.351,35,0.229,36,0.038,41,0.015,42,0.015,67,0.947,117,0.898,132,1.002,190,0.416,425,2.793,431,2.991,433,4.083,434,2.991,439,2.991,441,2.793,626,4.274,629,2.851,633,3.851,634,3.851,931,4.643,966,4.319,968,4.319,1059,4.319,1084,3.851,1328,5.726,1563,4.319,1564,6.667,1565,6.164,1566,5.028,1567,5.028,1568,5.028,1569,3.966,1570,5.028,1571,5.028,1572,5.028,1573,5.028,1574,5.028,1575,5.028,1576,5.028,1577,5.028,1578,5.028,1579,5.028]],["title/components/MessageLeftComponent.html",[43,0.101,116,0.554]],["body/components/MessageLeftComponent.html",[3,0.098,4,0.085,5,0.085,8,0.134,9,0.174,10,0.735,14,0.246,15,0.02,16,1.734,17,0.747,18,0.747,19,1.66,20,0.373,26,0.428,27,0.295,28,0.475,29,0.679,30,0.844,31,0.466,32,0.164,35,0.098,36,0.016,41,0.008,42,0.008,43,0.114,44,0.323,45,0.538,46,0.36,47,0.36,48,0.36,50,0.341,51,1.235,52,1.235,53,0.538,54,0.674,55,0.568,57,0.323,59,0.568,61,0.568,67,0.888,72,0.36,77,0.36,78,0.568,79,0.568,80,0.36,81,0.797,82,0.36,83,0.36,84,0.323,85,0.27,86,0.797,87,0.323,88,0.27,89,0.36,90,0.323,91,1.052,92,0.323,93,0.568,94,0.323,95,0.538,96,0.508,97,0.629,98,0.568,99,0.323,100,0.611,101,0.568,102,0.323,103,0.323,104,0.538,105,0.36,106,0.323,107,0.36,108,0.568,109,0.323,110,0.36,111,0.323,112,0.36,113,0.323,114,0.538,115,0.702,116,0.714,117,0.84,118,0.36,119,0.323,120,0.36,121,0.323,122,0.35,123,0.341,124,0.36,125,0.36,126,0.323,127,0.323,128,0.323,129,0.568,130,0.568,131,0.323,132,0.825,133,0.323,134,0.36,135,0.323,136,0.36,137,0.323,138,0.36,139,0.36,140,0.323,141,0.36,142,0.323,143,0.36,144,0.323,145,0.341,146,0.323,147,0.921,148,0.36,149,0.323,150,0.341,151,0.36,152,0.323,153,0.538,154,0.323,155,0.36,156,0.36,157,0.36,158,1.231,161,1.398,177,0.426,190,0.178,225,2.489,273,0.725,329,0.939,341,2.012,449,2.022,454,2.179,462,2.037,466,2.013,476,2.69,501,1.192,510,1.277,515,4.669,519,1.401,520,1.192,523,0.844,526,0.939,527,0.844,533,0.596,561,1.192,582,2.553,585,1.376,598,2.195,615,2.814,629,2.751,639,2.99,642,2.914,651,1.118,652,1.192,670,3,672,2.168,678,2.824,722,3.306,750,0.939,825,2.59,844,2.012,845,2.327,846,1.376,852,1.277,917,2.914,918,2.914,919,2.914,922,2.355,926,2.012,927,3.205,928,2.914,929,3.205,930,2.914,931,2.914,932,2.168,941,1.495,942,2.914,951,1.376,952,2.168,953,2.682,954,1.376,955,3.205,956,1.495,957,1.495,958,1.495,959,3.205,960,3.636,961,1.644,962,1.644,969,3.205,970,3.205,983,2.59,1473,1.495,1569,2.012,1580,5.578,1581,1.844,1582,2.904,1583,3.382,1584,3.382,1585,4.436,1586,3.594,1587,2.904,1588,4.077,1589,2.904,1590,4.077,1591,2.904,1592,4.931,1593,3.594,1594,3.205,1595,3.594,1596,4.436,1597,4.436,1598,3.594,1599,3.382,1600,2.147,1601,2.147,1602,2.147,1603,2.147,1604,2.147,1605,2.147,1606,2.147,1607,2.147,1608,2.147,1609,2.147,1610,2.147,1611,2.147,1612,2.147,1613,2.147,1614,2.147,1615,2.147,1616,2.904,1617,2.147,1618,3.636,1619,2.147,1620,1.844,1621,2.147,1622,1.844,1623,2.147,1624,2.147,1625,1.844,1626,2.147,1627,1.844,1628,4.184,1629,2.904,1630,2.147,1631,2.147,1632,1.844,1633,2.59,1634,1.844,1635,1.844,1636,1.844,1637,1.844,1638,2.904,1639,1.644,1640,2.904,1641,1.844,1642,1.844,1643,1.844,1644,2.904,1645,2.904,1646,2.904,1647,2.904,1648,2.904,1649,1.844,1650,1.844,1651,1.844,1652,2.904,1653,2.904,1654,2.904,1655,2.904,1656,2.904,1657,2.355,1658,2.904,1659,4.077,1660,4.077,1661,2.59,1662,4.712,1663,2.904,1664,4.712,1665,2.904,1666,2.59,1667,2.904,1668,2.59,1669,2.59,1670,2.904,1671,2.904]],["title/components/MessageRightComponent.html",[43,0.101,119,0.554]],["body/components/MessageRightComponent.html",[3,0.092,4,0.08,5,0.08,8,0.128,9,0.166,10,0.44,14,0.246,15,0.02,16,1.894,17,0.746,18,0.746,19,1.711,20,0.375,26,0.443,27,0.299,28,0.482,29,0.71,30,0.874,31,0.465,32,0.154,35,0.092,36,0.015,41,0.008,42,0.008,43,0.11,44,0.304,45,0.513,46,0.34,47,0.34,48,0.34,50,0.322,51,1.228,52,1.228,53,0.513,54,0.712,55,0.542,57,0.304,59,0.542,61,0.542,67,0.88,72,0.34,77,0.34,78,0.542,79,0.542,80,0.34,81,0.771,82,0.34,83,0.34,84,0.304,85,0.255,86,0.771,87,0.304,88,0.255,89,0.34,90,0.304,91,1.034,92,0.304,93,0.542,94,0.304,95,0.64,96,0.485,97,0.605,98,0.542,99,0.304,100,0.593,101,0.542,102,0.304,103,0.691,104,0.73,105,0.34,106,0.304,107,0.34,108,0.542,109,0.304,110,0.34,111,0.304,112,0.34,113,0.304,114,0.513,115,0.676,116,0.304,117,0.829,118,0.34,119,0.691,120,0.34,121,0.304,122,0.334,123,0.322,124,0.34,125,0.34,126,0.304,127,0.304,128,0.304,129,0.542,130,0.542,131,0.304,132,0.804,133,0.304,134,0.34,135,0.304,136,0.34,137,0.304,138,0.34,139,0.34,140,0.304,141,0.34,142,0.304,143,0.34,144,0.304,145,0.322,146,0.304,147,0.898,148,0.34,149,0.304,150,0.322,151,0.34,152,0.304,153,0.513,154,0.304,155,0.34,156,0.34,157,0.34,158,1.21,161,1.461,177,0.407,190,0.168,225,2.733,273,0.683,329,1.761,341,1.921,449,2.03,454,2.097,462,2.185,466,1.978,476,2.614,501,1.124,510,1.204,517,4.689,519,1.337,520,1.124,523,0.796,526,0.885,527,0.796,533,0.562,561,1.124,582,2.515,585,1.298,598,2.125,615,2.75,629,2.695,639,2.923,642,2.804,651,1.054,652,1.124,670,2.943,672,2.07,678,2.733,722,3.264,750,0.885,825,2.473,829,2.473,844,1.921,845,2.252,846,1.298,852,1.204,870,2.249,886,2.473,915,1.551,917,2.804,918,2.804,919,2.804,922,2.249,926,1.921,927,3.084,928,2.804,929,3.084,930,2.804,931,2.804,932,2.07,941,1.41,942,2.804,951,2.07,952,2.07,953,2.581,954,1.298,955,3.084,956,1.41,957,1.41,958,1.41,959,3.519,960,3.519,961,1.551,962,1.551,969,3.084,970,3.084,983,2.473,1473,1.41,1569,1.921,1580,5.602,1585,4.311,1586,3.458,1587,2.773,1588,3.946,1589,2.773,1590,3.946,1591,2.773,1592,4.82,1593,3.458,1594,3.084,1595,3.458,1596,4.311,1597,4.311,1598,3.458,1616,2.773,1618,3.519,1620,1.739,1622,1.739,1625,1.739,1627,1.739,1629,2.773,1632,1.739,1633,2.473,1634,1.739,1635,1.739,1636,1.739,1637,1.739,1638,2.773,1639,1.551,1640,2.773,1641,1.739,1642,1.739,1643,1.739,1644,2.773,1645,2.773,1646,2.773,1647,2.773,1648,2.773,1649,1.739,1650,1.739,1651,1.739,1652,2.773,1653,2.773,1654,2.773,1655,2.773,1656,2.773,1657,2.249,1658,2.773,1659,3.946,1660,3.946,1661,2.473,1662,4.594,1663,2.773,1664,4.594,1665,2.773,1666,2.473,1667,2.773,1668,2.473,1669,2.473,1670,2.773,1671,2.773,1672,1.739,1673,3.228,1674,3.228,1675,5.019,1676,3.228,1677,4.594,1678,3.228,1679,2.024,1680,2.024,1681,2.024,1682,2.024,1683,2.024,1684,2.024,1685,2.024,1686,2.024,1687,2.024,1688,2.024,1689,2.024,1690,2.024,1691,2.024,1692,2.024,1693,2.024,1694,2.024,1695,2.024,1696,3.228,1697,2.024,1698,2.024,1699,2.024,1700,2.024,1701,2.024,1702,2.024,1703,2.024,1704,4.594,1705,2.024,1706,2.024,1707,2.024,1708,2.024,1709,2.024,1710,3.228,1711,3.228,1712,3.228]],["title/components/NewMsgBoardComponent.html",[43,0.101,121,0.554]],["body/components/NewMsgBoardComponent.html",[3,0.196,4,0.171,5,0.171,15,0.019,27,0.287,31,0.433,32,0.328,35,0.196,36,0.032,41,0.014,42,0.014,43,0.17,44,0.648,45,0.889,46,0.724,47,0.724,48,0.724,50,0.685,51,1.303,52,1.303,53,0.889,54,0.794,55,0.939,57,0.648,59,0.939,61,0.939,72,0.724,77,0.724,78,0.939,79,0.939,80,0.724,81,1.103,82,0.724,83,0.724,84,0.648,85,0.543,86,1.103,87,0.648,88,0.543,89,0.724,90,0.648,91,1.143,92,0.648,93,0.939,94,0.648,95,0.889,96,0.648,97,0.648,98,0.939,99,0.648,100,0.734,101,0.939,102,0.648,103,0.648,104,1.167,105,0.724,106,0.648,107,0.724,108,0.939,109,0.648,110,0.724,111,0.648,112,0.724,113,0.648,114,1.044,115,1.042,116,0.648,117,0.704,118,0.724,119,0.648,120,0.724,121,0.988,122,0.735,123,0.685,124,0.724,125,0.724,126,0.648,127,0.648,128,0.988,129,0.939,130,0.939,131,0.648,132,0.648,133,0.648,134,0.724,135,0.648,136,0.724,137,0.648,138,0.724,139,0.724,140,0.648,141,0.724,142,0.988,143,0.724,144,0.648,145,0.685,146,0.648,147,0.724,148,0.724,149,0.648,150,0.685,151,0.724,152,0.648,153,0.889,154,0.648,155,0.724,156,0.724,157,0.724,449,1.197,452,2.763,453,3.896,456,3.896,457,3.896,511,3.002,512,2.564,513,3.002,528,3.002,529,2.394,530,3.002,870,3.896,1252,4.804,1512,3.302,1713,3.702]],["title/injectables/OverlayService.html",[0,0.975,63,1.919]],["body/injectables/OverlayService.html",[0,1.631,2,2.202,3,0.229,4,0.2,5,0.2,8,0.2,9,0.317,14,0.243,15,0.019,16,1.467,17,0.739,18,0.739,19,1.554,20,0.378,26,0.511,27,0.317,28,0.511,29,0.789,30,0.947,31,0.351,32,0.384,33,2.328,34,2.202,35,0.229,36,0.038,41,0.015,42,0.015,63,3.213,67,0.634,177,0.777,190,0.552,284,3.67,291,4.324,294,3.228,408,3.507,1387,4.297,1714,4.324,1715,6.169,1716,6.169,1717,6.169,1718,6.953,1719,6.169,1720,6.169,1721,6.169,1722,5.035,1723,6.169,1724,5.035,1725,5.971,1726,6.169,1727,5.035,1728,5.035,1729,5.035,1730,5.035,1731,5.035,1732,5.035,1733,6.169,1734,6.169,1735,6.169,1736,5.035,1737,5.035]],["title/classes/PrivateChat.html",[36,0.028,1045,2.567]],["body/classes/PrivateChat.html",[3,0.248,4,0.216,5,0.216,8,0.216,9,0.332,14,0.243,15,0.019,20,0.367,26,0.451,27,0.28,28,0.451,35,0.248,36,0.041,41,0.016,42,0.016,67,0.899,190,0.451,425,3.026,430,4.424,431,3.241,433,3.965,434,3.241,439,3.241,441,3.026,445,4.679,446,4.679,625,5.286,626,4.424,629,2.992,632,4.679,633,4.173,634,4.173,1045,4.506,1738,4.679,1739,6.47,1740,5.448,1741,5.448]],["title/classes/Reaction.html",[36,0.028,1569,2.193]],["body/classes/Reaction.html",[3,0.253,4,0.221,5,0.221,8,0.221,9,0.336,14,0.237,15,0.019,20,0.358,26,0.46,27,0.286,28,0.46,35,0.253,36,0.042,41,0.016,42,0.016,67,0.905,190,0.46,425,3.089,431,3.309,433,3.866,434,3.309,439,3.309,1569,3.896,1618,5.332,1633,5.332,1742,4.777,1743,6.549,1744,5.562,1745,5.562,1746,5.562,1747,5.562,1748,5.562]],["title/components/ResetPasswordComponent.html",[43,0.101,126,0.554]],["body/components/ResetPasswordComponent.html",[3,0.146,4,0.128,5,0.128,8,0.128,9,0.235,10,0.994,12,2.933,14,0.224,15,0.019,17,0.644,18,0.644,20,0.36,26,0.266,27,0.274,28,0.266,29,0.541,30,0.649,31,0.459,32,0.245,35,0.146,36,0.024,37,2.18,41,0.011,42,0.011,43,0.146,44,0.482,45,0.727,46,0.539,47,0.539,48,0.539,50,0.51,51,1.279,52,1.279,53,0.727,54,0.649,55,0.768,57,0.482,58,2.777,59,0.768,61,0.768,67,0.576,70,1.198,71,1.573,72,0.539,76,1.084,77,0.539,78,0.768,79,0.768,80,0.539,81,0.976,82,0.539,83,0.539,84,0.482,85,0.404,86,0.976,87,0.482,88,0.404,89,0.539,90,0.482,91,1.031,92,0.482,93,0.768,94,0.482,95,0.727,96,0.482,97,0.482,98,0.768,99,0.482,100,0.63,101,0.768,102,0.482,103,0.482,104,0.727,105,0.539,106,0.482,107,0.539,108,0.768,109,0.482,110,0.539,111,0.482,112,0.539,113,0.482,114,0.727,115,0.895,116,0.482,117,0.576,118,0.539,119,0.482,120,0.539,121,0.482,122,0.332,123,0.51,124,0.539,125,0.539,126,0.874,127,0.988,128,0.482,129,0.768,130,0.768,131,0.482,132,0.482,133,0.482,134,0.539,135,0.482,136,0.539,137,0.482,138,0.539,139,0.539,140,0.482,141,0.539,142,0.482,143,0.539,144,0.482,145,0.51,146,0.482,147,0.539,148,0.539,149,0.482,150,0.51,151,0.539,152,0.482,153,0.727,154,0.482,155,0.539,156,0.539,157,0.539,158,1.255,161,1.218,172,3.8,177,0.576,190,0.266,192,2.793,194,4.447,273,2.074,294,2.058,309,2.459,328,2.722,370,1.573,477,2.961,478,3.228,500,3.027,533,0.891,749,1.198,750,1.404,782,1.91,1137,2.757,1157,2.459,1158,3.714,1159,3.93,1160,3.93,1161,3.714,1162,4.048,1164,2.058,1165,3.726,1166,3.714,1167,2.757,1168,2.933,1170,2.242,1173,2.722,1174,3.418,1178,2.236,1179,1.783,1180,2.236,1181,2.058,1182,3.187,1190,2.459,1197,2.236,1199,2.722,1203,4.449,1204,3.93,1210,3.93,1211,2.757,1258,2.459,1342,3.505,1374,3.714,1379,4.706,1391,2.459,1403,2.459,1405,4.706,1406,4.084,1407,2.459,1535,2.459,1749,6.089,1750,6.089,1751,4.449,1752,5.812,1753,6.144,1754,4.576,1755,3.21,1756,3.21,1757,3.21,1758,3.21,1759,3.21,1760,4.576,1761,3.21,1762,3.21,1763,3.21,1764,3.21,1765,3.21,1766,3.21,1767,2.757,1768,3.21,1769,3.21,1770,2.757,1771,2.757,1772,2.757,1773,2.757,1774,2.757,1775,5.812,1776,4.576,1777,4.576,1778,4.576,1779,3.21,1780,3.21,1781,3.21,1782,3.21,1783,3.21,1784,3.21,1785,3.21,1786,3.21,1787,3.21,1788,3.21,1789,3.21,1790,3.93]],["title/injectables/ResetPasswordService.html",[0,0.975,1751,2.567]],["body/injectables/ResetPasswordService.html",[0,1.563,2,2.054,3,0.214,4,0.187,5,0.187,8,0.187,9,0.303,10,1.607,14,0.201,15,0.019,17,0.655,18,0.655,20,0.359,26,0.389,27,0.348,28,0.389,29,0.699,30,0.667,31,0.473,32,0.358,33,2.172,34,2.054,35,0.214,36,0.035,37,2.294,41,0.017,42,0.015,67,0.88,70,1.753,97,0.706,100,0.555,122,0.669,127,0.706,158,1.333,161,1.476,166,2.896,172,3.515,177,0.744,190,0.535,193,3.011,262,3.011,264,4.034,273,2.182,378,4.034,418,4.034,1170,2.896,1245,3.271,1387,3.271,1447,5.075,1751,4.115,1791,6.129,1792,4.034,1793,6.465,1794,5.909,1795,6.784,1796,5.909,1797,5.909,1798,6.465,1799,4.697,1800,4.697,1801,4.697,1802,4.697,1803,4.697,1804,5.909,1805,4.697,1806,4.697,1807,4.697,1808,4.697,1809,4.697,1810,4.697,1811,4.697,1812,4.697,1813,4.697,1814,4.697,1815,4.697,1816,4.697,1817,4.697,1818,4.697,1819,4.697,1820,4.697,1821,4.697,1822,4.697,1823,4.697]],["title/components/SearchInputComponent.html",[43,0.101,128,0.554]],["body/components/SearchInputComponent.html",[3,0.147,4,0.128,5,0.128,8,0.128,9,0.236,10,0.702,14,0.218,15,0.019,17,0.646,18,0.646,19,1.612,20,0.357,26,0.381,27,0.299,28,0.381,29,0.633,30,0.759,31,0.47,32,0.246,35,0.147,36,0.024,41,0.011,42,0.011,43,0.146,44,0.486,45,0.731,46,0.542,47,0.542,48,0.542,50,0.514,51,1.28,52,1.28,53,0.731,54,0.827,55,0.772,57,0.486,59,0.772,61,0.772,67,0.734,72,0.542,77,0.542,78,0.772,79,0.772,80,0.542,81,0.978,82,0.542,83,0.542,84,0.486,85,0.776,86,0.978,87,0.486,88,0.407,89,0.542,90,0.486,91,1.034,92,0.486,93,0.772,94,0.486,95,0.731,96,0.486,97,0.486,98,0.772,99,0.486,100,0.796,101,0.772,102,0.486,103,0.486,104,0.731,105,0.542,106,0.486,107,0.542,108,0.772,109,0.486,110,0.542,111,0.486,112,0.542,113,0.486,114,0.731,115,0.898,116,0.486,117,0.579,118,0.542,119,0.486,120,0.542,121,0.486,122,0.334,123,0.514,124,0.542,125,0.542,126,0.486,127,0.486,128,0.876,129,1.13,130,0.772,131,0.486,132,0.486,133,0.486,134,0.542,135,0.486,136,0.542,137,0.486,138,0.542,139,0.542,140,0.486,141,0.542,142,0.486,143,0.542,144,0.486,145,0.514,146,0.486,147,0.542,148,0.542,149,0.486,150,0.514,151,0.542,152,0.486,153,0.85,154,0.876,155,0.542,156,0.542,157,0.542,161,1.407,177,0.579,190,0.267,449,1.951,462,2.465,466,2.201,523,1.27,525,1.583,526,1.413,527,1.27,529,3.903,532,2.25,538,1.206,598,2.696,674,3.202,722,2.253,725,2.787,749,1.206,844,3.183,845,2.857,852,1.922,1295,2.25,1353,3.43,1357,4.465,1360,4.222,1465,3.521,1470,4.465,1471,5.006,1477,2.775,1539,4.465,1547,3.948,1550,3.521,1657,3.202,1824,5.383,1825,2.475,1826,3.948,1827,3.948,1828,5.351,1829,5.351,1830,5.351,1831,2.775,1832,3.948,1833,3.231,1834,3.231,1835,3.231,1836,4.597,1837,2.775,1838,3.231,1839,2.775,1840,2.775,1841,2.775,1842,4.597,1843,4.596,1844,4.597,1845,4.597,1846,4.597,1847,3.231,1848,2.775,1849,2.775,1850,3.231,1851,3.231,1852,3.231,1853,3.948,1854,4.597,1855,5.006,1856,3.948,1857,4.597,1858,3.948,1859,4.597]],["title/components/SearchMemberInputComponent.html",[43,0.101,131,0.554]],["body/components/SearchMemberInputComponent.html",[3,0.145,4,0.127,5,0.127,8,0.261,9,0.234,14,0.233,15,0.019,16,0.931,17,0.505,18,0.505,19,0.805,20,0.351,26,0.508,27,0.337,28,0.508,29,0.686,30,0.647,31,0.468,32,0.243,35,0.145,36,0.024,37,1.887,41,0.011,42,0.011,43,0.145,44,0.48,45,0.725,46,0.536,47,0.536,48,0.536,50,0.508,51,1.279,52,1.279,53,0.725,54,0.755,55,0.765,57,0.48,59,0.765,61,0.765,67,0.67,72,0.536,76,1.078,77,0.536,78,0.765,79,0.765,80,0.536,81,0.973,82,0.536,83,0.536,84,0.48,85,0.402,86,0.973,87,0.48,88,0.402,89,0.536,90,0.48,91,1.029,92,0.48,93,0.765,94,0.48,95,0.725,96,0.48,97,0.48,98,0.765,99,0.48,100,0.861,101,0.765,102,0.48,103,0.48,104,0.725,105,0.536,106,0.48,107,0.536,108,0.765,109,0.48,110,0.536,111,0.48,112,0.536,113,0.48,114,0.725,115,0.893,116,0.48,117,0.574,118,0.536,119,0.48,120,0.536,121,0.48,122,0.331,123,0.508,124,0.536,125,0.536,126,0.48,127,0.48,128,0.48,129,1.127,130,0.765,131,0.872,132,1.134,133,0.48,134,0.536,135,0.48,136,0.536,137,0.48,138,0.536,139,0.536,140,0.48,141,0.536,142,0.48,143,0.536,144,0.48,145,0.508,146,0.48,147,0.536,148,0.536,149,0.48,150,0.508,151,0.536,152,0.48,153,0.845,154,0.872,155,0.536,156,0.536,157,0.536,161,1.401,177,0.574,190,0.264,441,1.774,442,2.225,449,1.924,455,3.704,462,2.459,466,2.195,468,3.916,481,2.744,483,3.916,523,1.255,525,1.566,526,1.397,527,1.255,529,3.848,532,2.225,538,1.192,582,1.255,598,2.682,629,2.109,670,1.566,674,3.176,722,2.606,725,2.769,749,1.192,761,5.267,1092,2.744,1353,3.409,1357,3.493,1360,3.931,1539,3.493,1657,3.176,1824,5.307,1825,2.447,1826,3.916,1827,3.916,1831,2.744,1832,3.916,1837,2.744,1839,3.916,1840,2.744,1841,2.744,1843,2.744,1853,3.916,1855,3.916,1856,3.916,1860,4.56,1861,4.56,1862,4.56,1863,4.56,1864,3.194,1865,3.194,1866,3.194,1867,3.194,1868,3.916,1869,3.194,1870,3.194,1871,3.194,1872,3.194,1873,3.194,1874,3.194,1875,3.194,1876,3.194,1877,3.194,1878,3.194,1879,3.194,1880,3.194,1881,3.194,1882,3.194,1883,3.194,1884,4.56,1885,4.56,1886,4.56]],["title/injectables/SearchService.html",[0,0.975,1460,2.567]],["body/injectables/SearchService.html",[0,1.287,2,1.532,3,0.159,4,0.139,5,0.139,8,0.139,9,0.25,10,1.595,14,0.247,15,0.02,17,0.761,18,0.761,20,0.375,26,0.525,27,0.326,28,0.525,29,0.751,31,0.458,32,0.267,33,1.62,34,1.532,35,0.159,36,0.026,37,2.331,41,0.012,42,0.012,67,0.924,70,1.308,85,0.613,88,0.441,117,0.827,122,0.504,158,1.291,177,0.613,179,3.908,190,0.463,193,4.212,215,4.282,254,1.946,256,2.44,262,2.246,273,2.501,292,1.717,307,3.776,336,3.009,337,3.105,340,2.385,341,2.084,343,3.009,370,1.717,462,2.331,466,2.111,615,1.717,618,2.44,622,2.246,625,3.727,696,2.683,870,3.389,1025,4.179,1095,3.009,1111,3.009,1170,2.385,1199,2.084,1208,4.282,1243,3.009,1244,3.009,1245,2.44,1248,4.179,1258,2.683,1309,4.179,1310,3.009,1311,3.009,1313,3.009,1315,4.179,1317,3.009,1325,4.179,1326,3.009,1360,3.873,1394,2.683,1460,3.389,1470,3.727,1534,4.802,1549,2.683,1666,2.683,1858,3.009,1887,3.009,1888,5.591,1889,5.591,1890,6.347,1891,6.347,1892,4.866,1893,4.866,1894,4.866,1895,4.866,1896,3.503,1897,4.866,1898,3.503,1899,4.866,1900,3.503,1901,3.503,1902,4.866,1903,3.503,1904,4.866,1905,3.503,1906,4.866,1907,3.503,1908,3.503,1909,3.503,1910,4.866,1911,3.503,1912,4.179,1913,3.503,1914,3.503,1915,3.503,1916,3.503,1917,4.866,1918,3.503,1919,3.503,1920,3.503,1921,3.503,1922,3.503,1923,3.503,1924,3.503,1925,3.503,1926,3.503,1927,5.591,1928,5.591,1929,3.503,1930,3.503,1931,3.503,1932,4.866,1933,3.503,1934,3.503,1935,3.503,1936,3.503,1937,3.503,1938,3.503,1939,3.503,1940,3.503,1941,3.503,1942,3.503,1943,3.503,1944,3.503,1945,3.503,1946,3.503,1947,3.503,1948,3.503,1949,3.503,1950,3.503,1951,3.503,1952,3.503,1953,3.009,1954,4.866,1955,3.503,1956,5.591,1957,3.503,1958,3.503,1959,4.179,1960,3.503,1961,3.503,1962,3.503,1963,3.503,1964,3.503,1965,3.503,1966,3.503]],["title/components/SignupComponent.html",[43,0.101,133,0.554]],["body/components/SignupComponent.html",[3,0.14,4,0.122,5,0.122,8,0.122,9,0.228,10,0.965,12,2.847,14,0.227,15,0.019,17,0.67,18,0.698,20,0.361,26,0.368,27,0.341,28,0.368,29,0.525,30,0.63,31,0.439,32,0.235,35,0.14,36,0.023,37,2.358,41,0.011,42,0.011,43,0.142,44,0.463,45,0.706,46,0.517,47,0.517,48,0.517,50,0.489,51,1.275,52,1.275,53,0.706,54,0.63,55,0.745,57,0.463,58,2.713,59,0.745,61,0.745,67,0.817,68,2.847,70,1.149,71,1.509,72,0.517,76,1.039,77,0.517,78,0.745,79,0.745,80,0.517,81,0.957,82,0.517,83,0.517,84,0.463,85,0.388,86,0.957,87,0.463,88,0.388,89,0.517,90,0.463,91,1.015,92,0.463,93,0.745,94,0.463,95,0.706,96,0.463,97,0.463,98,0.745,99,0.463,100,0.616,101,0.745,102,0.463,103,0.463,104,0.706,105,0.517,106,0.463,107,0.517,108,0.745,109,0.463,110,0.517,111,0.463,112,0.517,113,0.463,114,0.706,115,0.874,116,0.463,117,0.559,118,0.517,119,0.463,120,0.517,121,0.463,122,0.319,123,0.489,124,0.517,125,0.517,126,0.463,127,0.463,128,0.463,129,0.745,130,0.745,131,0.463,132,0.463,133,0.857,134,0.517,135,0.463,136,0.517,137,0.463,138,0.517,139,0.517,140,0.463,141,0.517,142,0.463,143,0.517,144,0.463,145,0.489,146,0.463,147,0.517,148,0.517,149,0.463,150,0.489,151,0.517,152,0.463,153,0.706,154,0.463,155,0.517,156,0.517,157,0.517,158,1.237,166,2.794,172,3.596,177,0.559,190,0.255,192,2.754,273,1.925,301,3.093,302,2.847,309,3.401,328,1.831,329,2.493,340,1.509,341,2.642,370,2.553,386,3.392,387,3.167,402,3.392,403,2.847,405,3.093,477,2.893,478,3.167,500,2.97,533,0.855,678,2.642,679,2.144,718,3.628,749,1.149,750,1.346,769,3.814,782,3.099,785,4.474,911,3.814,1154,3.696,1158,3.628,1161,3.628,1162,3.093,1163,4.63,1164,1.974,1165,3.655,1166,3.628,1168,2.847,1170,2.176,1173,2.642,1174,3.339,1176,2.358,1178,2.144,1179,1.71,1180,2.144,1181,1.974,1182,3.628,1183,2.644,1184,3.989,1185,3.401,1186,2.358,1187,2.358,1188,2.644,1190,2.358,1191,2.358,1193,2.358,1194,2.358,1195,2.358,1196,2.358,1197,3.628,1198,2.144,1199,3.392,1200,2.644,1201,2.358,1202,2.358,1203,2.144,1374,3.628,1378,4.897,1379,4.63,1391,2.358,1397,2.644,1401,2.644,1402,2.644,1403,2.358,1405,2.358,1406,2.358,1407,2.358,1417,3.814,1535,2.358,1661,3.401,1767,2.644,1770,2.644,1771,2.644,1772,2.644,1773,2.644,1774,2.644,1967,2.644,1968,4.44,1969,4.44,1970,4.44,1971,6.045,1972,4.44,1973,4.44,1974,3.078,1975,3.078,1976,3.078,1977,3.078,1978,3.078,1979,3.078,1980,3.078,1981,3.078,1982,3.078,1983,3.078,1984,3.078,1985,2.644,1986,3.078,1987,2.644,1988,3.078,1989,3.078,1990,3.078,1991,3.078,1992,4.897,1993,4.44,1994,4.44,1995,4.44]],["title/components/SignuppictureComponent.html",[43,0.101,135,0.554]],["body/components/SignuppictureComponent.html",[3,0.141,4,0.123,5,0.123,8,0.123,9,0.229,10,0.971,14,0.222,15,0.019,17,0.495,18,0.495,19,1.442,20,0.348,26,0.37,27,0.294,28,0.37,29,0.528,30,0.441,31,0.465,32,0.237,35,0.141,36,0.023,41,0.011,42,0.011,43,0.143,44,0.467,45,0.71,46,0.521,47,0.521,48,0.521,50,0.494,51,1.276,52,1.276,53,0.71,54,0.743,55,0.75,57,0.467,59,0.75,61,0.521,63,3.586,67,0.563,71,1.522,72,0.521,75,2.163,76,1.048,77,0.521,78,0.75,79,0.75,80,0.521,81,0.961,82,0.521,83,0.521,84,0.467,85,0.391,86,0.961,87,0.467,88,0.391,89,0.521,90,0.467,91,1.018,92,0.467,93,0.75,94,0.467,95,0.71,96,0.467,97,0.467,98,0.75,99,0.467,100,0.619,101,0.75,102,0.467,103,0.467,104,0.71,105,0.521,106,0.467,107,0.521,108,0.75,109,0.467,110,0.521,111,0.467,112,0.521,113,0.467,114,0.71,115,0.879,116,0.467,117,0.563,118,0.521,119,0.467,120,0.521,121,0.467,122,0.321,123,0.494,124,0.521,125,0.521,126,0.467,127,0.467,128,0.467,129,0.75,130,0.75,131,0.467,132,0.467,133,0.467,134,0.521,135,0.86,136,0.521,137,0.467,138,0.75,139,0.521,140,0.467,141,0.75,142,0.467,143,0.521,144,0.467,145,0.494,146,0.467,147,0.521,148,0.521,149,0.467,150,0.494,151,0.521,152,0.467,153,0.71,154,0.467,155,0.521,156,0.521,157,0.521,158,1.37,161,1.549,177,0.563,179,3.114,185,4.916,190,0.257,192,2.913,194,4.27,284,1.847,292,2.19,306,2.163,307,1.847,311,2.163,312,2.667,314,2.163,331,2.667,334,2.378,337,1.724,361,2.667,370,1.522,375,2.667,387,1.724,477,2.907,478,3.179,500,1.617,533,0.862,564,5.425,582,1.22,682,2.667,693,3.422,749,1.668,750,1.358,792,3.837,887,2.667,1118,4.009,1139,3.422,1151,3.837,1154,3.586,1164,1.99,1165,3.67,1168,2.864,1174,3.355,1179,1.724,1181,1.99,1198,2.163,1300,2.667,1362,3.837,1451,4.009,1455,2.163,1725,3.837,1953,2.667,1985,3.837,1987,2.667,1996,3.105,1997,2.667,1998,4.468,1999,5.234,2000,5.234,2001,4.468,2002,5.234,2003,5.234,2004,5.234,2005,4.468,2006,3.105,2007,3.105,2008,3.105,2009,3.105,2010,5.234,2011,4.468,2012,4.468,2013,4.468,2014,4.468,2015,4.468,2016,4.468,2017,3.105,2018,3.105,2019,3.105,2020,3.105,2021,3.105,2022,3.105,2023,3.105,2024,3.105,2025,3.105,2026,3.105,2027,3.105,2028,3.105,2029,3.105,2030,3.105,2031,3.105,2032,5.234,2033,3.105,2034,3.105,2035,2.667,2036,3.105,2037,2.667,2038,3.105,2039,3.105,2040,2.667,2041,4.468,2042,4.468,2043,4.468,2044,4.468,2045,4.468,2046,4.468,2047,4.468,2048,3.105,2049,5.234,2050,4.468,2051,5.209,2052,4.468,2053,4.468,2054,2.667,2055,2.667,2056,2.667,2057,3.105,2058,5.724,2059,6.065,2060,4.468,2061,4.468,2062,4.468,2063,3.105,2064,5.234,2065,4.468,2066,3.105,2067,3.105,2068,4.468,2069,3.105,2070,3.105,2071,3.105,2072,3.105,2073,3.105,2074,3.105,2075,3.105,2076,3.105,2077,3.837,2078,4.468,2079,3.105,2080,3.105,2081,3.105,2082,3.105,2083,4.468,2084,3.105,2085,2.667,2086,3.105,2087,2.667]],["title/components/StartAnimationComponent.html",[43,0.101,137,0.554]],["body/components/StartAnimationComponent.html",[1,4.51,3,0.139,4,0.121,5,0.121,8,0.121,9,0.227,10,0.959,13,4.452,14,0.177,15,0.019,16,1.756,17,0.338,18,0.338,19,1.112,20,0.352,26,0.365,27,0.292,28,0.365,29,0.784,30,0.941,31,0.362,32,0.233,35,0.139,36,0.023,41,0.011,42,0.011,43,0.142,44,0.459,45,0.701,46,0.512,47,0.512,48,0.512,50,0.485,51,1.286,52,1.275,53,0.701,54,0.806,55,0.741,57,0.459,59,0.741,61,0.741,68,2.829,72,0.512,76,1.03,77,0.512,78,0.741,79,0.953,80,0.512,81,0.953,82,0.512,83,0.512,84,0.459,85,0.384,86,0.953,87,0.459,88,0.384,89,0.512,90,0.459,91,1.011,92,0.459,93,0.741,94,0.459,95,0.701,96,0.459,97,0.459,98,0.741,99,0.459,100,0.613,101,0.741,102,0.459,103,0.459,104,0.701,105,0.512,106,0.459,107,0.512,108,0.741,109,0.459,110,0.512,111,0.459,112,0.512,113,0.459,114,0.701,115,0.87,116,0.459,117,0.556,118,0.512,119,0.459,120,0.512,121,0.459,122,0.316,123,0.485,124,0.512,125,0.512,126,0.459,127,0.459,128,0.459,129,0.741,130,0.741,131,0.459,132,0.459,133,0.459,134,0.512,135,0.459,136,0.512,137,0.854,138,1.087,139,0.512,140,0.459,141,0.512,142,0.459,143,0.512,144,0.459,145,0.485,146,0.459,147,0.512,148,0.512,149,0.459,150,0.485,151,0.512,152,0.459,153,0.701,154,0.459,155,0.512,156,0.512,157,0.512,177,0.556,190,0.365,273,2.345,311,3.956,477,2.451,478,3.154,718,3.611,819,5.175,886,3.38,1012,2.338,1154,3.618,1266,2.622,1464,3.641,1582,3.791,2051,4.878,2054,3.791,2055,4.452,2056,3.791,2077,5.394,2085,4.878,2088,5.967,2089,5.321,2090,2.622,2091,4.413,2092,4.413,2093,4.413,2094,5.679,2095,5.679,2096,5.679,2097,5.679,2098,5.679,2099,4.413,2100,5.679,2101,3.053,2102,4.413,2103,3.053,2104,3.053,2105,3.053,2106,3.053,2107,3.053,2108,3.053,2109,4.413,2110,3.053,2111,3.053,2112,3.053,2113,3.053,2114,3.053,2115,3.053,2116,5.184,2117,3.053,2118,3.053,2119,3.053,2120,3.053,2121,3.053,2122,3.053,2123,3.053,2124,3.053,2125,3.053,2126,3.053,2127,3.053,2128,3.053,2129,5.679,2130,4.413,2131,7.143,2132,4.413,2133,5.679,2134,5.184,2135,4.413,2136,4.413,2137,3.053,2138,4.413,2139,4.413,2140,3.053,2141,4.413,2142,3.053,2143,4.413,2144,4.413,2145,4.413,2146,3.053,2147,4.413,2148,5.184,2149,3.053,2150,3.053,2151,3.053,2152,6.63,2153,3.053,2154,3.053,2155,4.413,2156,3.053,2157,3.053,2158,3.053,2159,4.413,2160,3.053,2161,3.053,2162,3.053,2163,3.053,2164,3.053,2165,3.053,2166,3.053,2167,3.053,2168,3.053,2169,3.053]],["title/components/StartingPageComponent.html",[43,0.101,140,0.554]],["body/components/StartingPageComponent.html",[3,0.166,4,0.145,5,0.145,8,0.145,9,0.257,14,0.22,15,0.019,17,0.633,18,0.633,20,0.342,26,0.302,27,0.293,28,0.302,29,0.432,30,0.518,31,0.509,32,0.278,35,0.166,36,0.027,41,0.012,42,0.012,43,0.156,44,0.549,45,0.796,46,0.613,47,0.613,48,0.613,50,0.58,51,1.291,52,1.291,53,0.796,54,0.711,55,0.84,57,0.549,58,2.976,59,0.84,61,0.84,68,3.21,70,1.363,71,1.789,72,0.613,76,1.232,77,0.613,78,0.84,79,0.84,80,0.613,81,1.032,82,0.613,83,0.613,84,0.549,85,0.46,86,1.032,87,0.549,88,0.46,89,0.613,90,0.549,91,1.081,92,0.549,93,0.84,94,0.549,95,0.796,96,0.549,97,0.549,98,0.84,99,0.549,100,0.676,101,0.84,102,0.549,103,0.549,104,0.796,105,0.613,106,0.924,107,0.84,108,0.84,109,0.549,110,0.613,111,0.924,112,0.613,113,0.549,114,0.796,115,0.959,116,0.549,117,0.63,118,0.613,119,0.549,120,0.613,121,0.549,122,0.378,123,0.58,124,0.613,125,0.613,126,0.549,127,0.549,128,0.549,129,0.84,130,0.84,131,0.549,132,0.549,133,0.924,134,0.613,135,0.924,136,0.613,137,0.924,138,0.84,139,0.613,140,0.924,141,1.144,142,0.549,143,0.613,144,0.549,145,0.58,146,0.549,147,0.613,148,0.613,149,0.924,150,0.58,151,0.613,152,0.549,153,0.796,154,0.549,155,0.613,156,0.613,157,0.613,158,1.307,161,1.143,177,0.63,190,0.302,192,2.91,194,4.513,405,3.487,533,1.014,538,1.363,620,3.835,725,2.976,749,1.363,1154,3.549,1156,2.796,1170,2.454,1173,2.979,1179,2.028,1212,4.266,1339,3.136,1342,3.835,1374,3.98,1385,4.3,1393,3.136,1394,2.796,1449,2.543,1450,3.487,1454,3.835,1455,3.487,1464,3.941,1497,2.796,1498,2.796,1499,2.796,1502,3.136,1504,3.136,1790,4.3,1992,4.3,2089,2.796,2170,5.852,2171,3.651,2172,3.651,2173,3.651,2174,3.651,2175,3.651,2176,3.651,2177,2.796,2178,3.651,2179,3.651,2180,3.651]],["title/components/TextareaMainPageComponent.html",[43,0.101,142,0.554]],["body/components/TextareaMainPageComponent.html",[3,0.112,4,0.098,5,0.098,8,0.218,9,0.193,10,0.534,14,0.243,15,0.019,16,1.896,17,0.689,18,0.689,19,1.729,20,0.368,26,0.48,27,0.319,28,0.48,29,0.685,30,0.823,31,0.479,32,0.187,35,0.112,36,0.018,41,0.009,42,0.009,43,0.125,44,0.369,45,0.597,46,0.412,47,0.412,48,0.412,50,0.39,51,1.252,52,1.252,53,0.597,54,0.883,55,0.63,57,0.369,59,0.63,61,0.63,67,0.73,72,0.412,76,1.267,77,0.412,78,0.63,79,0.63,80,0.412,81,0.857,82,0.412,83,0.412,84,0.369,85,0.309,86,0.857,87,0.369,88,0.309,89,0.412,90,0.369,91,0.923,92,0.369,93,0.63,94,0.369,95,0.597,96,0.369,97,0.369,98,0.63,99,0.369,100,0.65,101,0.63,102,0.369,103,0.369,104,0.597,105,0.412,106,0.369,107,0.412,108,0.63,109,0.369,110,0.412,111,0.369,112,0.412,113,0.369,114,1.211,115,0.765,116,0.369,117,0.819,118,0.412,119,0.369,120,0.412,121,0.369,122,0.528,123,0.39,124,0.412,125,0.412,126,0.369,127,0.369,128,0.369,129,0.63,130,0.63,131,0.369,132,0.685,133,0.369,134,0.412,135,0.369,136,0.412,137,0.369,138,0.412,139,0.412,140,0.369,141,0.412,142,0.767,143,1.012,144,0.369,145,0.39,146,0.369,147,0.412,148,0.412,149,0.369,150,0.39,151,0.412,152,0.369,153,0.724,154,0.767,155,0.412,156,0.412,157,0.412,158,1.185,161,1.511,177,0.473,190,0.203,225,3.036,273,0.829,329,2.638,449,1.998,455,3.174,462,2.262,466,2.09,474,2.615,512,4.281,523,0.965,525,1.204,526,1.074,527,0.965,533,0.682,538,0.917,582,0.965,595,3.225,596,3.225,598,1.736,601,3.225,615,1.204,618,1.711,626,1.575,639,3.388,652,1.364,722,3.048,725,2.374,738,1.711,749,0.917,858,2.11,863,2.11,917,3.174,918,3.174,919,3.174,922,2.615,924,3.909,926,2.234,928,2.615,930,3.554,932,2.407,941,2.615,942,3.554,948,5.682,951,2.407,952,2.407,953,2.922,954,1.575,956,1.711,957,1.711,958,1.711,971,2.11,973,2.11,974,2.11,975,2.11,976,2.11,977,2.11,978,1.881,1012,1.881,1052,4.531,1255,2.11,1449,1.711,1450,2.615,1451,3.491,1454,2.876,1455,2.615,1494,2.11,1495,2.11,1497,3.909,1498,2.876,1499,1.881,1501,2.11,1503,2.11,1505,2.11,1594,1.881,1639,1.881,1668,2.876,2037,2.11,2181,6.18,2182,3.754,2183,3.754,2184,3.754,2185,4.557,2186,4.557,2187,5.103,2188,5.103,2189,5.103,2190,4.557,2191,2.456,2192,2.456,2193,2.456,2194,3.754,2195,5.103,2196,2.456,2197,3.754,2198,2.456,2199,3.754,2200,2.456,2201,3.754,2202,2.456,2203,2.456,2204,2.456,2205,2.456,2206,2.456,2207,2.456,2208,2.456,2209,2.456,2210,2.456,2211,2.456,2212,2.456,2213,3.754,2214,2.456,2215,2.456,2216,2.456,2217,2.456,2218,2.456,2219,2.456,2220,2.456,2221,2.456,2222,2.456,2223,3.754,2224,2.456,2225,3.754,2226,2.456,2227,2.456,2228,2.456,2229,2.456,2230,2.456,2231,3.754,2232,2.456,2233,2.456,2234,2.456,2235,2.456,2236,3.754,2237,2.456,2238,5.797,2239,5.797]],["title/components/ThreadBoardComponent.html",[43,0.101,144,0.554]],["body/components/ThreadBoardComponent.html",[3,0.144,4,0.126,5,0.126,8,0.26,9,0.233,14,0.217,15,0.019,16,1.324,17,0.503,18,0.503,19,1.144,20,0.355,26,0.376,27,0.297,28,0.479,29,0.627,30,0.752,31,0.476,32,0.242,35,0.144,36,0.024,41,0.011,42,0.011,43,0.145,44,0.477,45,0.722,46,0.533,47,0.533,48,0.533,50,0.505,51,1.278,52,1.278,53,0.722,54,0.821,55,0.762,57,0.477,59,0.762,61,0.762,72,0.533,77,0.533,78,0.762,79,0.762,80,0.533,81,0.971,82,0.533,83,0.533,84,0.477,85,0.4,86,0.971,87,0.477,88,0.4,89,0.533,90,0.477,91,1.027,92,0.477,93,0.762,94,0.477,95,0.722,96,0.477,97,0.477,98,0.762,99,0.477,100,0.627,101,0.762,102,0.477,103,0.477,104,0.722,105,0.533,106,0.477,107,0.533,108,0.762,109,0.477,110,0.533,111,0.477,112,0.533,113,0.477,114,0.919,115,0.89,116,0.869,117,0.572,118,0.533,119,0.869,120,0.533,121,0.477,122,0.329,123,0.505,124,0.533,125,0.533,126,0.477,127,0.477,128,0.477,129,0.762,130,0.762,131,0.477,132,0.477,133,0.477,134,0.533,135,0.477,136,0.533,137,0.477,138,0.533,139,0.533,140,0.477,141,0.533,142,0.869,143,0.533,144,0.869,145,1.084,146,0.869,147,0.533,148,0.533,149,0.477,150,0.505,151,0.533,152,0.477,153,0.722,154,0.477,155,0.533,156,0.533,157,0.533,158,1.36,161,1.558,177,0.572,190,0.263,329,1.389,449,1.944,452,2.036,453,3.163,456,3.163,457,3.163,462,2.456,465,4.06,466,2.224,473,4.06,474,3.163,494,2.433,500,2.761,501,1.764,506,3.901,509,2.433,510,1.89,511,2.213,512,1.89,513,2.213,514,3.479,515,2.036,516,2.433,517,2.036,518,2.433,523,1.248,527,1.248,533,0.882,534,2.433,535,2.036,536,2.433,561,2.522,594,3.901,598,2.1,606,4.431,610,3.479,615,2.226,616,4.431,650,4.553,670,2.835,707,3.479,712,3.901,713,3.901,714,3.901,750,1.389,844,2.702,845,2.835,852,1.89,1051,2.433,1473,2.213,1509,5.365,1529,2.728,1669,3.479,2240,6.016,2241,5.301,2242,5.301,2243,5.784,2244,4.542,2245,3.177,2246,3.177,2247,3.177,2248,3.177,2249,4.542,2250,4.542,2251,4.542,2252,5.784,2253,5.784,2254,4.542,2255,4.542,2256,4.542,2257,4.542]],["title/components/TimeSeparatorComponent.html",[43,0.101,146,0.554]],["body/components/TimeSeparatorComponent.html",[3,0.197,4,0.172,5,0.172,8,0.172,14,0.147,15,0.019,17,0.479,18,0.479,20,0.222,27,0.288,31,0.302,32,0.33,35,0.197,36,0.032,41,0.014,42,0.014,43,0.17,44,0.65,45,0.891,46,0.726,47,0.726,48,0.726,50,0.687,51,1.304,52,1.304,53,0.891,54,0.796,55,0.726,57,0.65,59,0.941,61,0.941,67,0.706,72,0.726,77,0.726,78,0.941,79,0.941,80,0.726,81,1.104,82,0.726,83,0.726,84,0.65,85,0.545,86,1.104,87,0.65,88,0.545,89,0.726,90,0.65,91,1.144,92,0.65,93,0.941,94,0.65,95,0.891,96,0.65,97,0.65,98,0.941,99,0.65,100,0.735,101,0.941,102,0.65,103,0.65,104,0.891,105,0.726,106,0.65,107,0.726,108,0.941,109,0.65,110,0.726,111,0.65,112,0.726,113,0.65,114,0.891,115,1.044,116,0.65,117,0.706,118,0.726,119,0.65,120,0.726,121,0.65,122,0.448,123,0.687,124,0.726,125,0.726,126,0.65,127,0.65,128,0.65,129,0.941,130,0.941,131,0.65,132,0.65,133,0.65,134,0.726,135,0.65,136,0.726,137,0.65,138,0.726,139,0.726,140,0.65,141,0.726,142,0.65,143,0.726,144,0.65,145,0.687,146,0.989,147,1.193,148,0.726,149,0.65,150,0.687,151,0.726,152,0.65,153,0.891,154,0.65,155,0.726,156,0.726,157,0.726,449,1.556,535,3.593,722,2.747,926,3.335,2258,4.814,2259,3.714,2260,5.605,2261,5.605,2262,5.605,2263,6.816,2264,4.325]],["title/components/UploadFormComponent.html",[43,0.101,149,0.554]],["body/components/UploadFormComponent.html",[3,0.135,4,0.118,5,0.118,8,0.118,9,0.222,10,0.646,14,0.232,15,0.019,16,1.488,17,0.744,18,0.744,19,1.413,20,0.372,26,0.464,27,0.32,28,0.464,29,0.76,30,0.934,31,0.476,32,0.227,35,0.135,36,0.022,41,0.011,42,0.011,43,0.14,44,0.447,45,0.688,46,0.499,47,0.499,48,0.499,50,0.473,51,1.272,52,1.272,53,0.688,54,0.725,55,0.727,57,0.447,58,2.659,59,0.727,61,0.727,70,1.11,72,0.499,76,1.004,77,0.499,78,0.727,79,0.727,80,0.499,81,0.942,82,0.499,83,0.499,84,0.447,85,0.374,86,0.942,87,0.447,88,0.374,89,0.499,90,0.447,91,1.001,92,0.447,93,0.727,94,0.447,95,0.688,96,0.447,97,0.768,98,0.727,99,0.447,100,0.604,101,0.727,102,0.447,103,0.447,104,0.688,105,0.499,106,0.447,107,0.499,108,0.727,109,0.447,110,0.499,111,0.447,112,0.499,113,0.447,114,0.688,115,0.857,116,0.447,117,0.643,118,0.499,119,0.447,120,0.499,121,0.447,122,0.308,123,0.473,124,0.499,125,0.499,126,0.447,127,0.447,128,0.447,129,0.727,130,0.727,131,0.447,132,0.447,133,0.447,134,0.499,135,0.447,136,0.499,137,0.447,138,0.499,139,0.499,140,0.447,141,0.499,142,0.447,143,0.499,144,0.447,145,0.473,146,0.447,147,0.499,148,0.499,149,0.843,150,1.11,151,0.499,152,0.447,153,0.688,154,0.447,155,0.499,156,0.499,157,0.499,158,1.223,173,2.071,177,0.545,190,0.358,192,2.721,284,2.576,292,1.457,297,2.553,329,2.233,380,2.553,408,3.557,533,0.825,980,3.557,1056,4.386,1057,4.386,1058,4.386,1071,3.719,1073,3.911,1075,3.719,1076,3.719,1079,2.553,1080,2.553,1081,2.553,1083,2.553,1084,2.277,1113,2.553,1122,2.553,1138,3.719,1139,3.911,1154,3.794,1170,2.122,1173,2.576,1179,1.651,1959,2.553,2040,2.553,2177,5.579,2265,6.256,2266,2.553,2267,4.33,2268,5.106,2269,5.106,2270,5.106,2271,4.33,2272,4.33,2273,5.106,2274,5.106,2275,4.33,2276,5.609,2277,4.33,2278,4.33,2279,4.33,2280,5.609,2281,5.609,2282,2.973,2283,5.609,2284,4.33,2285,4.33,2286,2.973,2287,4.33,2288,2.973,2289,4.33,2290,5.609,2291,2.973,2292,4.33,2293,5.609,2294,2.973,2295,4.818,2296,2.973,2297,2.973,2298,2.973,2299,2.973,2300,2.973,2301,2.973,2302,2.973,2303,2.973,2304,2.973,2305,2.973,2306,2.973,2307,2.973,2308,3.719,2309,4.818,2310,3.719,2311,3.719,2312,2.973,2313,2.973,2314,2.973,2315,2.973,2316,2.973,2317,2.973,2318,2.973,2319,2.973,2320,2.973,2321,2.973,2322,2.973,2323,2.973,2324,2.973,2325,2.973,2326,2.973,2327,2.973,2328,2.973,2329,5.106,2330,5.106,2331,2.973,2332,2.973,2333,2.973,2334,2.973,2335,4.33,2336,2.973,2337,2.973,2338,2.973,2339,2.973,2340,4.33]],["title/classes/User.html",[36,0.028,100,0.436]],["body/classes/User.html",[3,0.236,4,0.207,5,0.207,8,0.207,9,0.323,14,0.249,15,0.019,20,0.376,26,0.43,27,0.361,28,0.43,35,0.236,36,0.039,41,0.016,42,0.016,67,0.952,100,0.744,163,5.181,166,3.315,173,4.712,190,0.43,301,3.621,302,3.333,303,4.465,322,4.465,425,2.887,429,4.712,431,3.093,433,4.063,434,3.093,439,3.093,440,4.465,441,2.887,442,3.621,2341,4.465,2342,6.291,2343,5.199,2344,5.199,2345,5.199,2346,5.199,2347,4.465,2348,4.465,2349,5.403]],["title/injectables/UserService.html",[0,0.975,466,1.184]],["body/injectables/UserService.html",[0,1.418,2,1.767,3,0.184,4,0.16,5,0.16,8,0.239,9,0.275,14,0.245,15,0.02,17,0.71,18,0.71,20,0.382,26,0.53,27,0.352,28,0.53,29,0.827,30,0.854,31,0.447,32,0.308,33,1.868,34,1.767,35,0.184,36,0.03,37,2.274,41,0.013,42,0.013,67,0.921,70,1.508,100,0.788,158,1.347,163,4.106,166,2.627,173,3.733,177,0.675,190,0.334,193,4.394,256,2.814,257,4.106,259,3.47,261,3.094,262,2.59,276,5.107,429,4.946,430,2.59,433,2.244,441,2.244,442,2.814,466,1.722,532,2.814,582,2.364,629,2.479,750,1.767,883,4.106,895,3.47,1242,3.47,1245,2.814,1464,4.108,1541,3.47,1912,4.604,2347,3.47,2348,3.47,2349,3.47,2350,3.47,2351,6.016,2352,6.016,2353,6.016,2354,6.016,2355,6.408,2356,5.36,2357,5.36,2358,5.503,2359,5.36,2360,6.408,2361,5.36,2362,4.04,2363,4.04,2364,4.04,2365,5.36,2366,4.04,2367,4.04,2368,4.04,2369,5.36,2370,4.04,2371,4.04,2372,4.04,2373,4.04,2374,4.04,2375,4.04,2376,4.04,2377,4.04,2378,4.04,2379,5.36,2380,4.04,2381,4.04,2382,4.04,2383,4.04,2384,6.016,2385,4.04,2386,4.04,2387,4.04,2388,4.04,2389,4.04,2390,4.04,2391,4.04,2392,4.04,2393,4.04,2394,4.04,2395,4.04,2396,4.04,2397,4.04,2398,4.04]],["title/components/WorkspaceMenuComponent.html",[43,0.101,152,0.554]],["body/components/WorkspaceMenuComponent.html",[3,0.124,4,0.108,5,0.108,8,0.276,9,0.208,10,1.054,14,0.236,15,0.019,17,0.537,18,0.537,20,0.375,26,0.401,27,0.295,28,0.401,29,0.759,30,0.911,31,0.473,32,0.207,35,0.124,36,0.02,41,0.01,42,0.01,43,0.133,44,0.409,45,0.645,46,0.457,47,0.457,48,0.457,50,0.433,51,1.263,52,1.263,53,0.645,54,0.856,55,0.681,57,0.409,59,0.681,61,0.681,67,0.511,72,0.457,77,0.457,78,0.681,79,0.681,80,0.457,81,0.902,82,0.457,83,0.457,84,0.409,85,0.724,86,0.902,87,0.409,88,0.724,89,0.457,90,0.61,91,1.121,92,0.729,93,0.681,94,0.409,95,0.645,96,0.409,97,0.409,98,0.681,99,0.409,100,0.68,101,0.681,102,0.409,103,0.409,104,0.645,105,0.457,106,0.409,107,0.457,108,0.681,109,0.409,110,0.457,111,0.409,112,0.457,113,0.409,114,0.645,115,0.814,116,0.409,117,0.511,118,0.457,119,0.409,120,0.457,121,0.409,122,0.556,123,0.433,124,0.457,125,0.457,126,0.409,127,0.409,128,0.808,129,0.681,130,0.681,131,0.409,132,0.409,133,0.409,134,0.457,135,0.409,136,0.457,137,0.409,138,0.457,139,0.457,140,0.409,141,0.457,142,0.409,143,0.457,144,0.409,145,0.433,146,0.409,147,0.457,148,0.457,149,0.409,150,0.433,151,0.457,152,0.808,153,1.02,154,0.808,155,0.457,156,0.457,157,0.457,158,1.312,161,1.599,177,0.511,190,0.225,225,3.715,252,4.165,254,1.511,449,2.033,454,2.526,462,2.369,466,1.847,475,1.744,476,2.994,519,1.68,520,1.511,521,1.744,522,2.337,523,1.069,524,1.895,525,1.334,526,1.19,527,1.069,528,1.895,529,1.511,530,1.895,533,0.755,538,1.016,540,1.744,541,1.744,542,1.744,543,1.895,568,3.107,598,2.486,602,3.107,622,2.6,629,2.658,639,3.478,652,1.511,670,1.988,672,2.6,787,1.895,841,4.937,854,2.337,855,2.337,859,4.117,860,2.337,862,2.337,864,2.337,872,2.084,873,3.484,874,3.484,875,3.484,880,2.337,883,3.107,932,2.6,951,3.446,996,4.165,997,3.714,998,3.714,1289,2.337,1295,2.825,1464,3.446,1465,3.107,1486,3.484,1506,5.609,1549,3.107,1550,3.107,1848,2.337,1849,2.337,2358,4.616,2399,6.289,2400,4.849,2401,4.849,2402,4.849,2403,5.375,2404,4.056,2405,5.375,2406,5.375,2407,5.375,2408,4.056,2409,2.721,2410,2.721,2411,2.721,2412,2.721,2413,2.721,2414,2.721,2415,2.721,2416,2.721,2417,4.056,2418,2.721,2419,2.721,2420,4.056,2421,2.721,2422,2.721,2423,5.749,2424,2.721,2425,2.721,2426,2.721,2427,2.721,2428,2.721,2429,2.721,2430,2.721,2431,2.721,2432,4.056,2433,4.056,2434,2.721,2435,2.721,2436,2.721,2437,2.721,2438,2.721,2439,2.721,2440,2.721,2441,2.721,2442,2.721,2443,4.056,2444,4.056,2445,4.056,2446,4.056,2447,4.056,2448,5.375,2449,4.056,2450,5.375]],["title/components/WorkspaceUserProfilComponent.html",[43,0.101,154,0.554]],["body/components/WorkspaceUserProfilComponent.html",[3,0.158,4,0.138,5,0.138,8,0.138,9,0.248,10,0.753,14,0.234,15,0.019,16,1.752,17,0.7,18,0.7,19,1.514,20,0.352,26,0.4,27,0.309,28,0.4,29,0.41,30,0.492,31,0.441,32,0.264,35,0.158,36,0.026,41,0.012,42,0.012,43,0.152,44,0.521,45,0.767,46,0.581,47,0.581,48,0.581,50,0.551,51,1.286,52,1.286,53,0.767,54,0.789,55,0.81,57,0.521,59,0.81,61,0.81,67,0.876,72,0.581,77,0.581,78,0.81,79,0.81,80,0.581,81,1.009,82,0.581,83,0.581,84,0.521,85,0.436,86,1.009,87,0.521,88,0.436,89,0.581,90,0.521,91,1.183,92,0.521,93,0.81,94,0.521,95,0.767,96,0.726,97,0.835,98,0.81,99,0.521,100,0.9,101,0.81,102,0.521,103,0.521,104,0.767,105,0.581,106,0.521,107,0.581,108,0.81,109,0.521,110,0.581,111,0.521,112,0.581,113,0.521,114,0.767,115,0.933,116,0.521,117,0.608,118,0.581,119,0.521,120,0.581,121,0.521,122,0.359,123,0.551,124,0.581,125,0.581,126,0.521,127,0.521,128,0.521,129,0.81,130,0.81,131,0.521,132,0.726,133,0.521,134,0.581,135,0.521,136,0.581,137,0.521,138,0.581,139,0.581,140,0.521,141,0.581,142,0.521,143,0.581,144,0.521,145,0.551,146,0.521,147,0.581,148,0.581,149,0.521,150,0.551,151,0.581,152,0.521,153,1.089,154,0.904,155,1.009,156,0.581,157,0.581,161,1.103,177,0.608,190,0.287,200,4.256,449,1.932,454,2.894,466,2.158,475,2.221,476,3.292,519,2,520,1.924,525,3.411,526,1.515,527,1.361,538,1.293,540,2.221,541,2.221,542,2.221,543,2.413,642,3.363,643,4.146,644,3.698,651,1.804,654,2.975,655,2.975,656,2.975,657,2.975,658,2.653,659,2.653,660,2.975,661,2.653,662,2.975,663,2.653,664,2.975,665,2.653,666,2.975,678,2.872,722,3.208,838,2.413,839,3.698,840,3.698,847,2.975,896,2.975,900,4.146,901,2.975,926,2.872,1868,5.429,2451,5.977,2452,5.557,2453,5.557,2454,5.557,2455,3.464,2456,3.464,2457,3.464,2458,3.464,2459,3.464,2460,3.464,2461,4.828]],["title/coverage.html",[2462,4.328]],["body/coverage.html",[0,1.916,1,2.534,5,0.144,6,3.124,7,3.124,14,0.124,15,0.019,36,0.05,41,0.012,42,0.012,43,0.21,44,0.547,49,3.124,57,0.547,63,1.895,73,2.786,84,0.547,85,0.458,87,0.547,88,0.458,90,0.547,92,0.751,94,0.547,95,0.794,96,0.547,97,0.751,99,0.547,100,0.805,102,0.547,103,0.547,104,0.976,106,0.547,109,0.547,111,0.547,113,0.547,114,0.794,116,0.547,117,0.629,119,0.547,121,0.547,122,0.377,123,0.578,126,0.547,128,0.547,131,0.547,132,0.751,133,0.547,135,0.547,137,0.547,140,0.547,142,0.547,144,0.547,146,0.547,149,0.547,152,0.547,154,0.547,158,0.715,159,3.124,192,1.591,426,3.124,449,2.081,450,3.124,451,2.786,452,3.935,462,1.291,466,1.169,512,2.164,515,2.332,517,2.332,521,3.202,525,1.783,529,2.774,535,2.332,582,3.061,623,3.124,637,3.124,638,2.786,639,1.895,651,2.601,715,3.124,716,3.124,723,3.827,724,3.825,838,3.972,845,1.783,871,2.786,872,3.825,914,3.124,915,2.786,916,3.124,984,3.124,1045,2.534,1052,2.534,1053,3.124,1154,3.545,1155,3.124,1156,2.786,1157,3.825,1212,2.332,1213,3.124,1214,3.124,1335,3.124,1352,2.534,1353,2.332,1355,3.124,1356,3.124,1373,3.124,1419,3.124,1448,3.124,1449,3.972,1460,2.534,1506,2.786,1509,2.786,1512,2.786,1524,3.124,1563,3.124,1569,2.164,1580,3.825,1581,3.124,1672,3.124,1713,3.124,1714,3.124,1738,3.124,1742,3.124,1749,3.124,1750,3.124,1751,2.534,1791,3.124,1792,3.124,1824,3.825,1825,3.825,1887,3.124,1967,3.124,1997,3.124,2088,3.124,2089,2.786,2090,3.124,2170,3.124,2177,2.786,2181,3.124,2240,3.124,2258,3.124,2259,3.124,2265,3.124,2266,3.124,2341,3.124,2350,3.124,2399,3.124,2451,3.124,2462,3.124,2463,3.638,2464,3.638,2465,3.638,2466,5.703,2467,4.289,2468,6.139,2469,3.124,2470,6.646,2471,3.124,2472,3.124,2473,3.124,2474,5.703,2475,4.994,2476,4.994,2477,6.646,2478,5.703,2479,6.139,2480,6.434,2481,4.994,2482,3.638,2483,3.638,2484,3.638,2485,6.139,2486,3.638,2487,3.638,2488,4.994,2489,3.638,2490,3.638,2491,3.638,2492,3.638,2493,3.638,2494,3.638,2495,3.638,2496,3.638,2497,3.638,2498,3.638,2499,3.638,2500,4.994,2501,3.638,2502,3.638,2503,3.124,2504,3.124,2505,3.124,2506,3.638,2507,3.638]],["title/dependencies.html",[2508,2.354,2509,3.809]],["body/dependencies.html",[15,0.019,32,0.415,41,0.016,42,0.016,71,2.67,76,1.839,254,3.026,299,4.173,749,2.033,952,3.492,953,3.492,954,3.492,2295,4.679,2308,4.679,2309,4.679,2310,5.927,2311,5.557,2509,4.679,2510,5.448,2511,6.538,2512,5.448,2513,6.47,2514,5.448,2515,5.448,2516,5.448,2517,5.448,2518,5.448,2519,4.679,2520,5.448,2521,5.448,2522,5.448,2523,5.448,2524,5.448,2525,5.448,2526,5.448,2527,5.448,2528,5.448,2529,5.448,2530,5.448,2531,5.448,2532,5.448,2533,5.448,2534,5.448]],["title/index.html",[8,0.122,2535,3.073,2536,3.073]],["body/index.html",[4,0.209,15,0.016,27,0.27,41,0.016,42,0.016,43,0.186,68,3.368,92,0.79,122,0.544,360,4.512,394,4.024,1364,4.512,1450,3.659,2035,5.836,2087,6.298,2508,4.024,2511,4.512,2519,5.438,2537,6.331,2538,5.254,2539,6.795,2540,6.795,2541,4.512,2542,5.254,2543,7.219,2544,7.417,2545,5.254,2546,5.254,2547,5.254,2548,5.254,2549,5.254,2550,5.254,2551,5.254,2552,5.254,2553,5.254,2554,5.254,2555,5.254,2556,6.795,2557,5.254,2558,7.054,2559,5.254,2560,5.254,2561,5.254,2562,5.254,2563,6.331,2564,6.331,2565,7.054,2566,5.254,2567,6.331,2568,6.331,2569,5.254,2570,5.254,2571,5.254,2572,5.254,2573,6.331,2574,5.254,2575,5.254,2576,5.254,2577,5.254,2578,5.254,2579,6.795,2580,5.254,2581,5.254,2582,4.024,2583,5.254]],["title/modules.html",[2584,4.328]],["body/modules.html",[15,0.017,41,0.017,42,0.017,2584,5.205]],["title/overview.html",[2582,3.86]],["body/overview.html",[2,2.611,15,0.017,41,0.017,42,0.017,45,0.949,425,3.316,670,3.344,1352,4.158,2503,5.127,2582,4.573,2585,5.97,2586,5.97,2587,5.97]],["title/properties.html",[9,0.228,2508,2.354]],["body/properties.html",[9,0.31,15,0.018,41,0.017,42,0.017,2541,5.182,2588,6.033]],["title/miscellaneous/typealiases.html",[2589,2.141,2590,4.435]],["body/miscellaneous/typealiases.html",[8,0.237,14,0.233,15,0.017,41,0.017,42,0.017,197,5.231,846,3.833,2589,4.164,2591,5.979,2592,5.979,2593,5.979]],["title/miscellaneous/variables.html",[2589,2.141,2594,3.809]],["body/miscellaneous/variables.html",[8,0.216,14,0.22,15,0.019,17,0.807,18,0.79,41,0.016,42,0.016,1073,4.161,2467,4.666,2469,5.921,2471,5.921,2472,4.666,2473,5.548,2504,4.666,2505,5.548,2589,3.784,2594,4.666,2595,5.433,2596,5.433,2597,6.459,2598,6.459,2599,6.459,2600,5.433,2601,5.433,2602,5.433,2603,5.433,2604,5.433,2605,5.433,2606,5.433,2607,5.433,2608,5.433,2609,5.433,2610,5.433,2611,5.433,2612,5.433,2613,5.433,2614,5.433,2615,5.433,2616,5.433,2617,5.433,2618,5.433,2619,5.433,2620,5.433]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"injectables/AnimationStateService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"injectables/OverlayService.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":582,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/FileUploadService.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignuppictureComponent.html":{},"components/TextareaMainPageComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2588,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":2534,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2470,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2477,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2485,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2478,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2476,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2500,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2501,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2474,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2498,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2475,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":2483,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2466,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":2493,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":2484,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":2495,"title":{},"body":{"coverage.html":{}}}],["0/38",{"_index":2497,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2489,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2479,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2499,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2480,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2488,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2481,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":670,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/DialogEditChannelComponent.html":{},"injectables/FileUploadService.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/ThreadBoardComponent.html":{},"components/WorkspaceMenuComponent.html":{},"overview.html":{}}}],["1/22",{"_index":2487,"title":{},"body":{"coverage.html":{}}}],["1/29",{"_index":2482,"title":{},"body":{"coverage.html":{}}}],["10.9.0",{"_index":2524,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":564,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/SignuppictureComponent.html":{}}}],["1000",{"_index":1266,"title":{},"body":{"injectables/GuestUserService.html":{},"components/StartAnimationComponent.html":{}}}],["10000",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["12",{"_index":2586,"title":{},"body":{"overview.html":{}}}],["1234567",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["12px",{"_index":2063,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["140",{"_index":559,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["1500",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["168px",{"_index":2050,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["17.0.1",{"_index":2516,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":2511,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["17.3.1",{"_index":2513,"title":{},"body":{"dependencies.html":{}}}],["1].timestamp",{"_index":610,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["2",{"_index":672,"title":{},"body":{"components/ChatBoardComponent.html":{},"injectables/GuestUserService.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["2.0.8",{"_index":2528,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2532,"title":{},"body":{"dependencies.html":{}}}],["21px",{"_index":2084,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["24",{"_index":1269,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["24px",{"_index":887,"title":{},"body":{"components/DialogUserMenuComponent.html":{},"components/SignuppictureComponent.html":{}}}],["2500",{"_index":2124,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["3",{"_index":1524,"title":{},"body":{"components/MainPageComponent.html":{},"coverage.html":{}}}],["3000",{"_index":2038,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["31",{"_index":2585,"title":{},"body":{"overview.html":{}}}],["3500",{"_index":2126,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["4",{"_index":2486,"title":{},"body":{"coverage.html":{}}}],["4.18.2",{"_index":2523,"title":{},"body":{"dependencies.html":{}}}],["44px",{"_index":2066,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["4500",{"_index":2128,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["4px",{"_index":2070,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["512",{"_index":554,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["544",{"_index":562,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogUserMenuComponent.html":{}}}],["6",{"_index":2587,"title":{},"body":{"overview.html":{}}}],["6.1.0",{"_index":2526,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1265,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["64",{"_index":684,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["7",{"_index":1772,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["7.2.1",{"_index":2529,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":2530,"title":{},"body":{"dependencies.html":{}}}],["72px",{"_index":2068,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["792",{"_index":1051,"title":{},"body":{"injectables/EventService.html":{},"components/MainPageComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["80px",{"_index":889,"title":{},"body":{"components/DialogUserMenuComponent.html":{}}}],["885546",{"_index":1346,"title":{},"body":{"components/ImprintComponent.html":{}}}],["9",{"_index":1187,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["9.2.0",{"_index":2521,"title":{},"body":{"dependencies.html":{}}}],["9._",{"_index":1186,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["9fc3f",{"_index":2605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9fc3f\",\"appid\":\"1:417516174579:web:e3fefddc3232d2519d4b86\",\"databaseurl\":\"https://dabubble",{"_index":2604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9fc3f.appspot.com\",\"apikey\":\"aizasya9n9zfr70oyil8dz6qeuy_e69rhsw3hpo\",\"authdomain\":\"dabubble",{"_index":2608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9fc3f.firebaseapp.com\",\"messagingsenderid\":\"417516174579",{"_index":2609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":1332,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["_currentusersubject",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["ab",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["abbrechen",{"_index":913,"title":{},"body":{"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{}}}],["abgeschlossen",{"_index":1288,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["abschluss",{"_index":2332,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["accessors",{"_index":12,"title":{},"body":{"injectables/AnimationStateService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["account",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["accountemail",{"_index":1818,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["action",{"_index":1622,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["actioncode",{"_index":1793,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["active",{"_index":2080,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["actual_component",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["add",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{},"index.html":{}}}],["addchanneldialog",{"_index":2420,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["adddoc",{"_index":2377,"title":{},"body":{"injectables/UserService.html":{}}}],["added",{"_index":1709,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["addemoji",{"_index":922,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["addemoji($event",{"_index":941,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["addmembersopen",{"_index":732,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["addmemberstochannel",{"_index":467,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["addorremoveemoji",{"_index":1587,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["addorremoveemoji(reactemoji",{"_index":1616,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["adduserasmember",{"_index":1860,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["adduserasmember(userobj",{"_index":1863,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["adresse",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["aktualisieren",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{}}}],["aktualisierungsvorgänge",{"_index":1307,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["aliases",{"_index":2591,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":2060,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["alle",{"_index":787,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"injectables/FileUploadService.html":{},"injectables/GuestUserService.html":{},"components/WorkspaceMenuComponent.html":{}}}],["allmembers",{"_index":759,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["allmembers.checked",{"_index":765,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["allmessages",{"_index":624,"title":{},"body":{"classes/Chat.html":{}}}],["allmessages.length",{"_index":2257,"title":{},"body":{"components/ThreadBoardComponent.html":{}}}],["already",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"components/SignuppictureComponent.html":{}}}],["amountmessage",{"_index":1592,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["andernfalls",{"_index":1962,"title":{},"body":{"injectables/SearchService.html":{}}}],["anfang",{"_index":621,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["angezeigt",{"_index":1787,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["angular",{"_index":2539,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2510,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2512,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/UploadFormComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2514,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"injectables/AnimationStateService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"injectables/OverlayService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":2515,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/auth",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["angular/fire/firestore",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SearchService.html":{},"injectables/UserService.html":{}}}],["angular/forms",{"_index":749,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2517,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":1511,"title":{},"body":{"components/MainPageComponent.html":{}}}],["angular/material/dialog",{"_index":519,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["angular/material/menu",{"_index":956,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["angular/material/progress",{"_index":2312,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["angular/material/sidenav",{"_index":1510,"title":{},"body":{"components/MainPageComponent.html":{}}}],["angular/platform",{"_index":2310,"title":{},"body":{"components/UploadFormComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartingPageComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":2520,"title":{},"body":{"dependencies.html":{}}}],["animatedonce",{"_index":11,"title":{},"body":{"injectables/AnimationStateService.html":{}}}],["animatestage1",{"_index":2094,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["animatestage2",{"_index":2095,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["animatestage3",{"_index":2096,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["animatestage4",{"_index":2097,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["animation",{"_index":2091,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["animation'},{'name",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["animation.component",{"_index":2179,"title":{},"body":{"components/StartingPageComponent.html":{}}}],["animation.component.html",{"_index":2092,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["animation.component.scss",{"_index":2093,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["animation.component.ts",{"_index":2090,"title":{},"body":{"components/StartAnimationComponent.html":{},"coverage.html":{}}}],["animation.component.ts:12",{"_index":2102,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["animation.component.ts:16",{"_index":2108,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["animation.component.ts:27",{"_index":2111,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["animation.component.ts:34",{"_index":2103,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["animation.component.ts:41",{"_index":2104,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["animation.component.ts:48",{"_index":2105,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["animation.component.ts:71",{"_index":2106,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["animation.component.ts:80",{"_index":2110,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["animation.component.ts:88",{"_index":2107,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["animation/start",{"_index":2089,"title":{},"body":{"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"coverage.html":{}}}],["animationstateservice",{"_index":1,"title":{"injectables/AnimationStateService.html":{}},"body":{"injectables/AnimationStateService.html":{},"components/StartAnimationComponent.html":{},"coverage.html":{}}}],["anmelden",{"_index":1417,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["anmeldung",{"_index":1409,"title":{},"body":{"components/LoginComponent.html":{}}}],["anstatt",{"_index":2023,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["antwort",{"_index":1671,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["antworten",{"_index":1669,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["app",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["app.component.html",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":44,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2473,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":2549,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":2598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applyfinalanimationstates",{"_index":2098,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["arbeit",{"_index":1413,"title":{},"body":{"components/LoginComponent.html":{}}}],["array",{"_index":1292,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["array.from(target.files",{"_index":1103,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["artifacts",{"_index":2559,"title":{},"body":{"index.html":{}}}],["ask",{"_index":1821,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["assets/img/profils/avatar_1.svg",{"_index":2011,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["assets/img/profils/avatar_2.svg",{"_index":2012,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["assets/img/profils/avatar_3.svg",{"_index":2013,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["assets/img/profils/avatar_4.svg",{"_index":2014,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["assets/img/profils/avatar_5.svg",{"_index":2015,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["assets/img/profils/avatar_6.svg",{"_index":2016,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["assets/img/profils/standardpic.svg",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["async",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileUploadService.html":{},"injectables/GuestUserService.html":{},"components/LoginComponent.html":{},"injectables/SearchService.html":{},"components/SignuppictureComponent.html":{}}}],["auch",{"_index":702,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["auf",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatBoardComponent.html":{},"injectables/GuestUserService.html":{},"injectables/OverlayService.html":{},"components/ResetPasswordComponent.html":{}}}],["aus",{"_index":1118,"title":{},"body":{"injectables/FileUploadService.html":{},"injectables/GuestUserService.html":{},"components/SignuppictureComponent.html":{}}}],["ausgewählten",{"_index":1100,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["auswahl",{"_index":1107,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["auth",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.service",{"_index":1245,"title":{},"body":{"injectables/GuestUserService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SearchService.html":{},"injectables/UserService.html":{}}}],["auth/email",{"_index":2034,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["authcredential",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":158,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/UploadFormComponent.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"coverage.html":{}}}],["authservice.registererror",{"_index":1995,"title":{},"body":{"components/SignupComponent.html":{}}}],["automatically",{"_index":2550,"title":{},"body":{"index.html":{}}}],["automatisch",{"_index":1112,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["avatar",{"_index":2043,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["await",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileUploadService.html":{},"injectables/GuestUserService.html":{},"components/LoginComponent.html":{},"injectables/SearchService.html":{},"components/SignuppictureComponent.html":{}}}],["background",{"_index":2077,"title":{},"body":{"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{}}}],["bar",{"_index":2313,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["bearbeiten",{"_index":829,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/MessageRightComponent.html":{}}}],["behaviorsubject",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/SearchService.html":{}}}],["behaviorsubject(false",{"_index":1025,"title":{},"body":{"injectables/EventService.html":{},"injectables/SearchService.html":{}}}],["behaviorsubject(null",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(true",{"_index":1023,"title":{},"body":{"injectables/EventService.html":{}}}],["bei",{"_index":1412,"title":{},"body":{"components/LoginComponent.html":{}}}],["beim",{"_index":1138,"title":{},"body":{"injectables/FileUploadService.html":{},"components/UploadFormComponent.html":{}}}],["beispiel",{"_index":779,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["benachrichtige",{"_index":1105,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["benutzer",{"_index":1299,"title":{},"body":{"injectables/GuestUserService.html":{},"components/MainPageComponent.html":{}}}],["benötigten",{"_index":2020,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["ber",{"_index":1106,"title":{},"body":{"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{}}}],["berein",{"_index":1781,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["bereits",{"_index":1953,"title":{},"body":{"injectables/SearchService.html":{},"components/SignuppictureComponent.html":{}}}],["berprüfen",{"_index":1145,"title":{},"body":{"injectables/FileUploadService.html":{},"injectables/GuestUserService.html":{}}}],["berührt",{"_index":1785,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["beschreibung",{"_index":786,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{}}}],["besprechen",{"_index":706,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["besten",{"_index":773,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["bestimmte",{"_index":790,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["bewahre",{"_index":697,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["bild",{"_index":2046,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["bildes",{"_index":2336,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["bis",{"_index":1286,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["bitte",{"_index":782,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["black",{"_index":2081,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["blob).then((snapshot",{"_index":2328,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["blobs",{"_index":2339,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["board",{"_index":453,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["board'},{'name",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["board.component",{"_index":1508,"title":{},"body":{"components/MainPageComponent.html":{}}}],["board.component.html",{"_index":456,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["board.component.scss",{"_index":457,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["board.component.ts",{"_index":452,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ThreadBoardComponent.html":{},"coverage.html":{}}}],["board.component.ts:105",{"_index":480,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["board.component.ts:124",{"_index":482,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["board.component.ts:133",{"_index":493,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["board.component.ts:142",{"_index":495,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["board.component.ts:20",{"_index":2248,"title":{},"body":{"components/ThreadBoardComponent.html":{}}}],["board.component.ts:21",{"_index":2247,"title":{},"body":{"components/ThreadBoardComponent.html":{}}}],["board.component.ts:23",{"_index":2244,"title":{},"body":{"components/ThreadBoardComponent.html":{}}}],["board.component.ts:24",{"_index":647,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["board.component.ts:25",{"_index":650,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["board.component.ts:26",{"_index":649,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["board.component.ts:28",{"_index":509,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["board.component.ts:29",{"_index":503,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["board.component.ts:31",{"_index":499,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{}}}],["board.component.ts:32",{"_index":498,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["board.component.ts:33",{"_index":505,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["board.component.ts:34",{"_index":507,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{}}}],["board.component.ts:36",{"_index":479,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["board.component.ts:40",{"_index":496,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["board.component.ts:43",{"_index":492,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["board.component.ts:44",{"_index":2245,"title":{},"body":{"components/ThreadBoardComponent.html":{}}}],["board.component.ts:47",{"_index":645,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["board.component.ts:48",{"_index":491,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["board.component.ts:55",{"_index":2246,"title":{},"body":{"components/ThreadBoardComponent.html":{}}}],["board.component.ts:59",{"_index":646,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["board.component.ts:72",{"_index":489,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["board.component.ts:90",{"_index":485,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["board/channel",{"_index":451,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/MainPageComponent.html":{},"coverage.html":{}}}],["board/chat",{"_index":638,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/MainPageComponent.html":{},"coverage.html":{}}}],["board/new",{"_index":1512,"title":{},"body":{"components/MainPageComponent.html":{},"components/NewMsgBoardComponent.html":{},"coverage.html":{}}}],["board/thread",{"_index":1509,"title":{},"body":{"components/MainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"coverage.html":{}}}],["body",{"_index":2156,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["body.offsetheight",{"_index":2166,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["bodyclicklistener",{"_index":458,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["boolean",{"_index":16,"title":{},"body":{"injectables/AnimationStateService.html":{},"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"injectables/OverlayService.html":{},"components/SearchMemberInputComponent.html":{},"components/StartAnimationComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["bootstrap",{"_index":2505,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":2618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bor",{"_index":541,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["border",{"_index":2052,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["bottom",{"_index":2065,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["browser",{"_index":2311,"title":{},"body":{"components/UploadFormComponent.html":{},"dependencies.html":{}}}],["browsersessionpersistence",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["buchstaben",{"_index":1537,"title":{},"body":{"components/MainPageComponent.html":{}}}],["build",{"_index":2558,"title":{},"body":{"index.html":{}}}],["buttoncontainer",{"_index":2086,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["cancleupdatemsg",{"_index":923,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["cancleupdatemsg(event",{"_index":944,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["capabilities",{"_index":2577,"title":{},"body":{"index.html":{}}}],["catch",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileUploadService.html":{},"components/LoginComponent.html":{},"components/SignuppictureComponent.html":{}}}],["catch((error",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"components/UploadFormComponent.html":{}}}],["catch(error",{"_index":2337,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["center",{"_index":2061,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["change",{"_index":2552,"title":{},"body":{"index.html":{}}}],["changedname",{"_index":812,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["changedname.value",{"_index":818,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["changedtext",{"_index":814,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["changedtext.value",{"_index":821,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel",{"_index":85,"title":{"classes/Channel.html":{}},"body":{"components/AppComponent.html":{},"classes/Channel.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["channel'},{'name",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["channel.component",{"_index":522,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["channel.component.html",{"_index":730,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{}}}],["channel.component.scss",{"_index":731,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts",{"_index":724,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"coverage.html":{}}}],["channel.component.ts:22",{"_index":807,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:23",{"_index":808,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:24",{"_index":806,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:25",{"_index":748,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:27",{"_index":747,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:28",{"_index":746,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["channel.component.ts:29",{"_index":739,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["channel.component.ts:31",{"_index":801,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:34",{"_index":740,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["channel.component.ts:35",{"_index":802,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:39",{"_index":744,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:44",{"_index":741,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["channel.component.ts:45",{"_index":804,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:54",{"_index":742,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["channel.component.ts:60",{"_index":800,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.id",{"_index":1549,"title":{},"body":{"components/MainPageComponent.html":{},"injectables/SearchService.html":{},"components/WorkspaceMenuComponent.html":{}}}],["channel.name",{"_index":1550,"title":{},"body":{"components/MainPageComponent.html":{},"components/SearchInputComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["channel.name.tolowercase().includes(querytext",{"_index":1934,"title":{},"body":{"injectables/SearchService.html":{}}}],["channel.service",{"_index":1919,"title":{},"body":{"injectables/SearchService.html":{}}}],["channel/dialog",{"_index":521,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/WorkspaceMenuComponent.html":{},"coverage.html":{}}}],["channelboard",{"_index":459,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{}}}],["channelboardcomponent",{"_index":84,"title":{"components/ChannelBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["channelchatopen",{"_index":1456,"title":{},"body":{"components/MainPageComponent.html":{}}}],["channelchatscontainerref",{"_index":460,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["channeldata",{"_index":461,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogEditChannelComponent.html":{}}}],["channeldata.description",{"_index":835,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channeldata.name",{"_index":827,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channelid",{"_index":1309,"title":{},"body":{"injectables/GuestUserService.html":{},"injectables/SearchService.html":{}}}],["channellistloaded",{"_index":1888,"title":{},"body":{"injectables/SearchService.html":{}}}],["channellistopen",{"_index":2400,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["channelmodus",{"_index":990,"title":{},"body":{"injectables/EventService.html":{}}}],["channelname.touched",{"_index":781,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["channelopenstatus",{"_index":985,"title":{},"body":{"injectables/EventService.html":{}}}],["channelref",{"_index":1295,"title":{},"body":{"injectables/GuestUserService.html":{},"components/MainPageComponent.html":{},"components/SearchInputComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["channelref:string",{"_index":2436,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["channels",{"_index":622,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"injectables/GuestUserService.html":{},"injectables/SearchService.html":{},"components/WorkspaceMenuComponent.html":{}}}],["channels.map(async",{"_index":1938,"title":{},"body":{"injectables/SearchService.html":{}}}],["channels/${channelid}/chats",{"_index":1311,"title":{},"body":{"injectables/GuestUserService.html":{},"injectables/SearchService.html":{}}}],["channels/${channelid}/chats/${chatdoc.id}/messages",{"_index":1316,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["channels/${channelid}/chats/${chatid}/messages",{"_index":1945,"title":{},"body":{"injectables/SearchService.html":{}}}],["channelservice",{"_index":462,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/WorkspaceMenuComponent.html":{},"coverage.html":{}}}],["channelservice.channels",{"_index":2445,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["channeltextarea",{"_index":537,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["chat",{"_index":88,"title":{"classes/Chat.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["chat.allmessages[0].member",{"_index":614,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["chat.chatid",{"_index":2449,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["chat.chatref",{"_index":2439,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["chatboardcomponent",{"_index":87,"title":{"components/ChatBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["chatcollectionref",{"_index":1939,"title":{},"body":{"injectables/SearchService.html":{}}}],["chatdoc",{"_index":1313,"title":{},"body":{"injectables/GuestUserService.html":{},"injectables/SearchService.html":{}}}],["chatdoc.id",{"_index":1943,"title":{},"body":{"injectables/SearchService.html":{}}}],["chatid",{"_index":625,"title":{},"body":{"classes/Chat.html":{},"classes/PrivateChat.html":{},"injectables/SearchService.html":{}}}],["chatindex",{"_index":1627,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["chatpromises",{"_index":1941,"title":{},"body":{"injectables/SearchService.html":{}}}],["chatquerysnapshot",{"_index":1310,"title":{},"body":{"injectables/GuestUserService.html":{},"injectables/SearchService.html":{}}}],["chatquerysnapshot.docs.map(async",{"_index":1942,"title":{},"body":{"injectables/SearchService.html":{}}}],["chatquerysnapshot.foreach(async",{"_index":1312,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["chatref",{"_index":1483,"title":{},"body":{"components/MainPageComponent.html":{}}}],["chatrefs",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["chatrefs:[result.user.uid",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["chats",{"_index":859,"title":{},"body":{"components/DialogShowProfilComponent.html":{},"injectables/GuestUserService.html":{},"components/WorkspaceMenuComponent.html":{}}}],["chats',chats",{"_index":2430,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["chatsdata",{"_index":463,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["chatservice",{"_index":639,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/WorkspaceMenuComponent.html":{},"coverage.html":{}}}],["chatservice.privatechats",{"_index":2448,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["chatservice:chatservice",{"_index":653,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["chatsubscription",{"_index":2401,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["check",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["checked",{"_index":745,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["checkifuserisaleadyadded",{"_index":468,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["checkifuserisaleadyadded(userobj",{"_index":481,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["checkifuserisaleadyadded(userobj:user",{"_index":1881,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["childref",{"_index":1125,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["choice",{"_index":2572,"title":{},"body":{"index.html":{}}}],["choosefile",{"_index":1060,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["choosenpicture",{"_index":2048,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["chosenfiles",{"_index":1102,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["class",{"_index":36,"title":{"classes/Channel.html":{},"classes/Chat.html":{},"classes/Message.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"classes/User.html":{}},"body":{"injectables/AnimationStateService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"injectables/OverlayService.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["class=\"channels",{"_index":1545,"title":{},"body":{"components/MainPageComponent.html":{}}}],["class=\"message",{"_index":1551,"title":{},"body":{"components/MainPageComponent.html":{}}}],["class=\"user",{"_index":1540,"title":{},"body":{"components/MainPageComponent.html":{}}}],["classes",{"_index":425,"title":{},"body":{"classes/Channel.html":{},"classes/Chat.html":{},"classes/Message.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"classes/User.html":{},"overview.html":{}}}],["classname",{"_index":2152,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["cli",{"_index":2540,"title":{},"body":{"index.html":{}}}],["click",{"_index":568,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/MainPageComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["closechanges",{"_index":795,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["closedialog",{"_index":469,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogUserMenuComponent.html":{}}}],["closedialog(seldialog",{"_index":484,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["closedialog(seldialog:string",{"_index":577,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["closedialogonclickdok",{"_index":470,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["closedialogonclickdok(dialog",{"_index":487,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["closedialogonclickdok(dialog:htmldialogelement",{"_index":565,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["closeeditmessage",{"_index":1676,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["closeeditmessage($event",{"_index":1696,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["closeeditmsg",{"_index":933,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["closeeditprofil",{"_index":893,"title":{},"body":{"components/DialogUserProfilComponent.html":{}}}],["code",{"_index":2554,"title":{},"body":{"index.html":{}}}],["collection",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{},"injectables/SearchService.html":{},"injectables/UserService.html":{}}}],["collection(this.firestore",{"_index":1315,"title":{},"body":{"injectables/GuestUserService.html":{},"injectables/SearchService.html":{}}}],["color",{"_index":2078,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["command",{"_index":2573,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":455,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["component",{"_index":43,"title":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["components",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"overview.html":{}}}],["config",{"_index":2469,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmation",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["confirmationoverlaycomponent",{"_index":57,"title":{"components/ConfirmationOverlayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["confirmpasswordreset",{"_index":1803,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["console.error(\"fehler",{"_index":2335,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["console.error('error",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.error('fehler",{"_index":1140,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["console.log('alle",{"_index":1135,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["console.log('current",{"_index":755,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["console.log('das",{"_index":2429,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["console.log('die",{"_index":591,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["console.log('emoji",{"_index":1708,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["console.log('logincalled",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('selectmemberopen",{"_index":753,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["console.log('so",{"_index":1116,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["console.log('test",{"_index":1815,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["console.log('this",{"_index":2460,"title":{},"body":{"components/WorkspaceUserProfilComponent.html":{}}}],["console.log('ungültige",{"_index":973,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["console.log('user",{"_index":1262,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["console.log('users",{"_index":2383,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(doc.data",{"_index":2397,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(email",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResetPasswordService.html":{}}}],["console.log(error",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(foundchannels",{"_index":1935,"title":{},"body":{"injectables/SearchService.html":{}}}],["console.log(foundusers",{"_index":1931,"title":{},"body":{"injectables/SearchService.html":{}}}],["console.log(results",{"_index":1812,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["console.log(this.actioncode",{"_index":1806,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["console.log(this.animationstateservice.isanimatedonce",{"_index":2115,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["console.log(this.authservice.currentuser?.uid",{"_index":2393,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(this.email",{"_index":907,"title":{},"body":{"components/DialogUserProfilComponent.html":{}}}],["console.log(this.foundmessages",{"_index":1926,"title":{},"body":{"injectables/SearchService.html":{}}}],["console.log(this.uploadfiles",{"_index":1150,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["console.log(url",{"_index":1807,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["console.log(user",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/StartAnimationComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["constructor",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"classes/Channel.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"injectables/OverlayService.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/UploadFormComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["constructor(authservice",{"_index":895,"title":{},"body":{"components/DialogUserProfilComponent.html":{},"injectables/UserService.html":{}}}],["constructor(channelservice",{"_index":738,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["constructor(dialog",{"_index":475,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["constructor(evtsvc",{"_index":1473,"title":{},"body":{"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["constructor(fb",{"_index":1164,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{}}}],["constructor(firestore",{"_index":1225,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["constructor(obj",{"_index":431,"title":{},"body":{"classes/Channel.html":{},"classes/Chat.html":{},"classes/Message.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"classes/User.html":{}}}],["constructor(obj?:any",{"_index":439,"title":{},"body":{"classes/Channel.html":{},"classes/Chat.html":{},"classes/Message.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"classes/User.html":{}}}],["constructor(overlayservice",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":750,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/LoginComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/ThreadBoardComponent.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":538,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/MainPageComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["constructor(renderer",{"_index":2101,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["constructor(router",{"_index":1339,"title":{},"body":{"components/ImprintComponent.html":{},"components/StartingPageComponent.html":{}}}],["constructor(sanitizer",{"_index":2282,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["constructor(userservice",{"_index":1831,"title":{},"body":{"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["constructor(usersservice",{"_index":843,"title":{},"body":{"components/DialogShowProfilComponent.html":{}}}],["contact",{"_index":1349,"title":{},"body":{"components/ImprintComponent.html":{}}}],["container",{"_index":2131,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["containerelement",{"_index":587,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{}}}],["containerelement.scrollheight",{"_index":590,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{}}}],["containerelement.scrolltop",{"_index":589,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{}}}],["containerhovered",{"_index":1585,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["contains",{"_index":1293,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["content",{"_index":1725,"title":{},"body":{"injectables/OverlayService.html":{},"components/SignuppictureComponent.html":{}}}],["corner",{"_index":890,"title":{},"body":{"components/DialogUserMenuComponent.html":{}}}],["cover",{"_index":2075,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["coverage",{"_index":2462,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["createdat",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["createdatdate",{"_index":1276,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["createguestuser",{"_index":1217,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["createuserobject",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserwithemailandpassword",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserwithemailandpassword(this.auth",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["creator",{"_index":427,"title":{},"body":{"classes/Channel.html":{}}}],["credential",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["cropped",{"_index":2320,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["croppedimage",{"_index":2273,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["cropper",{"_index":2309,"title":{},"body":{"components/UploadFormComponent.html":{},"dependencies.html":{}}}],["cropperready",{"_index":2276,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["ctrl/ngx",{"_index":952,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{},"dependencies.html":{}}}],["currentuser",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"components/MainPageComponent.html":{}}}],["currentuserdata",{"_index":2351,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuserid",{"_index":1936,"title":{},"body":{"injectables/SearchService.html":{}}}],["cursor",{"_index":2071,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["d",{"_index":2147,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["da",{"_index":690,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["dabubble",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/SignupComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"index.html":{}}}],["damit",{"_index":1786,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["das",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"injectables/FileUploadService.html":{},"injectables/GuestUserService.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["dass",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SearchService.html":{}}}],["data",{"_index":658,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["data.profilemail",{"_index":869,"title":{},"body":{"components/DialogShowProfilComponent.html":{}}}],["data.profilname",{"_index":868,"title":{},"body":{"components/DialogShowProfilComponent.html":{}}}],["database",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(date.now",{"_index":1264,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["date(userdata['createdat",{"_index":1277,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["date.now",{"_index":858,"title":{},"body":{"components/DialogShowProfilComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["datei",{"_index":1151,"title":{},"body":{"injectables/FileUploadService.html":{},"components/SignuppictureComponent.html":{}}}],["datei(en",{"_index":1114,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["dateien",{"_index":699,"title":{},"body":{"components/ChatBoardComponent.html":{},"injectables/FileUploadService.html":{}}}],["datenschutz",{"_index":1790,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/StartingPageComponent.html":{}}}],["decodeuricomponent(results[2].replace(/\\+/g",{"_index":1814,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["decorators",{"_index":501,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["default",{"_index":17,"title":{},"body":{"injectables/AnimationStateService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"injectables/OverlayService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":20,"title":{},"body":{"injectables/AnimationStateService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"injectables/OverlayService.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["definieren",{"_index":2030,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["dein",{"_index":911,"title":{},"body":{"components/DialogUserProfilComponent.html":{},"components/SignupComponent.html":{}}}],["deine",{"_index":694,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["deinem",{"_index":769,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/SignupComponent.html":{}}}],["deinen",{"_index":2042,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["deiner",{"_index":1993,"title":{},"body":{"components/SignupComponent.html":{}}}],["deklarieren",{"_index":2025,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["deletechannelsbyuser",{"_index":1218,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["deletechannelsbyuser(userid",{"_index":1228,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["deletechatsbyuser",{"_index":1219,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["deletechatsbyuser(userid",{"_index":1230,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["deletedoc",{"_index":1242,"title":{},"body":{"injectables/GuestUserService.html":{},"injectables/UserService.html":{}}}],["deletedoc(doc.ref",{"_index":1283,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["deletedoc(messagedoc.ref",{"_index":1321,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["deletefile",{"_index":924,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"injectables/FileUploadService.html":{},"components/TextareaMainPageComponent.html":{}}}],["deletefile(fileindex",{"_index":1142,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["deletemessagesbyuser",{"_index":1220,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["deletemessagesbyuser(userid",{"_index":1232,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["deleteobject",{"_index":1082,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["deleteobject(filetodelete.docref",{"_index":1148,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["deleteoldguests",{"_index":1221,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["deletereactionsbyuser",{"_index":1222,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["deletereactionsbyuser(userid",{"_index":1235,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["deletionpromise",{"_index":1282,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["deletionpromises",{"_index":1273,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["deletionpromises.push(deletionpromise",{"_index":1284,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["dem",{"_index":1300,"title":{},"body":{"injectables/GuestUserService.html":{},"components/SignuppictureComponent.html":{}}}],["den",{"_index":1111,"title":{},"body":{"injectables/FileUploadService.html":{},"injectables/SearchService.html":{}}}],["dependencies",{"_index":2509,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["der",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/FileUploadService.html":{},"injectables/GuestUserService.html":{},"components/LoginComponent.html":{},"injectables/SearchService.html":{},"components/SignuppictureComponent.html":{},"components/UploadFormComponent.html":{}}}],["des",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"injectables/OverlayService.html":{},"components/UploadFormComponent.html":{}}}],["description",{"_index":428,"title":{},"body":{"classes/Channel.html":{}}}],["dev",{"_index":2546,"title":{},"body":{"index.html":{}}}],["development",{"_index":2542,"title":{},"body":{"index.html":{}}}],["devspace",{"_index":2443,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["dialog",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["dialog.close",{"_index":575,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["dialog.getboundingclientrect",{"_index":570,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["dialog.offsetwidth",{"_index":553,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["dialog.showmodal",{"_index":560,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["dialog.style.left",{"_index":550,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["dialog.style.top",{"_index":556,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["dialogaddchannelcomponent",{"_index":90,"title":{"components/DialogAddChannelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["dialogdimensions",{"_index":569,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["dialogdimensions.bottom",{"_index":574,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["dialogdimensions.right",{"_index":572,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["dialogeditchannelcomponent",{"_index":94,"title":{"components/DialogEditChannelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":876,"title":{},"body":{"components/DialogUserMenuComponent.html":{}}}],["dialogs/dialog",{"_index":520,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["dialogshowprofilcomponent",{"_index":96,"title":{"components/DialogShowProfilComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["dialogusermenucomponent",{"_index":99,"title":{"components/DialogUserMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["dialoguserprofilcomponent",{"_index":102,"title":{"components/DialogUserProfilComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["dich",{"_index":689,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["die",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/LoginComponent.html":{},"injectables/SearchService.html":{},"components/SignuppictureComponent.html":{}}}],["dienen",{"_index":768,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["diese",{"_index":679,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["dieser",{"_index":618,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"injectables/SearchService.html":{},"components/TextareaMainPageComponent.html":{}}}],["dinge",{"_index":704,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["dir",{"_index":685,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/LoginComponent.html":{}}}],["directive",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["directives",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2557,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2562,"title":{},"body":{"index.html":{}}}],["direkt",{"_index":1955,"title":{},"body":{"injectables/SearchService.html":{}}}],["direktnachrichten",{"_index":2446,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["disable",{"_index":2154,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["display",{"_index":2058,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["displayname",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"components/DialogUserProfilComponent.html":{}}}],["dist",{"_index":2561,"title":{},"body":{"index.html":{}}}],["div",{"_index":2067,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["doc",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{},"injectables/UserService.html":{}}}],["doc(this.firestore",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{}}}],["doc.data",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{}}}],["doc.data()['members'].filter((memberid",{"_index":1297,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["doc.exists",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["doc.id",{"_index":1275,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["doc.ref",{"_index":1296,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["docref",{"_index":978,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"injectables/FileUploadService.html":{},"components/TextareaMainPageComponent.html":{}}}],["docsnapshot",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{}}}],["docsnapshot.data",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["docsnapshot.exists",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{}}}],["document",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["document.body",{"_index":2157,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["document.createelement('input",{"_index":1087,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["document.getelementbyid(\"dialog",{"_index":548,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["document.getelementbyid('all",{"_index":760,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["document.getelementbyid('channelname",{"_index":813,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["document.getelementbyid('description",{"_index":815,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["document.getelementbyid('search",{"_index":1874,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["document.getelementbyid('selected",{"_index":762,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["document.getelementbyid(seldialog",{"_index":545,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["document.queryselector('.background",{"_index":2139,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["document.queryselector('.img",{"_index":2130,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["document.queryselector('.logo",{"_index":2137,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["document.queryselector('.text",{"_index":2134,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["document.queryselector(item.selector",{"_index":2161,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["documentation",{"_index":2463,"title":{},"body":{"coverage.html":{}}}],["dokument",{"_index":1303,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["dom",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["domsanitizer",{"_index":2283,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["dos",{"_index":695,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["downloadurl",{"_index":1084,"title":{},"body":{"injectables/FileUploadService.html":{},"classes/Message.html":{},"components/UploadFormComponent.html":{}}}],["drei",{"_index":1536,"title":{},"body":{"components/MainPageComponent.html":{}}}],["du",{"_index":678,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/LoginComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/SignupComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["dynamic",{"_index":2518,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["e2e",{"_index":2570,"title":{},"body":{"index.html":{}}}],["e6e6e6",{"_index":2079,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["edit",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["editmessage",{"_index":1677,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["editmessagestate",{"_index":1675,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["editmsgtextareacomponent",{"_index":103,"title":{"components/EditMsgTextareaComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["editnameopen",{"_index":793,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["editprofil",{"_index":894,"title":{},"body":{"components/DialogUserProfilComponent.html":{}}}],["editprofilopen",{"_index":892,"title":{},"body":{"components/DialogUserProfilComponent.html":{}}}],["edittextopen",{"_index":794,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["eigenes",{"_index":2045,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["eigenschaft",{"_index":1959,"title":{},"body":{"injectables/SearchService.html":{},"components/UploadFormComponent.html":{}}}],["ein",{"_index":1199,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{}}}],["eine",{"_index":1208,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"injectables/SearchService.html":{}}}],["einen",{"_index":784,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["einfach",{"_index":1963,"title":{},"body":{"injectables/SearchService.html":{}}}],["eingabe",{"_index":974,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["el",{"_index":1166,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["element",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["element.id",{"_index":2389,"title":{},"body":{"injectables/UserService.html":{}}}],["elementref",{"_index":500,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["elementswithclasses",{"_index":2151,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["elementswithclasses.foreach(item",{"_index":2160,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["email",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"components/DialogUserProfilComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SignupComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["email:string",{"_index":1189,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["emailcontrol",{"_index":1193,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["emailcontrol?.haserror('pattern",{"_index":1200,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["emailcontrol?.haserror('required",{"_index":1196,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["emailcontrol?.value",{"_index":1195,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["emailerror",{"_index":1163,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["emailincludessearchtext",{"_index":1370,"title":{},"body":{"pipes/InputFilterPipe.html":{}}}],["emitiere",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["emoji",{"_index":953,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{},"dependencies.html":{}}}],["emojicomponent",{"_index":919,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["emojievent",{"_index":942,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["emojimenutrigger",{"_index":1586,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["emojiobj",{"_index":1656,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["emojiobj.reactuser",{"_index":1658,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["emojiobj.reactuser.length",{"_index":1660,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["emojiobj.reactuser[0",{"_index":1665,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["empfehlen",{"_index":1410,"title":{},"body":{"components/LoginComponent.html":{}}}],["empty",{"_index":1855,"title":{},"body":{"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["enable",{"_index":2168,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["end",{"_index":2087,"title":{},"body":{"components/SignuppictureComponent.html":{},"index.html":{}}}],["enter",{"_index":1639,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["entfernen",{"_index":1298,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["enthalten",{"_index":1774,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["entsprechende",{"_index":1783,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["erfolgreich",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileUploadService.html":{}}}],["ergebnisse",{"_index":1538,"title":{},"body":{"components/MainPageComponent.html":{}}}],["erneut",{"_index":1261,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["error",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileUploadService.html":{},"components/LoginComponent.html":{},"injectables/OverlayService.html":{},"components/SignuppictureComponent.html":{},"components/UploadFormComponent.html":{}}}],["error('user",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["error.code",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"components/SignuppictureComponent.html":{}}}],["error.customdata.email",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["error.message",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["errorcode",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["errormessage",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["errors",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["erst",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["erstellen",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"components/DialogAddChannelComponent.html":{},"components/SignupComponent.html":{},"components/StartingPageComponent.html":{}}}],["erstellt",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/DialogEditChannelComponent.html":{}}}],["event",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/FileUploadService.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/SignupComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/UploadFormComponent.html":{}}}],["event.blob",{"_index":2319,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["event.clientx",{"_index":571,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["event.clienty",{"_index":573,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["event.emoji.native",{"_index":977,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["event.objecturl",{"_index":2316,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["event.preventdefault",{"_index":975,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["event.target",{"_index":1091,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["eventemitter",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["eventservice",{"_index":845,"title":{"injectables/EventService.html":{}},"body":{"components/DialogShowProfilComponent.html":{},"injectables/EventService.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/SearchInputComponent.html":{},"components/ThreadBoardComponent.html":{},"coverage.html":{}}}],["evtsvc",{"_index":844,"title":{},"body":{"components/DialogShowProfilComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/SearchInputComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["execute",{"_index":2567,"title":{},"body":{"index.html":{}}}],["exists",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{}}}],["export",{"_index":35,"title":{},"body":{"injectables/AnimationStateService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"injectables/OverlayService.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["express",{"_index":2522,"title":{},"body":{"dependencies.html":{}}}],["extrahieren",{"_index":2338,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["falsch",{"_index":1400,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":19,"title":{},"body":{"injectables/AnimationStateService.html":{},"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/FileUploadService.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"injectables/OverlayService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["fb",{"_index":1168,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{}}}],["fehler",{"_index":1137,"title":{},"body":{"injectables/FileUploadService.html":{},"components/ResetPasswordComponent.html":{}}}],["fertig",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["fetch(this.croppedimage.changingthisbreaksapplicationsecurity",{"_index":2323,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["fetching",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["ffnen",{"_index":1557,"title":{},"body":{"components/MainPageComponent.html":{}}}],["field",{"_index":805,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AnimationStateService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"injectables/OverlayService.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["file.name",{"_index":1127,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["filechangeevent",{"_index":2277,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["filechangeevent(event",{"_index":2287,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["fileinfo.downloadurl",{"_index":2217,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["fileinfo.file.name",{"_index":2216,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["fileinput",{"_index":1086,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["fileinput.addeventlistener('change",{"_index":1089,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["fileinput.click",{"_index":1120,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["fileinput.type",{"_index":1088,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["files",{"_index":2553,"title":{},"body":{"index.html":{}}}],["fileselectedsubject",{"_index":1054,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["filestoupload",{"_index":1055,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["filetodelete",{"_index":1143,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["fileuploadservice",{"_index":1052,"title":{"injectables/FileUploadService.html":{}},"body":{"injectables/FileUploadService.html":{},"components/TextareaMainPageComponent.html":{},"coverage.html":{}}}],["filter.pipe",{"_index":1841,"title":{},"body":{"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["filter.pipe.ts",{"_index":1356,"title":{},"body":{"pipes/InputFilterPipe.html":{},"coverage.html":{}}}],["filter.pipe.ts:9",{"_index":1361,"title":{},"body":{"pipes/InputFilterPipe.html":{}}}],["filtercurrentuser",{"_index":2355,"title":{},"body":{"injectables/UserService.html":{}}}],["finally",{"_index":1141,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["findet",{"_index":681,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["firebase",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{},"dependencies.html":{}}}],["firebase/auth",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResetPasswordService.html":{}}}],["firebase/storage",{"_index":1083,"title":{},"body":{"injectables/FileUploadService.html":{},"components/UploadFormComponent.html":{}}}],["firebaseui",{"_index":2525,"title":{},"body":{"dependencies.html":{}}}],["firestore",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SearchService.html":{},"injectables/UserService.html":{}}}],["first",{"_index":2575,"title":{},"body":{"index.html":{}}}],["fit",{"_index":2074,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["flex",{"_index":2059,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["fontsize",{"_index":2143,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["for(channel",{"_index":1547,"title":{},"body":{"components/MainPageComponent.html":{},"components/SearchInputComponent.html":{}}}],["for(chat",{"_index":605,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["for(emojiobj",{"_index":1655,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["for(message",{"_index":707,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/MainPageComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["for(newmember",{"_index":1884,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["for(user",{"_index":1657,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["force",{"_index":2164,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["fordate",{"_index":2263,"title":{},"body":{"components/TimeSeparatorComponent.html":{}}}],["forgot",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["forgotpasswordcomponent",{"_index":106,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["form",{"_index":2267,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form'},{'name",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["form.component",{"_index":2178,"title":{},"body":{"components/StartingPageComponent.html":{}}}],["form.component.html",{"_index":2271,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form.component.scss",{"_index":2272,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form.component.ts",{"_index":2266,"title":{},"body":{"components/UploadFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:20",{"_index":2299,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form.component.ts:21",{"_index":2303,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form.component.ts:24",{"_index":2300,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form.component.ts:25",{"_index":2284,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form.component.ts:32",{"_index":2297,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form.component.ts:35",{"_index":2288,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form.component.ts:39",{"_index":2291,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form.component.ts:46",{"_index":2294,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form.component.ts:49",{"_index":2286,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form.component.ts:52",{"_index":2296,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form.component.ts:56",{"_index":2305,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form.component.ts:57",{"_index":2304,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form.component.ts:58",{"_index":2306,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form.component.ts:59",{"_index":2302,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form.component.ts:60",{"_index":2301,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form.component.ts:64",{"_index":2298,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["form/upload",{"_index":2177,"title":{},"body":{"components/StartingPageComponent.html":{},"components/UploadFormComponent.html":{},"coverage.html":{}}}],["formbuilder",{"_index":1165,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{}}}],["formgroup",{"_index":1174,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{}}}],["formsmodule",{"_index":725,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/MainPageComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["formularfeld",{"_index":1784,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formulargruppe",{"_index":2024,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["formularsteuerelemente",{"_index":2031,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["found",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["foundchannelnames",{"_index":1889,"title":{},"body":{"injectables/SearchService.html":{}}}],["foundchannels",{"_index":1932,"title":{},"body":{"injectables/SearchService.html":{}}}],["foundmessages",{"_index":1890,"title":{},"body":{"injectables/SearchService.html":{}}}],["foundmessages.push",{"_index":1949,"title":{},"body":{"injectables/SearchService.html":{}}}],["foundusers",{"_index":1891,"title":{},"body":{"injectables/SearchService.html":{}}}],["function",{"_index":497,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["further",{"_index":2578,"title":{},"body":{"index.html":{}}}],["füge",{"_index":1099,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["für",{"_index":688,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["gap",{"_index":2062,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["gastbenutzer",{"_index":1250,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["gastbenutzers",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["geben",{"_index":1197,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["gefunden",{"_index":1539,"title":{},"body":{"components/MainPageComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["gefundene",{"_index":1542,"title":{},"body":{"components/MainPageComponent.html":{}}}],["generate",{"_index":2556,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2538,"title":{},"body":{"index.html":{}}}],["generateownchatevent",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["generieren",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{}}}],["gering",{"_index":1344,"title":{},"body":{"components/ImprintComponent.html":{}}}],["gerne",{"_index":703,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["gesendet",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["getadditionaluserinfo",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauth",{"_index":2616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getchannelopenstatus",{"_index":991,"title":{},"body":{"injectables/EventService.html":{}}}],["getdatabase",{"_index":2613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getdoc",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{}}}],["getdoc(userdocref",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{}}}],["getdoc(userdocref).then((docsnapshot",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["getdocs",{"_index":1243,"title":{},"body":{"injectables/GuestUserService.html":{},"injectables/SearchService.html":{}}}],["getdocs(chatcollectionref",{"_index":1940,"title":{},"body":{"injectables/SearchService.html":{}}}],["getdocs(collection(this.firestore",{"_index":1272,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["getdocs(messagecollectionref",{"_index":1946,"title":{},"body":{"injectables/SearchService.html":{}}}],["getdocs(messagescollection",{"_index":1322,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["getdocs(query(collection(this.firestore",{"_index":1279,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["getdocs(query(messagescollection",{"_index":1318,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["getdownloadurl",{"_index":1079,"title":{},"body":{"injectables/FileUploadService.html":{},"components/UploadFormComponent.html":{}}}],["getdownloadurl(snapshot.ref",{"_index":1130,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["getdownloadurl(snapshot.ref).then((downloadurl",{"_index":2334,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["getemailerror",{"_index":1176,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["getemailfromfirebase",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["getemailfromfirebase(userid",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["getfirestore",{"_index":2611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getisanimatedonce",{"_index":22,"title":{},"body":{"injectables/AnimationStateService.html":{}}}],["getmessagetext",{"_index":1892,"title":{},"body":{"injectables/SearchService.html":{}}}],["getmessagetext(message",{"_index":1897,"title":{},"body":{"injectables/SearchService.html":{}}}],["getnameerror",{"_index":1983,"title":{},"body":{"components/SignupComponent.html":{}}}],["getnewchatopenstatus",{"_index":992,"title":{},"body":{"injectables/EventService.html":{}}}],["getparameterbyname",{"_index":1794,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["getparameterbyname(name",{"_index":1797,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["getpartnerid",{"_index":2356,"title":{},"body":{"injectables/UserService.html":{}}}],["getpartnerid(members",{"_index":2363,"title":{},"body":{"injectables/UserService.html":{}}}],["getpassworderror",{"_index":1391,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["getpasswordrepeaterror",{"_index":1763,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["getprivatechatopenstatus",{"_index":993,"title":{},"body":{"injectables/EventService.html":{}}}],["getstorage",{"_index":1073,"title":{},"body":{"injectables/FileUploadService.html":{},"components/UploadFormComponent.html":{},"miscellaneous/variables.html":{}}}],["getthreadopenstatus",{"_index":994,"title":{},"body":{"injectables/EventService.html":{}}}],["getting",{"_index":2535,"title":{"index.html":{}},"body":{}}],["getuploadedfiles",{"_index":1061,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["getuserdata",{"_index":1861,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["getuserdata(username",{"_index":1866,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["getuserdata(username:string",{"_index":1877,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["getusersdata",{"_index":2357,"title":{},"body":{"injectables/UserService.html":{}}}],["getusersdata(id",{"_index":2365,"title":{},"body":{"injectables/UserService.html":{}}}],["getworkspaceopenstatus",{"_index":995,"title":{},"body":{"injectables/EventService.html":{}}}],["gib",{"_index":1534,"title":{},"body":{"components/MainPageComponent.html":{},"injectables/SearchService.html":{}}}],["go",{"_index":2581,"title":{},"body":{"index.html":{}}}],["google",{"_index":1416,"title":{},"body":{"components/LoginComponent.html":{}}}],["googleauthprovider",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["googleauthprovider.credentialfromerror(error",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["googleauthprovider.credentialfromresult(result",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["griffbereit",{"_index":700,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["guest",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["guest${randomnum}@guest.de",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["guest_user_id",{"_index":1241,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["guest_user_key",{"_index":1216,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["guestuserid",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{}}}],["guestuserservice",{"_index":1212,"title":{"injectables/GuestUserService.html":{}},"body":{"injectables/GuestUserService.html":{},"components/LoginComponent.html":{},"components/StartingPageComponent.html":{},"coverage.html":{}}}],["gäste",{"_index":1418,"title":{},"body":{"components/LoginComponent.html":{}}}],["haben",{"_index":1667,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["hammerjs",{"_index":2527,"title":{},"body":{"dependencies.html":{}}}],["hammermodule",{"_index":2269,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["handle",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["handleresetpassword",{"_index":1795,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["hast",{"_index":1661,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/SignupComponent.html":{}}}],["hat",{"_index":1666,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"injectables/SearchService.html":{}}}],["height",{"_index":2049,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["help",{"_index":2579,"title":{},"body":{"index.html":{}}}],["here",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["hidden",{"_index":2055,"title":{},"body":{"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{}}}],["hideoverlay",{"_index":1718,"title":{},"body":{"injectables/OverlayService.html":{}}}],["hier",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatBoardComponent.html":{},"components/SignuppictureComponent.html":{}}}],["highlightuser",{"_index":2182,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["highlightuser(memberref",{"_index":2194,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["hinzu",{"_index":1101,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["hinzufügen",{"_index":602,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["hochgeladen",{"_index":1134,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["hochgeladenen",{"_index":1097,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["hochladen",{"_index":1139,"title":{},"body":{"injectables/FileUploadService.html":{},"components/SignuppictureComponent.html":{},"components/UploadFormComponent.html":{}}}],["hover",{"_index":2076,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["html",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["htmldialogelement",{"_index":488,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["htmlinputelement",{"_index":1092,"title":{},"body":{"injectables/FileUploadService.html":{},"components/SearchMemberInputComponent.html":{}}}],["http://localhost:4200",{"_index":2548,"title":{},"body":{"index.html":{}}}],["höhe",{"_index":592,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["id",{"_index":429,"title":{},"body":{"classes/Channel.html":{},"injectables/GuestUserService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":2464,"title":{},"body":{"coverage.html":{}}}],["if(!addmembersopen",{"_index":766,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["if(!editmessagestate",{"_index":1711,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["if(!editnameopen",{"_index":832,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["if(!editprofilopen",{"_index":909,"title":{},"body":{"components/DialogUserProfilComponent.html":{}}}],["if(!edittextopen",{"_index":833,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["if(!this.chatservice.searchformemberinchats(this.data.profilref",{"_index":853,"title":{},"body":{"components/DialogShowProfilComponent.html":{}}}],["if(!this.checkifuserisaleadyadded(userobj",{"_index":1871,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["if(!workspaceopen",{"_index":1531,"title":{},"body":{"components/MainPageComponent.html":{}}}],["if($event.emoji.native",{"_index":976,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["if(action",{"_index":1638,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["if(addmembersopen",{"_index":767,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["if(allmembers",{"_index":764,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["if(channelchatopen",{"_index":1559,"title":{},"body":{"components/MainPageComponent.html":{}}}],["if(channellistopen",{"_index":2444,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["if(channelname.invalid",{"_index":780,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["if(chat.allmessages[0",{"_index":613,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["if(chat.chatid",{"_index":607,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["if(chat.members.length",{"_index":2450,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["if(chatservice.currentchat.members.length",{"_index":671,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["if(dialog",{"_index":546,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["if(editmessagestate",{"_index":1712,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["if(editnameopen",{"_index":830,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["if(editprofilopen",{"_index":910,"title":{},"body":{"components/DialogUserProfilComponent.html":{}}}],["if(edittextopen",{"_index":834,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["if(emojiobj.reactuser.length",{"_index":1664,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["if(field",{"_index":816,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["if(index",{"_index":825,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["if(inputfiled",{"_index":1875,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["if(isinputfocused",{"_index":1532,"title":{},"body":{"components/MainPageComponent.html":{}}}],["if(last",{"_index":616,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["if(message.member",{"_index":714,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["if(message.messageid",{"_index":2252,"title":{},"body":{"components/ThreadBoardComponent.html":{}}}],["if(message.timestamp",{"_index":709,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["if(messagelistopen",{"_index":2447,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["if(newchatopen",{"_index":1558,"title":{},"body":{"components/MainPageComponent.html":{}}}],["if(onchannelboard",{"_index":1668,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["if(ownchat",{"_index":2461,"title":{},"body":{"components/WorkspaceUserProfilComponent.html":{}}}],["if(privatechatopen",{"_index":1560,"title":{},"body":{"components/MainPageComponent.html":{}}}],["if(searchchannel",{"_index":1857,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["if(searchtext",{"_index":1853,"title":{},"body":{"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["if(searchuser",{"_index":1854,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["if(selectedmembersarray",{"_index":580,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["if(selectmerbersopen",{"_index":791,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["if(sortedreactions.length",{"_index":1654,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["if(this.authservice.uid",{"_index":823,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["if(this.bodyclicklistener",{"_index":576,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["if(this.channelservice.channels[this.channelservice.selectedchannel",{"_index":595,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["if(this.channelservice.istoday(chat.timestamp",{"_index":612,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["if(this.channelservice.istoday(message.timestamp",{"_index":713,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["if(this.channelservice.selectedchannelchats.length",{"_index":617,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["if(this.channelservice.selectedchannelchats[0",{"_index":604,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["if(this.channelservice.selectedchannelchats[this.channelservice.selchatindex",{"_index":2250,"title":{},"body":{"components/ThreadBoardComponent.html":{}}}],["if(this.chatservice.messages.length",{"_index":673,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["if(this.chatservice.unsubprivatechatmessages",{"_index":854,"title":{},"body":{"components/DialogShowProfilComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["if(this.fileuploadservice.uploadedfiles",{"_index":2229,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["if(this.fileuploadservice.uploadedfiles[0",{"_index":2238,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["if(this.onchannelboard",{"_index":1642,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["if(this.onprivatechat",{"_index":960,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["if(this.onprivattextarea",{"_index":2227,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["if(this.router.url",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.selectedmembers.findindex(obj",{"_index":1882,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["if(this.uploadedfiles.length",{"_index":1085,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["if(this.userid",{"_index":2458,"title":{},"body":{"components/WorkspaceUserProfilComponent.html":{}}}],["if(threadopen",{"_index":1561,"title":{},"body":{"components/MainPageComponent.html":{}}}],["if(uploadedfile.length",{"_index":1653,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["if(uploadedfile[0",{"_index":982,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["if(user",{"_index":1659,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["if(workspaceopen",{"_index":1530,"title":{},"body":{"components/MainPageComponent.html":{}}}],["if(wrapper",{"_index":549,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["ihn",{"_index":1260,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["ihnen",{"_index":1207,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["ihr",{"_index":1209,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["ihre",{"_index":1198,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{}}}],["ihren",{"_index":1991,"title":{},"body":{"components/SignupComponent.html":{}}}],["im",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{}}}],["image",{"_index":2295,"title":{},"body":{"components/UploadFormComponent.html":{},"dependencies.html":{}}}],["imagechangedevent",{"_index":2274,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["imagecropped",{"_index":2278,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["imagecropped(event",{"_index":2289,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["imagecroppedevent",{"_index":2290,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["imagecroppermodule",{"_index":2268,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["imageloaded",{"_index":2279,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["imageloaded(image",{"_index":2292,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["img",{"_index":2056,"title":{},"body":{"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{}}}],["imgcontainer",{"_index":2129,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["implements",{"_index":1364,"title":{},"body":{"pipes/InputFilterPipe.html":{},"index.html":{}}}],["import",{"_index":31,"title":{},"body":{"injectables/AnimationStateService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"injectables/OverlayService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["importieren",{"_index":2022,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["importprovidersfrom(provideauth",{"_index":2615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["importprovidersfrom(providedatabase",{"_index":2612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["importprovidersfrom(providefirebaseapp",{"_index":2602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["importprovidersfrom(providefirestore",{"_index":2610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["importprovidersfrom(providestorage",{"_index":2617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["impressum",{"_index":1342,"title":{},"body":{"components/ImprintComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartingPageComponent.html":{}}}],["imprint",{"_index":1336,"title":{},"body":{"components/ImprintComponent.html":{}}}],["imprint'},{'name",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["imprint.component.html",{"_index":1337,"title":{},"body":{"components/ImprintComponent.html":{}}}],["imprint.component.scss",{"_index":1338,"title":{},"body":{"components/ImprintComponent.html":{}}}],["imprintcomponent",{"_index":109,"title":{"components/ImprintComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/AnimationStateService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"injectables/OverlayService.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AnimationStateService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"injectables/OverlayService.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["initializeapp({\"projectid\":\"dabubble",{"_index":2603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/StartingPageComponent.html":{},"components/UploadFormComponent.html":{},"injectables/UserService.html":{}}}],["inject(authservice",{"_index":1170,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/StartingPageComponent.html":{},"components/UploadFormComponent.html":{}}}],["inject(channelservice",{"_index":1910,"title":{},"body":{"injectables/SearchService.html":{}}}],["inject(firestore",{"_index":1912,"title":{},"body":{"injectables/SearchService.html":{},"injectables/UserService.html":{}}}],["inject(guestuserservice",{"_index":1385,"title":{},"body":{"components/LoginComponent.html":{},"components/StartingPageComponent.html":{}}}],["inject(loginservice",{"_index":1173,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/StartingPageComponent.html":{},"components/UploadFormComponent.html":{}}}],["inject(mat_dialog_data",{"_index":849,"title":{},"body":{"components/DialogShowProfilComponent.html":{}}}],["inject(overlayservice",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmationOverlayComponent.html":{}}}],["inject(resetpasswordservice",{"_index":1760,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["inject(searchservice",{"_index":1500,"title":{},"body":{"components/MainPageComponent.html":{}}}],["inject(userservice",{"_index":1917,"title":{},"body":{"injectables/SearchService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AnimationStateService.html":{},"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"injectables/GuestUserService.html":{},"injectables/LoginService.html":{},"injectables/OverlayService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SearchService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AnimationStateService.html":{},"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"injectables/GuestUserService.html":{},"injectables/LoginService.html":{},"injectables/OverlayService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SearchService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AnimationStateService.html":{},"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"injectables/GuestUserService.html":{},"injectables/LoginService.html":{},"injectables/OverlayService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SearchService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":722,"title":{},"body":{"components/ConfirmationOverlayComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["input'},{'name",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["input.component",{"_index":530,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["input.component.html",{"_index":1826,"title":{},"body":{"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["input.component.scss",{"_index":1827,"title":{},"body":{"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["input.component.ts",{"_index":1825,"title":{},"body":{"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:19",{"_index":1837,"title":{},"body":{"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["input.component.ts:20",{"_index":1839,"title":{},"body":{"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["input.component.ts:21",{"_index":1838,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:22",{"_index":1832,"title":{},"body":{"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["input.component.ts:24",{"_index":1836,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:25",{"_index":1864,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["input.component.ts:27",{"_index":1834,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:38",{"_index":1867,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["input.component.ts:44",{"_index":1833,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:45",{"_index":1870,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["input.component.ts:50",{"_index":1865,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["input.component.ts:53",{"_index":1835,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input/search",{"_index":529,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/WorkspaceMenuComponent.html":{},"coverage.html":{}}}],["inputfiled",{"_index":1873,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["inputfiled.value",{"_index":1876,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["inputfilter",{"_index":1357,"title":{},"body":{"pipes/InputFilterPipe.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["inputfilterpipe",{"_index":1353,"title":{"pipes/InputFilterPipe.html":{}},"body":{"pipes/InputFilterPipe.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"coverage.html":{}}}],["inputfocus",{"_index":1457,"title":{},"body":{"components/MainPageComponent.html":{}}}],["inputs",{"_index":926,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["inputtext",{"_index":1828,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["interface",{"_index":2503,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["isanimatedonce",{"_index":13,"title":{},"body":{"injectables/AnimationStateService.html":{},"components/StartAnimationComponent.html":{}}}],["isanimatedonce(value",{"_index":40,"title":{},"body":{"injectables/AnimationStateService.html":{}}}],["isguestuserexisting",{"_index":1256,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["isguestuseronfirebase",{"_index":1223,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["isguestuseronfirebase(guestuserid",{"_index":1237,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["isinputfocused",{"_index":1463,"title":{},"body":{"components/MainPageComponent.html":{}}}],["ist",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/LoginComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{}}}],["isuploaded",{"_index":2275,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["isuploaded:boolean",{"_index":2322,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["isuploading",{"_index":1056,"title":{},"body":{"injectables/FileUploadService.html":{},"components/UploadFormComponent.html":{}}}],["it['email",{"_index":1371,"title":{},"body":{"pipes/InputFilterPipe.html":{}}}],["it['email'].tolocalelowercase().includes(searchtext",{"_index":1372,"title":{},"body":{"pipes/InputFilterPipe.html":{}}}],["it['name",{"_index":1368,"title":{},"body":{"pipes/InputFilterPipe.html":{}}}],["it['name'].tolocalelowercase().includes(searchtext",{"_index":1369,"title":{},"body":{"pipes/InputFilterPipe.html":{}}}],["item.classname",{"_index":2163,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["items",{"_index":1362,"title":{},"body":{"pipes/InputFilterPipe.html":{},"components/SignuppictureComponent.html":{}}}],["items.filter(it",{"_index":1366,"title":{},"body":{"pipes/InputFilterPipe.html":{}}}],["joinstaringchannelsevent",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["joinstartingchannelseventemitted",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["justify",{"_index":2083,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["kannst",{"_index":701,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["kanäle",{"_index":1546,"title":{},"body":{"components/MainPageComponent.html":{}}}],["karma",{"_index":2569,"title":{},"body":{"index.html":{}}}],["kein",{"_index":1859,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["keine",{"_index":1249,"title":{},"body":{"injectables/GuestUserService.html":{},"components/MainPageComponent.html":{}}}],["keyboardevent).key",{"_index":2234,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["keyboardevent).shiftkey",{"_index":2233,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["kirchgasse",{"_index":1345,"title":{},"body":{"components/ImprintComponent.html":{}}}],["kommunikation",{"_index":772,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["konto",{"_index":1992,"title":{},"body":{"components/SignupComponent.html":{},"components/StartingPageComponent.html":{}}}],["können",{"_index":1211,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["last",{"_index":606,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["leave",{"_index":1641,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["leavechannel",{"_index":796,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["leere",{"_index":1095,"title":{},"body":{"injectables/FileUploadService.html":{},"injectables/SearchService.html":{}}}],["left",{"_index":1582,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/StartAnimationComponent.html":{}}}],["left'},{'name",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["left.component",{"_index":516,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["left.component.html",{"_index":1583,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.scss",{"_index":1584,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts",{"_index":1581,"title":{},"body":{"components/MessageLeftComponent.html":{},"coverage.html":{}}}],["left.component.ts:129",{"_index":1617,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:26",{"_index":1606,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:27",{"_index":1607,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:28",{"_index":1608,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:29",{"_index":1605,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:30",{"_index":1601,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:31",{"_index":1604,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:32",{"_index":1602,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:33",{"_index":1600,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:34",{"_index":1611,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:35",{"_index":1612,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:36",{"_index":1609,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:37",{"_index":1603,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:38",{"_index":1610,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:39",{"_index":1613,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:41",{"_index":1614,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:43",{"_index":1630,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:45",{"_index":1599,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:48",{"_index":1628,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:51",{"_index":1619,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:56",{"_index":1621,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:68",{"_index":1623,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:79",{"_index":1626,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:86",{"_index":1624,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left.component.ts:98",{"_index":1615,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["left/message",{"_index":515,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/MessageLeftComponent.html":{},"components/ThreadBoardComponent.html":{},"coverage.html":{}}}],["legend",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["leider",{"_index":1201,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["letzte",{"_index":1670,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["leute",{"_index":603,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogAddChannelComponent.html":{}}}],["links",{"_index":698,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["list",{"_index":1541,"title":{},"body":{"components/MainPageComponent.html":{},"injectables/UserService.html":{}}}],["list.foreach(element",{"_index":2387,"title":{},"body":{"injectables/UserService.html":{}}}],["liste",{"_index":693,"title":{},"body":{"components/ChatBoardComponent.html":{},"injectables/FileUploadService.html":{},"components/SignuppictureComponent.html":{}}}],["literal",{"_index":846,"title":{},"body":{"components/DialogShowProfilComponent.html":{},"injectables/FileUploadService.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"miscellaneous/typealiases.html":{}}}],["loadedimage",{"_index":2293,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["loadimagefailed",{"_index":2280,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["local",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{}}}],["localstorage.getitem(this.guest_user_key",{"_index":1246,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["localstorage.setitem(this.guest_user_key",{"_index":1254,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["log",{"_index":891,"title":{},"body":{"components/DialogUserMenuComponent.html":{}}}],["logging",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["login.component.html",{"_index":1375,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1376,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.service",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["login/login.component",{"_index":2173,"title":{},"body":{"components/StartingPageComponent.html":{}}}],["logincomponent",{"_index":111,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["loginerror",{"_index":1377,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginguest",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginguest(guestuserid",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginservice",{"_index":192,"title":{"injectables/LoginService.html":{}},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartingPageComponent.html":{},"components/UploadFormComponent.html":{},"coverage.html":{}}}],["loginservice:loginservice",{"_index":2026,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["loginwithgoogle",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["logo",{"_index":2153,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["logocontainer",{"_index":2136,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["logout",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["logoutevent",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["löschen",{"_index":981,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"injectables/FileUploadService.html":{}}}],["löschvorgänge",{"_index":1287,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["mache",{"_index":691,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["mail",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{}}}],["main",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["mainpagecomponent",{"_index":113,"title":{"components/MainPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["map",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["margin",{"_index":2064,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["marketing",{"_index":777,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["mart",{"_index":954,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{},"dependencies.html":{}}}],["mart/ngx",{"_index":957,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["mat_dialog_data",{"_index":851,"title":{},"body":{"components/DialogShowProfilComponent.html":{}}}],["matbuttonmodule",{"_index":1453,"title":{},"body":{"components/MainPageComponent.html":{}}}],["matching",{"_index":42,"title":{},"body":{"injectables/AnimationStateService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"injectables/OverlayService.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":476,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["matdialogactions",{"_index":728,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{}}}],["matdialogclose",{"_index":729,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserProfilComponent.html":{}}}],["matdialogcontent",{"_index":727,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{}}}],["matdialogmodule",{"_index":454,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["matdialogref",{"_index":882,"title":{},"body":{"components/DialogUserMenuComponent.html":{}}}],["matdialogtitle",{"_index":726,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/DialogShowProfilComponent.html":{}}}],["math.floor(math.random",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["math.random().tostring(36).substring(2",{"_index":1071,"title":{},"body":{"injectables/FileUploadService.html":{},"components/UploadFormComponent.html":{}}}],["matmenumodule",{"_index":918,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["matmenutrigger",{"_index":955,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["matprogressbarmodule",{"_index":2270,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["matsidenavmodule",{"_index":1452,"title":{},"body":{"components/MainPageComponent.html":{}}}],["meldung",{"_index":1964,"title":{},"body":{"injectables/SearchService.html":{}}}],["member",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["member[0",{"_index":601,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["memberdata",{"_index":654,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["memberdata.email",{"_index":664,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["memberdata.id",{"_index":662,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["memberdata.name",{"_index":660,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["memberdata.photourl",{"_index":666,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["memberid",{"_index":644,"title":{},"body":{"components/ChatBoardComponent.html":{},"injectables/GuestUserService.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["memberimg",{"_index":1593,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["membername",{"_index":2195,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["memberref",{"_index":1594,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["members",{"_index":430,"title":{},"body":{"classes/Channel.html":{},"components/DialogAddChannelComponent.html":{},"injectables/GuestUserService.html":{},"classes/PrivateChat.html":{},"injectables/UserService.html":{}}}],["members.length",{"_index":599,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["men",{"_index":1555,"title":{},"body":{"components/MainPageComponent.html":{}}}],["menu",{"_index":873,"title":{},"body":{"components/DialogUserMenuComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["menu'},{'name",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["menu.component",{"_index":1507,"title":{},"body":{"components/MainPageComponent.html":{}}}],["menu.component.html",{"_index":874,"title":{},"body":{"components/DialogUserMenuComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["menu.component.scss",{"_index":875,"title":{},"body":{"components/DialogUserMenuComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["menu.component.ts",{"_index":872,"title":{},"body":{"components/DialogUserMenuComponent.html":{},"components/WorkspaceMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:20",{"_index":878,"title":{},"body":{"components/DialogUserMenuComponent.html":{}}}],["menu.component.ts:21",{"_index":881,"title":{},"body":{"components/DialogUserMenuComponent.html":{}}}],["menu.component.ts:23",{"_index":2424,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["menu.component.ts:24",{"_index":880,"title":{},"body":{"components/DialogUserMenuComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["menu.component.ts:25",{"_index":2425,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["menu.component.ts:26",{"_index":2409,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["menu.component.ts:27",{"_index":2411,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["menu.component.ts:28",{"_index":2410,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["menu.component.ts:29",{"_index":2408,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["menu.component.ts:32",{"_index":2423,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["menu.component.ts:33",{"_index":879,"title":{},"body":{"components/DialogUserMenuComponent.html":{}}}],["menu.component.ts:34",{"_index":2413,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["menu.component.ts:41",{"_index":2412,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["menu.component.ts:45",{"_index":2421,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["menu.component.ts:49",{"_index":2422,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["menu.component.ts:54",{"_index":2416,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["menu.component.ts:59",{"_index":2415,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["menu.component.ts:67",{"_index":2418,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["menu.component.ts:82",{"_index":2419,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["menu/dialog",{"_index":871,"title":{},"body":{"components/DialogUserMenuComponent.html":{},"components/MainPageComponent.html":{},"coverage.html":{}}}],["menu/workspace",{"_index":1506,"title":{},"body":{"components/MainPageComponent.html":{},"components/WorkspaceMenuComponent.html":{},"coverage.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":2619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":117,"title":{"classes/Message.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["message.class",{"_index":631,"title":{},"body":{"classes/Chat.html":{}}}],["message.hasownproperty('message",{"_index":1957,"title":{},"body":{"injectables/SearchService.html":{}}}],["message.message",{"_index":1961,"title":{},"body":{"injectables/SearchService.html":{}}}],["messagecollectionref",{"_index":1944,"title":{},"body":{"injectables/SearchService.html":{}}}],["messagedata",{"_index":1325,"title":{},"body":{"injectables/GuestUserService.html":{},"injectables/SearchService.html":{}}}],["messagedata['message'].tolowercase().includes(querytext",{"_index":1948,"title":{},"body":{"injectables/SearchService.html":{}}}],["messagedata['reactions",{"_index":1327,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["messagedoc",{"_index":1324,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["messagedoc.data",{"_index":1326,"title":{},"body":{"injectables/GuestUserService.html":{},"injectables/SearchService.html":{}}}],["messageid",{"_index":1564,"title":{},"body":{"classes/Message.html":{}}}],["messageindex",{"_index":927,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["messageleftcomponent",{"_index":116,"title":{"components/MessageLeftComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["messagelistopen",{"_index":2402,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["messageloaded",{"_index":1598,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["messageobj",{"_index":959,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["messageobj.message",{"_index":965,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["messageobj.reactions.findindex(reaction",{"_index":1650,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["messageobj.reactions.push(newreaction",{"_index":1648,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["messageobj.reactions.splice(index",{"_index":1651,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["messageobj.uploadedfile",{"_index":967,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["messagequerysnapshot",{"_index":1317,"title":{},"body":{"injectables/GuestUserService.html":{},"injectables/SearchService.html":{}}}],["messagequerysnapshot.foreach((messagedoc",{"_index":1320,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["messagequerysnapshot.foreach(async",{"_index":1323,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["messagequerysnapshot.foreach(messagedoc",{"_index":1947,"title":{},"body":{"injectables/SearchService.html":{}}}],["messagerightcomponent",{"_index":119,"title":{"components/MessageRightComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["messagescollection",{"_index":1314,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["metadata",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["methods",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"injectables/OverlayService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/UploadFormComponent.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["mindestens",{"_index":1535,"title":{},"body":{"components/MainPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["miscellaneous",{"_index":2589,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatBoardComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["mitglieder",{"_index":600,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogAddChannelComponent.html":{}}}],["models/channel.class",{"_index":531,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{}}}],["models/message.class",{"_index":958,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["models/reaction.class",{"_index":1632,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["models/user.class",{"_index":532,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/UserService.html":{}}}],["modules",{"_index":2584,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":2580,"title":{},"body":{"index.html":{}}}],["moveontop",{"_index":2141,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["msg",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["murnau",{"_index":1347,"title":{},"body":{"components/ImprintComponent.html":{}}}],["muss",{"_index":1771,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["myform",{"_index":1161,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["nach",{"_index":1113,"title":{},"body":{"injectables/FileUploadService.html":{},"components/UploadFormComponent.html":{}}}],["nachricht",{"_index":870,"title":{},"body":{"components/DialogShowProfilComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"injectables/SearchService.html":{}}}],["nachrichten",{"_index":1552,"title":{},"body":{"components/MainPageComponent.html":{}}}],["nachrichtentyp",{"_index":1965,"title":{},"body":{"injectables/SearchService.html":{}}}],["name",{"_index":27,"title":{},"body":{"injectables/AnimationStateService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"injectables/OverlayService.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"index.html":{}}}],["name.replace(/[[]]/g",{"_index":1808,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["name@if(!editnameopen",{"_index":828,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["namecontrol",{"_index":1988,"title":{},"body":{"components/SignupComponent.html":{}}}],["namecontrol?.haserror('required",{"_index":1990,"title":{},"body":{"components/SignupComponent.html":{}}}],["nameerror",{"_index":1971,"title":{},"body":{"components/SignupComponent.html":{}}}],["nameincludessearchtext",{"_index":1367,"title":{},"body":{"pipes/InputFilterPipe.html":{}}}],["namen",{"_index":785,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/SignupComponent.html":{}}}],["navigate",{"_index":2547,"title":{},"body":{"index.html":{}}}],["navigatetologin",{"_index":1425,"title":{},"body":{"injectables/LoginService.html":{}}}],["ndern",{"_index":1210,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["neckar",{"_index":1348,"title":{},"body":{"components/ImprintComponent.html":{}}}],["need",{"_index":2574,"title":{},"body":{"index.html":{}}}],["neu",{"_index":620,"title":{},"body":{"components/ChannelBoardComponent.html":{},"injectables/FileUploadService.html":{},"components/StartingPageComponent.html":{}}}],["neue",{"_index":1252,"title":{},"body":{"injectables/GuestUserService.html":{},"components/NewMsgBoardComponent.html":{}}}],["neuer",{"_index":1108,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["neues",{"_index":1994,"title":{},"body":{"components/SignupComponent.html":{}}}],["new",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{},"index.html":{}}}],["newchatopen",{"_index":1458,"title":{},"body":{"components/MainPageComponent.html":{}}}],["newchatopenstatus",{"_index":986,"title":{},"body":{"injectables/EventService.html":{}}}],["newmember.id",{"_index":1885,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["newmember.name",{"_index":1886,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["newmsgboardcomponent",{"_index":121,"title":{"components/NewMsgBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["newpassword",{"_index":1822,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["newreaction",{"_index":1649,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["newreaction.reactemoji",{"_index":1647,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["newreaction.reactuser",{"_index":1645,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["ng",{"_index":2544,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":1588,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["ngclass",{"_index":718,"title":{},"body":{"components/ConfirmationOverlayComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/StartAnimationComponent.html":{}}}],["ngfor",{"_index":1451,"title":{},"body":{"components/MainPageComponent.html":{},"components/SignuppictureComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["ngform",{"_index":948,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["ngform.resetform",{"_index":971,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["ngform.valid",{"_index":963,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["ngif",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/StartingPageComponent.html":{},"components/UploadFormComponent.html":{}}}],["ngondestroy",{"_index":2358,"title":{},"body":{"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{}}}],["ngoninit",{"_index":1464,"title":{},"body":{"components/MainPageComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{}}}],["ngx",{"_index":2308,"title":{},"body":{"components/UploadFormComponent.html":{},"dependencies.html":{}}}],["nicht",{"_index":1258,"title":{},"body":{"injectables/GuestUserService.html":{},"components/ResetPasswordComponent.html":{},"injectables/SearchService.html":{}}}],["niemand",{"_index":1856,"title":{},"body":{"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["noch",{"_index":1255,"title":{},"body":{"injectables/GuestUserService.html":{},"components/TextareaMainPageComponent.html":{}}}],["none",{"_index":2148,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["notizen",{"_index":692,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["null",{"_index":1387,"title":{},"body":{"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"injectables/OverlayService.html":{},"injectables/ResetPasswordService.html":{}}}],["number",{"_index":629,"title":{},"body":{"classes/Chat.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/FileUploadService.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"classes/PrivateChat.html":{},"components/SearchMemberInputComponent.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{}}}],["nur",{"_index":682,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/SignuppictureComponent.html":{}}}],["nutzen",{"_index":1411,"title":{},"body":{"components/LoginComponent.html":{}}}],["ob",{"_index":1146,"title":{},"body":{"injectables/FileUploadService.html":{},"injectables/GuestUserService.html":{}}}],["obj",{"_index":433,"title":{},"body":{"classes/Channel.html":{},"classes/Chat.html":{},"classes/Message.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["obj.chatrefs",{"_index":2349,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["obj.creator",{"_index":444,"title":{},"body":{"classes/Channel.html":{}}}],["obj.description",{"_index":448,"title":{},"body":{"classes/Channel.html":{}}}],["obj.email",{"_index":2347,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["obj.id",{"_index":441,"title":{},"body":{"classes/Channel.html":{},"classes/Chat.html":{},"classes/Message.html":{},"classes/PrivateChat.html":{},"components/SearchMemberInputComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["obj.member",{"_index":1576,"title":{},"body":{"classes/Message.html":{}}}],["obj.members",{"_index":446,"title":{},"body":{"classes/Channel.html":{},"classes/PrivateChat.html":{}}}],["obj.message",{"_index":1574,"title":{},"body":{"classes/Message.html":{}}}],["obj.messages",{"_index":636,"title":{},"body":{"classes/Chat.html":{}}}],["obj.name",{"_index":442,"title":{},"body":{"classes/Channel.html":{},"components/SearchMemberInputComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["obj.photourl",{"_index":2348,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["obj.reactemoji",{"_index":1748,"title":{},"body":{"classes/Reaction.html":{}}}],["obj.reactions",{"_index":1578,"title":{},"body":{"classes/Message.html":{}}}],["obj.reactuser",{"_index":1746,"title":{},"body":{"classes/Reaction.html":{}}}],["obj.timestamp",{"_index":634,"title":{},"body":{"classes/Chat.html":{},"classes/Message.html":{},"classes/PrivateChat.html":{}}}],["obj.uploadedfile",{"_index":1579,"title":{},"body":{"classes/Message.html":{}}}],["object",{"_index":2073,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["object.assign",{"_index":585,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["object.entries(messagedata['reactions",{"_index":1329,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["object.fromentries(updatedreactions",{"_index":1334,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["objekt",{"_index":1958,"title":{},"body":{"injectables/SearchService.html":{}}}],["observable",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileUploadService.html":{}}}],["oder",{"_index":696,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/LoginComponent.html":{},"injectables/SearchService.html":{}}}],["office",{"_index":789,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["onauthstatechanged",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["onchannelboard",{"_index":928,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["onchannelboard:boolean",{"_index":2205,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["onclosethread",{"_index":2243,"title":{},"body":{"components/ThreadBoardComponent.html":{}}}],["onenterkeypressed",{"_index":2183,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["onenterkeypressed(event",{"_index":2197,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["oninit",{"_index":2112,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["onmouseover",{"_index":1589,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["onmouseover(action",{"_index":1620,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["onmouseover(action:string",{"_index":1635,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["onnewmsgboard",{"_index":2185,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["onopenchannel",{"_index":1465,"title":{},"body":{"components/MainPageComponent.html":{},"components/SearchInputComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["onopenchannel(channelref",{"_index":1477,"title":{},"body":{"components/MainPageComponent.html":{},"components/SearchInputComponent.html":{}}}],["onopenchannel(channelref:string",{"_index":1847,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["onopenchannel(i",{"_index":2414,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["onopenchannel(i:number",{"_index":2435,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["onopennewchat",{"_index":2403,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["onopenprivatechat",{"_index":2404,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["onopenprivatechat(chat",{"_index":2417,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["onopenthread",{"_index":1590,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["onprivatechat",{"_index":929,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["onprivattextarea",{"_index":2186,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["onsnapshot",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["onsnapshot(collection(this.firestore",{"_index":2385,"title":{},"body":{"injectables/UserService.html":{}}}],["onsnapshot(doc(collection(this.firestore",{"_index":2395,"title":{},"body":{"injectables/UserService.html":{}}}],["onsnapshot(userdocref",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["onsubmit",{"_index":1162,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["onsubmit(event",{"_index":1973,"title":{},"body":{"components/SignupComponent.html":{}}}],["onthreadboard",{"_index":930,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["onthreadboard:boolean",{"_index":2206,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["onworkspace",{"_index":2452,"title":{},"body":{"components/WorkspaceUserProfilComponent.html":{}}}],["opacity",{"_index":2145,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["openaddchanneldialog",{"_index":2405,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["openaddmembers",{"_index":734,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["openchanel",{"_index":1466,"title":{},"body":{"components/MainPageComponent.html":{}}}],["openchangesname",{"_index":797,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["openchangestext",{"_index":798,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["openchannel",{"_index":996,"title":{},"body":{"injectables/EventService.html":{},"components/WorkspaceMenuComponent.html":{}}}],["openchannel(state",{"_index":1010,"title":{},"body":{"injectables/EventService.html":{}}}],["openchannel(state:boolean",{"_index":1034,"title":{},"body":{"injectables/EventService.html":{}}}],["openchannelmembersdialog",{"_index":471,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["openchannelmembersdialog(seldialog",{"_index":490,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["openchannelmembersdialog(seldialog:string",{"_index":544,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["openeditchanneldialog",{"_index":472,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["opennewchat",{"_index":997,"title":{},"body":{"injectables/EventService.html":{},"components/MainPageComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["opennewchat(state",{"_index":1013,"title":{},"body":{"injectables/EventService.html":{}}}],["opennewchat(state:boolean",{"_index":1040,"title":{},"body":{"injectables/EventService.html":{}}}],["openprivatechat",{"_index":998,"title":{},"body":{"injectables/EventService.html":{},"components/MainPageComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["openprivatechat(state",{"_index":1015,"title":{},"body":{"injectables/EventService.html":{}}}],["openprivatechat(state:boolean",{"_index":1037,"title":{},"body":{"injectables/EventService.html":{}}}],["opens",{"_index":1486,"title":{},"body":{"components/MainPageComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["openshowprofildialog",{"_index":642,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["openshowprofildialog(memberid",{"_index":643,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["openthread",{"_index":999,"title":{},"body":{"injectables/EventService.html":{}}}],["openthread(state",{"_index":1017,"title":{},"body":{"injectables/EventService.html":{}}}],["openthread(state:boolean",{"_index":1031,"title":{},"body":{"injectables/EventService.html":{}}}],["openthreadonsearch",{"_index":1467,"title":{},"body":{"components/MainPageComponent.html":{}}}],["openthreadonsearch(channelref",{"_index":1482,"title":{},"body":{"components/MainPageComponent.html":{}}}],["openusermenudialog",{"_index":1468,"title":{},"body":{"components/MainPageComponent.html":{}}}],["openuserprofildialog",{"_index":877,"title":{},"body":{"components/DialogUserMenuComponent.html":{}}}],["openworkspace",{"_index":1000,"title":{},"body":{"injectables/EventService.html":{},"components/MainPageComponent.html":{}}}],["openworkspace(state",{"_index":1019,"title":{},"body":{"injectables/EventService.html":{}}}],["openworkspace(state:boolean",{"_index":1043,"title":{},"body":{"injectables/EventService.html":{}}}],["optional",{"_index":28,"title":{},"body":{"injectables/AnimationStateService.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"injectables/OverlayService.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/UploadFormComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["out",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"components/DialogUserMenuComponent.html":{},"index.html":{}}}],["output",{"_index":951,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["output,eventemitter",{"_index":1631,"title":{},"body":{"components/MessageLeftComponent.html":{}}}],["outputs",{"_index":932,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["overflow",{"_index":2054,"title":{},"body":{"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{}}}],["overlay",{"_index":717,"title":{},"body":{"components/ConfirmationOverlayComponent.html":{}}}],["overlay'},{'name",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["overlay.component",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["overlay.component.html",{"_index":719,"title":{},"body":{"components/ConfirmationOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":720,"title":{},"body":{"components/ConfirmationOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":716,"title":{},"body":{"components/ConfirmationOverlayComponent.html":{},"coverage.html":{}}}],["overlay.component.ts:13",{"_index":721,"title":{},"body":{"components/ConfirmationOverlayComponent.html":{}}}],["overlay.service",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["overlay/confirmation",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"coverage.html":{}}}],["overlaycontent",{"_index":1715,"title":{},"body":{"injectables/OverlayService.html":{}}}],["overlaycontent:any",{"_index":1731,"title":{},"body":{"injectables/OverlayService.html":{}}}],["overlayservice",{"_index":63,"title":{"injectables/OverlayService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmationOverlayComponent.html":{},"components/LoginComponent.html":{},"injectables/OverlayService.html":{},"components/SignuppictureComponent.html":{},"coverage.html":{}}}],["overlayservice:overlayservice",{"_index":1395,"title":{},"body":{"components/LoginComponent.html":{}}}],["overlayshow",{"_index":1716,"title":{},"body":{"injectables/OverlayService.html":{}}}],["overlayshow:boolean",{"_index":1730,"title":{},"body":{"injectables/OverlayService.html":{}}}],["overlaystyle",{"_index":1717,"title":{},"body":{"injectables/OverlayService.html":{}}}],["overlaystyle:string",{"_index":1732,"title":{},"body":{"injectables/OverlayService.html":{}}}],["overview",{"_index":2582,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["ownchat",{"_index":2453,"title":{},"body":{"components/WorkspaceUserProfilComponent.html":{}}}],["ownchateventemitted",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["ownpicture",{"_index":2082,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["p",{"_index":2085,"title":{},"body":{"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{}}}],["package",{"_index":2508,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":2069,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["page",{"_index":1450,"title":{},"body":{"components/MainPageComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["page.component",{"_index":513,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["page.component.html",{"_index":1454,"title":{},"body":{"components/MainPageComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["page.component.scss",{"_index":1455,"title":{},"body":{"components/MainPageComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["page.component.ts",{"_index":1449,"title":{},"body":{"components/MainPageComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:100",{"_index":2196,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["page.component.ts:102",{"_index":1479,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:118",{"_index":1481,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:130",{"_index":1488,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:144",{"_index":1485,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:149",{"_index":1492,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:154",{"_index":1478,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:163",{"_index":1484,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:169",{"_index":1490,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:174",{"_index":1475,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:26",{"_index":2203,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["page.component.ts:29",{"_index":2191,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["page.component.ts:30",{"_index":1494,"title":{},"body":{"components/MainPageComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["page.component.ts:31",{"_index":1501,"title":{},"body":{"components/MainPageComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["page.component.ts:32",{"_index":1505,"title":{},"body":{"components/MainPageComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["page.component.ts:33",{"_index":1495,"title":{},"body":{"components/MainPageComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["page.component.ts:34",{"_index":1499,"title":{},"body":{"components/MainPageComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["page.component.ts:35",{"_index":1503,"title":{},"body":{"components/MainPageComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["page.component.ts:36",{"_index":1498,"title":{},"body":{"components/MainPageComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["page.component.ts:37",{"_index":1504,"title":{},"body":{"components/MainPageComponent.html":{},"components/StartingPageComponent.html":{}}}],["page.component.ts:38",{"_index":1497,"title":{},"body":{"components/MainPageComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["page.component.ts:39",{"_index":1502,"title":{},"body":{"components/MainPageComponent.html":{},"components/StartingPageComponent.html":{}}}],["page.component.ts:40",{"_index":1474,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:41",{"_index":2171,"title":{},"body":{"components/StartingPageComponent.html":{}}}],["page.component.ts:42",{"_index":2202,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["page.component.ts:43",{"_index":1496,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:62",{"_index":1476,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:76",{"_index":2193,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["page.component.ts:78",{"_index":1491,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:81",{"_index":2198,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["page.component.ts:85",{"_index":1493,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:89",{"_index":2192,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["page.component.ts:90",{"_index":1480,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:95",{"_index":2200,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["page/channel",{"_index":450,"title":{},"body":{"components/ChannelBoardComponent.html":{},"coverage.html":{}}}],["page/chat",{"_index":637,"title":{},"body":{"components/ChatBoardComponent.html":{},"coverage.html":{}}}],["page/dialogs/dialog",{"_index":723,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"coverage.html":{}}}],["page/forgot",{"_index":1155,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["page/login/login.component.ts",{"_index":1373,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["page/login/login.component.ts:18",{"_index":1389,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:19",{"_index":1384,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:20",{"_index":1388,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:21",{"_index":1386,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:22",{"_index":1380,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:31",{"_index":1382,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:42",{"_index":1383,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:47",{"_index":1390,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:59",{"_index":1392,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:67",{"_index":1381,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/main",{"_index":1448,"title":{},"body":{"components/MainPageComponent.html":{},"coverage.html":{}}}],["page/new",{"_index":1713,"title":{},"body":{"components/NewMsgBoardComponent.html":{},"coverage.html":{}}}],["page/shared/edit",{"_index":914,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"coverage.html":{}}}],["page/shared/message",{"_index":1580,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"coverage.html":{}}}],["page/shared/search",{"_index":1824,"title":{},"body":{"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"coverage.html":{}}}],["page/shared/textarea",{"_index":2181,"title":{},"body":{"components/TextareaMainPageComponent.html":{},"coverage.html":{}}}],["page/shared/time",{"_index":2258,"title":{},"body":{"components/TimeSeparatorComponent.html":{},"coverage.html":{}}}],["page/shared/workspace",{"_index":2451,"title":{},"body":{"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["page/signup/signup.component.ts",{"_index":1967,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["page/signup/signup.component.ts:18",{"_index":1978,"title":{},"body":{"components/SignupComponent.html":{}}}],["page/signup/signup.component.ts:19",{"_index":1976,"title":{},"body":{"components/SignupComponent.html":{}}}],["page/signup/signup.component.ts:20",{"_index":1972,"title":{},"body":{"components/SignupComponent.html":{}}}],["page/signup/signup.component.ts:30",{"_index":1977,"title":{},"body":{"components/SignupComponent.html":{}}}],["page/signup/signup.component.ts:31",{"_index":1980,"title":{},"body":{"components/SignupComponent.html":{}}}],["page/signup/signup.component.ts:32",{"_index":1979,"title":{},"body":{"components/SignupComponent.html":{}}}],["page/signup/signup.component.ts:34",{"_index":1975,"title":{},"body":{"components/SignupComponent.html":{}}}],["page/signup/signup.component.ts:40",{"_index":1974,"title":{},"body":{"components/SignupComponent.html":{}}}],["page/signup/signup.component.ts:54",{"_index":1981,"title":{},"body":{"components/SignupComponent.html":{}}}],["page/signup/signup.component.ts:66",{"_index":1982,"title":{},"body":{"components/SignupComponent.html":{}}}],["page/signup/signup.component.ts:77",{"_index":1984,"title":{},"body":{"components/SignupComponent.html":{}}}],["page/signuppicture/signuppicture.component.ts",{"_index":1997,"title":{},"body":{"components/SignuppictureComponent.html":{},"coverage.html":{}}}],["page/signuppicture/signuppicture.component.ts:17",{"_index":2018,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["page/signuppicture/signuppicture.component.ts:18",{"_index":2019,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["page/signuppicture/signuppicture.component.ts:19",{"_index":2017,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["page/signuppicture/signuppicture.component.ts:25",{"_index":2006,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["page/signuppicture/signuppicture.component.ts:26",{"_index":2010,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["page/signuppicture/signuppicture.component.ts:36",{"_index":2007,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["page/signuppicture/signuppicture.component.ts:54",{"_index":2009,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["page/signuppicture/upload",{"_index":2265,"title":{},"body":{"components/UploadFormComponent.html":{},"coverage.html":{}}}],["page/start",{"_index":2088,"title":{},"body":{"components/StartAnimationComponent.html":{},"coverage.html":{}}}],["page/starting",{"_index":2170,"title":{},"body":{"components/StartingPageComponent.html":{},"coverage.html":{}}}],["page/textarea",{"_index":512,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"coverage.html":{}}}],["page/thread",{"_index":2240,"title":{},"body":{"components/ThreadBoardComponent.html":{},"coverage.html":{}}}],["page/workspace",{"_index":2399,"title":{},"body":{"components/WorkspaceMenuComponent.html":{},"coverage.html":{}}}],["panelclass",{"_index":540,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"injectables/AnimationStateService.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"injectables/OverlayService.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/UploadFormComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["password",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SignupComponent.html":{}}}],["password'},{'name",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["password.component",{"_index":2174,"title":{},"body":{"components/StartingPageComponent.html":{}}}],["password.component.html",{"_index":1159,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1160,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1157,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:14",{"_index":1175,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:15",{"_index":1171,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":1167,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":1757,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":1758,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":1754,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":1761,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":1172,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:26",{"_index":1169,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:30",{"_index":1759,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:31",{"_index":1755,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:34",{"_index":1177,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:39",{"_index":1762,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:50",{"_index":1764,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":1756,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.service",{"_index":1766,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.service.ts",{"_index":1792,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["password.service.ts:11",{"_index":1801,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:12",{"_index":1796,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:19",{"_index":1799,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:30",{"_index":1800,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password/forgot",{"_index":1156,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/StartingPageComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":1750,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordcontrol",{"_index":1405,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["passwordcontrol.value",{"_index":1777,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordcontrol?.haserror('minlength",{"_index":1770,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["passwordcontrol?.haserror('required",{"_index":1407,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["passworderror",{"_index":1379,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["passwordrepeat",{"_index":1768,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordrepeatcontrol",{"_index":1775,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordrepeatcontrol.markastouched",{"_index":1789,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordrepeatcontrol.value",{"_index":1778,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordrepeaterror",{"_index":1753,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwort",{"_index":1203,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["passwörter",{"_index":1779,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["persistence",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["persistenzoption",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["photourl",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"components/UploadFormComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["pickercomponent",{"_index":917,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["pictures",{"_index":2002,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["pipe",{"_index":1352,"title":{"pipes/InputFilterPipe.html":{}},"body":{"pipes/InputFilterPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":1354,"title":{},"body":{"pipes/InputFilterPipe.html":{}}}],["pipes/input",{"_index":1840,"title":{},"body":{"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["pipetransform",{"_index":1363,"title":{},"body":{"pipes/InputFilterPipe.html":{}}}],["platform",{"_index":2571,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":2072,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["policy'},{'name",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["policy.component.ts",{"_index":2492,"title":{},"body":{"coverage.html":{}}}],["policy/privacy",{"_index":2491,"title":{},"body":{"coverage.html":{}}}],["popup",{"_index":657,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["position",{"_index":885,"title":{},"body":{"components/DialogUserMenuComponent.html":{}}}],["privacy",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["privacypolicycomponent",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["private",{"_index":10,"title":{},"body":{"injectables/AnimationStateService.html":{},"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/LoginComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["privatechat",{"_index":1045,"title":{"classes/PrivateChat.html":{}},"body":{"injectables/EventService.html":{},"classes/PrivateChat.html":{},"coverage.html":{}}}],["privatechatmodus",{"_index":1001,"title":{},"body":{"injectables/EventService.html":{}}}],["privatechatopen",{"_index":1459,"title":{},"body":{"components/MainPageComponent.html":{}}}],["privatechatopenstatus",{"_index":987,"title":{},"body":{"injectables/EventService.html":{}}}],["privatechatscontainerref",{"_index":640,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["privattextarea",{"_index":641,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["profil",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["profil'},{'name",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["profil.component",{"_index":526,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["profil.component.html",{"_index":839,"title":{},"body":{"components/DialogShowProfilComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["profil.component.scss",{"_index":840,"title":{},"body":{"components/DialogShowProfilComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["profil.component.ts",{"_index":838,"title":{},"body":{"components/DialogShowProfilComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["profil.component.ts:16",{"_index":2457,"title":{},"body":{"components/WorkspaceUserProfilComponent.html":{}}}],["profil.component.ts:17",{"_index":2456,"title":{},"body":{"components/WorkspaceUserProfilComponent.html":{}}}],["profil.component.ts:18",{"_index":2455,"title":{},"body":{"components/WorkspaceUserProfilComponent.html":{}}}],["profil.component.ts:19",{"_index":896,"title":{},"body":{"components/DialogUserProfilComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["profil.component.ts:20",{"_index":900,"title":{},"body":{"components/DialogUserProfilComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["profil.component.ts:22",{"_index":847,"title":{},"body":{"components/DialogShowProfilComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["profil.component.ts:24",{"_index":850,"title":{},"body":{"components/DialogShowProfilComponent.html":{},"components/DialogUserProfilComponent.html":{}}}],["profil.component.ts:25",{"_index":901,"title":{},"body":{"components/DialogUserProfilComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["profil.component.ts:26",{"_index":902,"title":{},"body":{"components/DialogUserProfilComponent.html":{}}}],["profil.component.ts:28",{"_index":898,"title":{},"body":{"components/DialogUserProfilComponent.html":{}}}],["profil.component.ts:32",{"_index":848,"title":{},"body":{"components/DialogShowProfilComponent.html":{}}}],["profil.component.ts:35",{"_index":897,"title":{},"body":{"components/DialogUserProfilComponent.html":{}}}],["profil.component.ts:39",{"_index":899,"title":{},"body":{"components/DialogUserProfilComponent.html":{}}}],["profil/dialog",{"_index":651,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["profil/workspace",{"_index":525,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/MainPageComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["profilbild",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["profilemail",{"_index":663,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["profilfoto",{"_index":2340,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["profilimg",{"_index":665,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["profilname",{"_index":659,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["profilref",{"_index":661,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["project",{"_index":2537,"title":{},"body":{"index.html":{}}}],["promise",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{}}}],["promise.all(chatpromises",{"_index":1950,"title":{},"body":{"injectables/SearchService.html":{}}}],["promise.all(deletionpromises",{"_index":1290,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["promise.all(promises",{"_index":1951,"title":{},"body":{"injectables/SearchService.html":{}}}],["promise.all(updatepromises",{"_index":1308,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["promise.all(uploadtasks",{"_index":1133,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["promises",{"_index":1937,"title":{},"body":{"injectables/SearchService.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"injectables/AnimationStateService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"injectables/OverlayService.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/UploadFormComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"properties.html":{}}}],["provideanimationsasync",{"_index":2614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":2601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":33,"title":{},"body":{"injectables/AnimationStateService.html":{},"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"injectables/GuestUserService.html":{},"injectables/LoginService.html":{},"injectables/OverlayService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SearchService.html":{},"injectables/UserService.html":{}}}],["provider",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["providerouter(routes",{"_index":2600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":2620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/FileUploadService.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["px",{"_index":555,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["query",{"_index":1244,"title":{},"body":{"injectables/GuestUserService.html":{},"injectables/SearchService.html":{}}}],["querysnapshot",{"_index":1271,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["querysnapshot.foreach((doc",{"_index":1281,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["querysnapshot.foreach(async",{"_index":1274,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["querytext",{"_index":1927,"title":{},"body":{"injectables/SearchService.html":{}}}],["rad",{"_index":542,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["radius",{"_index":2053,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["randomnum",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["randompath",{"_index":1057,"title":{},"body":{"injectables/FileUploadService.html":{},"components/UploadFormComponent.html":{}}}],["raum",{"_index":687,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["re",{"_index":2167,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["reactemoji",{"_index":1618,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"classes/Reaction.html":{}}}],["reaction",{"_index":1569,"title":{"classes/Reaction.html":{}},"body":{"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"classes/Reaction.html":{},"coverage.html":{}}}],["reaction.class",{"_index":1572,"title":{},"body":{"classes/Message.html":{}}}],["reaction.reactemoji",{"_index":1646,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["reaction.reactuser",{"_index":1644,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["reactions",{"_index":1328,"title":{},"body":{"injectables/GuestUserService.html":{},"classes/Message.html":{}}}],["reactions.filter(([uid",{"_index":1331,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["reactiveformsmodule",{"_index":1158,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["reactuser",{"_index":1633,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"classes/Reaction.html":{}}}],["readonly",{"_index":1215,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["ready",{"_index":2321,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["reagiert",{"_index":1662,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["ref",{"_index":1080,"title":{},"body":{"injectables/FileUploadService.html":{},"components/UploadFormComponent.html":{}}}],["ref(this.storage",{"_index":1075,"title":{},"body":{"injectables/FileUploadService.html":{},"components/UploadFormComponent.html":{}}}],["ref(this.storageref",{"_index":1126,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["reference",{"_index":2583,"title":{},"body":{"index.html":{}}}],["reflow",{"_index":2165,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["regex",{"_index":1809,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["regex.exec(url",{"_index":1811,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["regexp",{"_index":1810,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["regina",{"_index":1343,"title":{},"body":{"components/ImprintComponent.html":{}}}],["regina&#64;test.de",{"_index":1350,"title":{},"body":{"components/ImprintComponent.html":{}}}],["regina@test.de",{"_index":1351,"title":{},"body":{"components/ImprintComponent.html":{}}}],["register",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"components/SignuppictureComponent.html":{}}}],["registererror",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerguest",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["registering",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["registrieren",{"_index":1259,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["registrierten",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["registrierung",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["reload",{"_index":2551,"title":{},"body":{"index.html":{}}}],["removeuser",{"_index":1862,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["removeuser(i",{"_index":1869,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["removeuser(i:number",{"_index":1879,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["removeuserfromchannels",{"_index":1224,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["removeuserfromchannels(userid",{"_index":1239,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["renderer",{"_index":477,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{}}}],["renderer2",{"_index":478,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{}}}],["reset",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["resetpasswordcomponent",{"_index":126,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["resetpasswordservice",{"_index":1751,"title":{"injectables/ResetPasswordService.html":{}},"body":{"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["response.blob",{"_index":2325,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["result.user.displayname",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["result.user.email",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["result.user.photourl",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["result.user.uid",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":41,"title":{},"body":{"injectables/AnimationStateService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"injectables/OverlayService.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results[2",{"_index":1813,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["return",{"_index":37,"title":{},"body":{"injectables/AnimationStateService.html":{},"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":29,"title":{},"body":{"injectables/AnimationStateService.html":{},"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"injectables/OverlayService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/UploadFormComponent.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["right",{"_index":886,"title":{},"body":{"components/DialogUserMenuComponent.html":{},"components/MessageRightComponent.html":{},"components/StartAnimationComponent.html":{}}}],["right'},{'name",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["right.component",{"_index":518,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["right.component.html",{"_index":1673,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.scss",{"_index":1674,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts",{"_index":1672,"title":{},"body":{"components/MessageRightComponent.html":{},"coverage.html":{}}}],["right.component.ts:131",{"_index":1695,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:166",{"_index":1698,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:170",{"_index":1697,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:27",{"_index":1685,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:28",{"_index":1686,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:29",{"_index":1687,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:30",{"_index":1684,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:31",{"_index":1680,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:32",{"_index":1683,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:33",{"_index":1681,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:34",{"_index":1679,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:35",{"_index":1690,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:36",{"_index":1691,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:37",{"_index":1688,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:38",{"_index":1682,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:39",{"_index":1689,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:40",{"_index":1692,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:42",{"_index":1693,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:44",{"_index":1706,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:46",{"_index":1705,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:47",{"_index":1678,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:50",{"_index":1704,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:53",{"_index":1699,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:58",{"_index":1700,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:70",{"_index":1701,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:80",{"_index":1703,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:86",{"_index":1702,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right.component.ts:98",{"_index":1694,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["right/message",{"_index":517,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/MessageRightComponent.html":{},"components/ThreadBoardComponent.html":{},"coverage.html":{}}}],["root",{"_index":34,"title":{},"body":{"injectables/AnimationStateService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"injectables/GuestUserService.html":{},"injectables/LoginService.html":{},"injectables/OverlayService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SearchService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["round",{"_index":543,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["router",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"components/ImprintComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartingPageComponent.html":{}}}],["routerlink",{"_index":1374,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/StartingPageComponent.html":{}}}],["routeroutlet",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["rtdb.europe",{"_index":2606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":2543,"title":{},"body":{"index.html":{}}}],["running",{"_index":2563,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"components/DialogShowProfilComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"injectables/SearchService.html":{},"components/WorkspaceMenuComponent.html":{},"dependencies.html":{}}}],["rückgabe",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["sanitizer",{"_index":2285,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["save",{"_index":1823,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["savechanges",{"_index":799,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["savechanges(field",{"_index":803,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["savechanges(field:string",{"_index":811,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["savechannel",{"_index":735,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["savevariables",{"_index":1378,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["scaffolding",{"_index":2555,"title":{},"body":{"index.html":{}}}],["schließen",{"_index":1556,"title":{},"body":{"components/MainPageComponent.html":{}}}],["screen",{"_index":1820,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["scrolltobottom",{"_index":473,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["search",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["searchchannel",{"_index":1829,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["searchchannelmessages",{"_index":1893,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchchannelmessages(searchtext",{"_index":1899,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchchannelnames",{"_index":1894,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchchannelnames(searchtext",{"_index":1902,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchinputcomponent",{"_index":128,"title":{"components/SearchInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["searchmemberinputcomponent",{"_index":131,"title":{"components/SearchMemberInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["searchmemberscomponent",{"_index":464,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogAddChannelComponent.html":{}}}],["searchservice",{"_index":1460,"title":{"injectables/SearchService.html":{}},"body":{"components/MainPageComponent.html":{},"injectables/SearchService.html":{},"coverage.html":{}}}],["searchtext",{"_index":1360,"title":{},"body":{"pipes/InputFilterPipe.html":{},"components/MainPageComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{}}}],["searchtext.length",{"_index":1533,"title":{},"body":{"components/MainPageComponent.html":{}}}],["searchtext.tolocalelowercase",{"_index":1365,"title":{},"body":{"pipes/InputFilterPipe.html":{}}}],["searchtext.tolowercase",{"_index":1928,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchuser",{"_index":1830,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["searchusers",{"_index":1895,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchusers(searchtext",{"_index":1904,"title":{},"body":{"injectables/SearchService.html":{}}}],["sein",{"_index":776,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["selbst",{"_index":705,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["seldialog",{"_index":486,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["selectedchat",{"_index":2223,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["selectedchat.chatid",{"_index":2225,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["selectedchatindex",{"_index":1595,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["selectedmembers",{"_index":761,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["selectedmembersarray",{"_index":578,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogAddChannelComponent.html":{}}}],["selectedmembersarray.length",{"_index":581,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["selecteduser",{"_index":2352,"title":{},"body":{"injectables/UserService.html":{}}}],["selectmerbersopen",{"_index":733,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["selector",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["selectpicture",{"_index":2005,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["selectpicture(i",{"_index":2008,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["selectpicture(i:string",{"_index":2039,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["sendemailverification",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["senden",{"_index":1206,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["sendpasswordresetemail",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendpasswordresetemail(this.auth",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendpasswortreset",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendpasswortreset(email",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["separator",{"_index":2260,"title":{},"body":{"components/TimeSeparatorComponent.html":{}}}],["separator'},{'name",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["separator.component",{"_index":536,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["separator.component.html",{"_index":2261,"title":{},"body":{"components/TimeSeparatorComponent.html":{}}}],["separator.component.scss",{"_index":2262,"title":{},"body":{"components/TimeSeparatorComponent.html":{}}}],["separator.component.ts",{"_index":2259,"title":{},"body":{"components/TimeSeparatorComponent.html":{},"coverage.html":{}}}],["separator.component.ts:12",{"_index":2264,"title":{},"body":{"components/TimeSeparatorComponent.html":{}}}],["separator/time",{"_index":535,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"coverage.html":{}}}],["serve",{"_index":2545,"title":{},"body":{"index.html":{}}}],["server",{"_index":2519,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["serverconfig",{"_index":2471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":2120,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["services/animation",{"_index":2113,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["services/auth.service",{"_index":533,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["services/channel.service",{"_index":523,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["services/chat.service",{"_index":652,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["services/event.service",{"_index":852,"title":{},"body":{"components/DialogShowProfilComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/SearchInputComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["services/fileupload.service",{"_index":2204,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["services/guest",{"_index":1393,"title":{},"body":{"components/LoginComponent.html":{},"components/StartingPageComponent.html":{}}}],["services/login.service",{"_index":1179,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartingPageComponent.html":{},"components/UploadFormComponent.html":{}}}],["services/overlay.service",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/LoginComponent.html":{},"components/SignuppictureComponent.html":{}}}],["services/reset",{"_index":1765,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["services/search.service",{"_index":1513,"title":{},"body":{"components/MainPageComponent.html":{}}}],["services/user.service",{"_index":527,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["set",{"_index":39,"title":{},"body":{"injectables/AnimationStateService.html":{}}}],["setbodyoverflowhidden",{"_index":2099,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["setbodyoverflowhidden(hidden",{"_index":2109,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["setchatindex",{"_index":1591,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["setchatindex(chatindex",{"_index":1625,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["setdoc",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["setdoc(userdocref",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["setinputfocus",{"_index":1469,"title":{},"body":{"components/MainPageComponent.html":{}}}],["setinputfocus(value",{"_index":1489,"title":{},"body":{"components/MainPageComponent.html":{}}}],["setisanimatedonce(value",{"_index":24,"title":{},"body":{"injectables/AnimationStateService.html":{}}}],["setmembers",{"_index":736,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["setpersistence",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["setpersistence(this.auth",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["settextfieldstatus",{"_index":474,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["settextfieldstatus(event",{"_index":494,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["settextfieldstatus(state",{"_index":2199,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["settimeout",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatBoardComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{}}}],["setting",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["setuploadedtofalse",{"_index":2281,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["setuserobject",{"_index":2359,"title":{},"body":{"injectables/UserService.html":{}}}],["setuserobject(obj",{"_index":2369,"title":{},"body":{"injectables/UserService.html":{}}}],["setze",{"_index":1782,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["setzen",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OverlayService.html":{}}}],["shared/message",{"_index":514,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["shared/search",{"_index":528,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["shared/textarea",{"_index":511,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["shared/time",{"_index":534,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["shared/workspace",{"_index":524,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/MainPageComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["show",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["showlogin",{"_index":1420,"title":{},"body":{"injectables/LoginService.html":{}}}],["showoverlay",{"_index":1719,"title":{},"body":{"injectables/OverlayService.html":{}}}],["showoverlay(content",{"_index":1723,"title":{},"body":{"injectables/OverlayService.html":{}}}],["showoverlayerror",{"_index":1720,"title":{},"body":{"injectables/OverlayService.html":{}}}],["showoverlayerror(content",{"_index":1726,"title":{},"body":{"injectables/OverlayService.html":{}}}],["showresetpassword",{"_index":1421,"title":{},"body":{"injectables/LoginService.html":{}}}],["showsignup",{"_index":1422,"title":{},"body":{"injectables/LoginService.html":{}}}],["showsignuppicture",{"_index":1423,"title":{},"body":{"injectables/LoginService.html":{}}}],["showsignuppictureupload",{"_index":1424,"title":{},"body":{"injectables/LoginService.html":{}}}],["sie",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"components/DialogAddChannelComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{}}}],["sieht",{"_index":1117,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["signingin",{"_index":2003,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["signinwithemailandpassword",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithemailandpassword(this.auth",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithpopup",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithpopup(this.auth",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout(this.auth",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":1968,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["signup.component.html",{"_index":1969,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.scss",{"_index":1970,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.component",{"_index":2172,"title":{},"body":{"components/StartingPageComponent.html":{}}}],["signupcomponent",{"_index":133,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["signupform",{"_index":2004,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["signuppicture",{"_index":1998,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["signuppicture'},{'name",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["signuppicture.component.html",{"_index":2001,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["signuppicture.component.scss",{"_index":2000,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["signuppicture/signuppicture.component",{"_index":2175,"title":{},"body":{"components/StartingPageComponent.html":{}}}],["signuppicture/upload",{"_index":2176,"title":{},"body":{"components/StartingPageComponent.html":{}}}],["signuppicturecomponent",{"_index":135,"title":{"components/SignuppictureComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["sind",{"_index":1289,"title":{},"body":{"injectables/GuestUserService.html":{},"components/WorkspaceMenuComponent.html":{}}}],["slice:0:3",{"_index":597,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["snapshot",{"_index":1128,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["snapshot.ref",{"_index":1132,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["sollten",{"_index":774,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["sortedreactions",{"_index":1596,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AnimationStateService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"injectables/OverlayService.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"index.html":{}}}],["speichern",{"_index":831,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/DialogUserProfilComponent.html":{}}}],["src/.../app.config.server.ts",{"_index":2597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":2595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":2596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.class.ts",{"_index":2592,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app.component.ts",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":2467,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":2472,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/confirmation",{"_index":715,"title":{},"body":{"components/ConfirmationOverlayComponent.html":{},"coverage.html":{}}}],["src/app/imprint/imprint.component.ts",{"_index":1335,"title":{},"body":{"components/ImprintComponent.html":{},"coverage.html":{}}}],["src/app/imprint/imprint.component.ts:10",{"_index":1340,"title":{},"body":{"components/ImprintComponent.html":{}}}],["src/app/imprint/imprint.component.ts:11",{"_index":1341,"title":{},"body":{"components/ImprintComponent.html":{}}}],["src/app/main",{"_index":449,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["src/app/models/channel.class.ts",{"_index":426,"title":{},"body":{"classes/Channel.html":{},"coverage.html":{}}}],["src/app/models/channel.class.ts:2",{"_index":436,"title":{},"body":{"classes/Channel.html":{}}}],["src/app/models/channel.class.ts:3",{"_index":438,"title":{},"body":{"classes/Channel.html":{}}}],["src/app/models/channel.class.ts:4",{"_index":435,"title":{},"body":{"classes/Channel.html":{}}}],["src/app/models/channel.class.ts:5",{"_index":437,"title":{},"body":{"classes/Channel.html":{}}}],["src/app/models/channel.class.ts:6",{"_index":432,"title":{},"body":{"classes/Channel.html":{}}}],["src/app/models/chat.class.ts",{"_index":623,"title":{},"body":{"classes/Chat.html":{},"coverage.html":{}}}],["src/app/models/chat.class.ts:4",{"_index":628,"title":{},"body":{"classes/Chat.html":{}}}],["src/app/models/chat.class.ts:5",{"_index":630,"title":{},"body":{"classes/Chat.html":{}}}],["src/app/models/chat.class.ts:6",{"_index":627,"title":{},"body":{"classes/Chat.html":{}}}],["src/app/models/message.class.ts",{"_index":1563,"title":{},"body":{"classes/Message.html":{},"coverage.html":{}}}],["src/app/models/message.class.ts:4",{"_index":1568,"title":{},"body":{"classes/Message.html":{}}}],["src/app/models/message.class.ts:5",{"_index":1567,"title":{},"body":{"classes/Message.html":{}}}],["src/app/models/message.class.ts:6",{"_index":1566,"title":{},"body":{"classes/Message.html":{}}}],["src/app/models/message.class.ts:7",{"_index":1570,"title":{},"body":{"classes/Message.html":{}}}],["src/app/models/message.class.ts:8",{"_index":1571,"title":{},"body":{"classes/Message.html":{}}}],["src/app/models/message.class.ts:9",{"_index":1565,"title":{},"body":{"classes/Message.html":{}}}],["src/app/models/privatechat.class.ts",{"_index":1738,"title":{},"body":{"classes/PrivateChat.html":{},"coverage.html":{}}}],["src/app/models/privatechat.class.ts:2",{"_index":1740,"title":{},"body":{"classes/PrivateChat.html":{}}}],["src/app/models/privatechat.class.ts:3",{"_index":1741,"title":{},"body":{"classes/PrivateChat.html":{}}}],["src/app/models/privatechat.class.ts:4",{"_index":1739,"title":{},"body":{"classes/PrivateChat.html":{}}}],["src/app/models/reaction.class.ts",{"_index":1742,"title":{},"body":{"classes/Reaction.html":{},"coverage.html":{}}}],["src/app/models/reaction.class.ts:2",{"_index":1744,"title":{},"body":{"classes/Reaction.html":{}}}],["src/app/models/reaction.class.ts:3",{"_index":1743,"title":{},"body":{"classes/Reaction.html":{}}}],["src/app/models/user.class.ts",{"_index":2341,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.class.ts:2",{"_index":2344,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.class.ts:3",{"_index":2345,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.class.ts:4",{"_index":2343,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.class.ts:5",{"_index":2346,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.class.ts:6",{"_index":2342,"title":{},"body":{"classes/User.html":{}}}],["src/app/pipes/input",{"_index":1355,"title":{},"body":{"pipes/InputFilterPipe.html":{},"coverage.html":{}}}],["src/app/privacy",{"_index":2490,"title":{},"body":{"coverage.html":{}}}],["src/app/reset",{"_index":1749,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/services/animation",{"_index":6,"title":{},"body":{"injectables/AnimationStateService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:115",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:143",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:152",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:19",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:198",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:20",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:21",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:215",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:22",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:228",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:23",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:24",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:25",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:26",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:268",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:27",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:28",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:287",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:29",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:30",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:31",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:32",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:34",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:35",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:36",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:37",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:42",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:75",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:86",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:97",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/channel.service.ts",{"_index":2494,"title":{},"body":{"coverage.html":{}}}],["src/app/services/chat.service.ts",{"_index":2496,"title":{},"body":{"coverage.html":{}}}],["src/app/services/event.service.ts",{"_index":984,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{}}}],["src/app/services/event.service.ts:10",{"_index":1027,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:108",{"_index":1022,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:11",{"_index":1026,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:12",{"_index":1003,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:19",{"_index":1008,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:23",{"_index":1018,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:30",{"_index":1005,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:34",{"_index":1011,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:41",{"_index":1007,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:45",{"_index":1016,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:53",{"_index":1006,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:57",{"_index":1014,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:64",{"_index":1009,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:68",{"_index":1020,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:76",{"_index":1021,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:8",{"_index":1028,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:9",{"_index":1024,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:90",{"_index":1004,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/fileupload.service.ts",{"_index":1053,"title":{},"body":{"injectables/FileUploadService.html":{},"coverage.html":{}}}],["src/app/services/fileupload.service.ts:10",{"_index":1078,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["src/app/services/fileupload.service.ts:11",{"_index":1069,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["src/app/services/fileupload.service.ts:12",{"_index":1074,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["src/app/services/fileupload.service.ts:13",{"_index":1072,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["src/app/services/fileupload.service.ts:14",{"_index":1077,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["src/app/services/fileupload.service.ts:15",{"_index":1063,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["src/app/services/fileupload.service.ts:19",{"_index":1064,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["src/app/services/fileupload.service.ts:46",{"_index":1067,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["src/app/services/fileupload.service.ts:70",{"_index":1066,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["src/app/services/fileupload.service.ts:88",{"_index":1065,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["src/app/services/fileupload.service.ts:9",{"_index":1070,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["src/app/services/guest",{"_index":1213,"title":{},"body":{"injectables/GuestUserService.html":{},"coverage.html":{}}}],["src/app/services/login.service.ts",{"_index":1419,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/services/login.service.ts:10",{"_index":1441,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/login.service.ts:11",{"_index":1431,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/login.service.ts:13",{"_index":1436,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/login.service.ts:18",{"_index":1437,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/login.service.ts:23",{"_index":1434,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/login.service.ts:28",{"_index":1435,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/login.service.ts:33",{"_index":1433,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/login.service.ts:38",{"_index":1432,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/login.service.ts:7",{"_index":1438,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/login.service.ts:8",{"_index":1439,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/login.service.ts:9",{"_index":1440,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/overlay.service.ts",{"_index":1714,"title":{},"body":{"injectables/OverlayService.html":{},"coverage.html":{}}}],["src/app/services/overlay.service.ts:10",{"_index":1728,"title":{},"body":{"injectables/OverlayService.html":{}}}],["src/app/services/overlay.service.ts:11",{"_index":1721,"title":{},"body":{"injectables/OverlayService.html":{}}}],["src/app/services/overlay.service.ts:14",{"_index":1724,"title":{},"body":{"injectables/OverlayService.html":{}}}],["src/app/services/overlay.service.ts:20",{"_index":1727,"title":{},"body":{"injectables/OverlayService.html":{}}}],["src/app/services/overlay.service.ts:25",{"_index":1722,"title":{},"body":{"injectables/OverlayService.html":{}}}],["src/app/services/overlay.service.ts:9",{"_index":1729,"title":{},"body":{"injectables/OverlayService.html":{}}}],["src/app/services/reset",{"_index":1791,"title":{},"body":{"injectables/ResetPasswordService.html":{},"coverage.html":{}}}],["src/app/services/search.service.ts",{"_index":1887,"title":{},"body":{"injectables/SearchService.html":{},"coverage.html":{}}}],["src/app/services/search.service.ts:10",{"_index":1896,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:15",{"_index":1918,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:16",{"_index":1913,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:17",{"_index":1911,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:18",{"_index":1908,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:19",{"_index":1916,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:20",{"_index":1914,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:21",{"_index":1915,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:22",{"_index":1909,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:24",{"_index":1907,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:31",{"_index":1905,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:39",{"_index":1903,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:46",{"_index":1900,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:83",{"_index":1898,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/user.service.ts",{"_index":2350,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:11",{"_index":2373,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:13",{"_index":2375,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:14",{"_index":2376,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:15",{"_index":2374,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:16",{"_index":2372,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:17",{"_index":2361,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:25",{"_index":2368,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:29",{"_index":2371,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:52",{"_index":2370,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:63",{"_index":2367,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:68",{"_index":2366,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:74",{"_index":2362,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:93",{"_index":2364,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/starting",{"_index":1154,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/UploadFormComponent.html":{},"coverage.html":{}}}],["src/app/types/messages.class.ts",{"_index":2502,"title":{},"body":{"coverage.html":{}}}],["src/app/types/user.class.ts",{"_index":2593,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/main.server.ts",{"_index":2504,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["standardpictures",{"_index":2057,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["start",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["startanimation",{"_index":2100,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["startanimationcomponent",{"_index":137,"title":{"components/StartAnimationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["starte",{"_index":1110,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["started",{"_index":2536,"title":{"index.html":{}},"body":{}}],["starting",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["startingpagecomponent",{"_index":140,"title":{"components/StartingPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["startprivatechat",{"_index":842,"title":{},"body":{"components/DialogShowProfilComponent.html":{}}}],["startsearch",{"_index":1470,"title":{},"body":{"components/MainPageComponent.html":{},"components/SearchInputComponent.html":{},"injectables/SearchService.html":{}}}],["startsearch(searchtext",{"_index":1906,"title":{},"body":{"injectables/SearchService.html":{}}}],["state",{"_index":1012,"title":{},"body":{"injectables/EventService.html":{},"components/StartAnimationComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["state.service",{"_index":2114,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["state.service.ts",{"_index":7,"title":{},"body":{"injectables/AnimationStateService.html":{},"coverage.html":{}}}],["state.service.ts:13",{"_index":25,"title":{},"body":{"injectables/AnimationStateService.html":{}}}],["state.service.ts:7",{"_index":21,"title":{},"body":{"injectables/AnimationStateService.html":{}}}],["state.service.ts:9",{"_index":23,"title":{},"body":{"injectables/AnimationStateService.html":{}}}],["statements",{"_index":2465,"title":{},"body":{"coverage.html":{}}}],["statt",{"_index":686,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["status",{"_index":1029,"title":{},"body":{"injectables/EventService.html":{},"components/MainPageComponent.html":{}}}],["stelle",{"_index":2218,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["stils",{"_index":1736,"title":{},"body":{"injectables/OverlayService.html":{}}}],["stimmen",{"_index":1780,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["stopsearch",{"_index":1471,"title":{},"body":{"components/MainPageComponent.html":{},"components/SearchInputComponent.html":{}}}],["storage",{"_index":980,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"injectables/FileUploadService.html":{},"injectables/GuestUserService.html":{},"components/UploadFormComponent.html":{}}}],["storageref",{"_index":1058,"title":{},"body":{"injectables/FileUploadService.html":{},"components/UploadFormComponent.html":{}}}],["stored",{"_index":2560,"title":{},"body":{"index.html":{}}}],["string",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"injectables/OverlayService.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/TimeSeparatorComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["stunden",{"_index":1270,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["styles",{"_index":1996,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["styleurl",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["styleurls",{"_index":1999,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["subcurrentuser",{"_index":2392,"title":{},"body":{"injectables/UserService.html":{}}}],["subject",{"_index":1068,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["submitmessage",{"_index":2184,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["submitmessage(ngform",{"_index":2201,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["subscription",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"components/WorkspaceMenuComponent.html":{}}}],["subuserslist",{"_index":2360,"title":{},"body":{"injectables/UserService.html":{}}}],["table",{"_index":2507,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2506,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":1090,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["target.files",{"_index":1093,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["target.files.length",{"_index":1094,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["team",{"_index":770,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["teile",{"_index":2021,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["template",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["templateurl",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["test",{"_index":2566,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2576,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2565,"title":{},"body":{"index.html":{}}}],["text",{"_index":819,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/StartAnimationComponent.html":{}}}],["textarea",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["textarea'},{'name",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["textarea.component",{"_index":1707,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["textarea.component.html",{"_index":920,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["textarea.component.scss",{"_index":921,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["textarea.component.ts",{"_index":916,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"coverage.html":{}}}],["textarea.component.ts:19",{"_index":936,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["textarea.component.ts:20",{"_index":935,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["textarea.component.ts:21",{"_index":937,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["textarea.component.ts:22",{"_index":938,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["textarea.component.ts:23",{"_index":939,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["textarea.component.ts:24",{"_index":940,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["textarea.component.ts:26",{"_index":934,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["textarea.component.ts:29",{"_index":950,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["textarea.component.ts:32",{"_index":949,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["textarea.component.ts:58",{"_index":945,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["textarea.component.ts:64",{"_index":943,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["textarea.component.ts:69",{"_index":946,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["textarea/edit",{"_index":915,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageRightComponent.html":{},"coverage.html":{}}}],["textareamainpagecomponent",{"_index":142,"title":{"components/TextareaMainPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["textcontainer",{"_index":2138,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["textcontainerp",{"_index":2133,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["textfieldonupload",{"_index":465,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["textfieldonuploadchannel",{"_index":2187,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["textfieldonuploadchannel:boolean",{"_index":2207,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["textfieldonuploadchat",{"_index":2188,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["textfieldonuploadchat:boolean",{"_index":2208,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["textfieldonuploadthread",{"_index":2189,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["textfieldonuploadthread:boolean",{"_index":2209,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["textfieldstatus",{"_index":2190,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["themenbezogen",{"_index":775,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["then((result",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(blob",{"_index":2326,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["then(response",{"_index":2324,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["this._currentusersubject.asobservable",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._currentusersubject.next(null",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._currentusersubject.next(this.currentuser",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._currentusersubject.next(userdata",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.actioncode",{"_index":1804,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.actioncode).then((email",{"_index":1817,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.addmembersopen",{"_index":751,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["this.allmessages",{"_index":635,"title":{},"body":{"classes/Chat.html":{}}}],["this.animatedonce",{"_index":38,"title":{},"body":{"injectables/AnimationStateService.html":{}}}],["this.animatestage1",{"_index":2122,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.animatestage2",{"_index":2123,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.animatestage3",{"_index":2125,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.animatestage4",{"_index":2127,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.animationstateservice.isanimatedonce",{"_index":2116,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.applyfinalanimationstates",{"_index":2121,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.auth.onauthstatechanged(user",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice",{"_index":2027,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["this.authservice.currentuser.uid",{"_index":2396,"title":{},"body":{"injectables/UserService.html":{}}}],["this.authservice.currentuser?.email",{"_index":906,"title":{},"body":{"components/DialogUserProfilComponent.html":{}}}],["this.authservice.currentuser?.name",{"_index":905,"title":{},"body":{"components/DialogUserProfilComponent.html":{},"components/MainPageComponent.html":{}}}],["this.authservice.currentuser?.uid",{"_index":2394,"title":{},"body":{"injectables/UserService.html":{}}}],["this.authservice.email",{"_index":1401,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.authservice.login",{"_index":1398,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.loginguest(guestuserid",{"_index":1247,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["this.authservice.loginwithgoogle",{"_index":1408,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.name",{"_index":1985,"title":{},"body":{"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{}}}],["this.authservice.password",{"_index":1402,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.authservice.photourl",{"_index":2040,"title":{},"body":{"components/SignuppictureComponent.html":{},"components/UploadFormComponent.html":{}}}],["this.authservice.register",{"_index":2033,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["this.authservice.registerguest",{"_index":1253,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["this.authservice.sendpasswortreset(this.email",{"_index":1192,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.authservice.uid",{"_index":615,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"injectables/SearchService.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["this.authservice.updateinfo(this.displayname",{"_index":908,"title":{},"body":{"components/DialogUserProfilComponent.html":{}}}],["this.bodyclicklistener",{"_index":566,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["this.channel",{"_index":756,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{}}}],["this.channel.creator",{"_index":757,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["this.channel.description",{"_index":820,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channel.members",{"_index":763,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["this.channel.members?.indexof(this.authservice.uid",{"_index":824,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channel.members?.splice(index",{"_index":826,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channel.name",{"_index":817,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelchatopen",{"_index":1517,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.channelchatscontainerref",{"_index":586,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["this.channelchatscontainerref.nativeelement",{"_index":588,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["this.channellistopen",{"_index":2432,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["this.channelopenstatus.asobservable",{"_index":1033,"title":{},"body":{"injectables/EventService.html":{}}}],["this.channelopenstatus.next(state",{"_index":1035,"title":{},"body":{"injectables/EventService.html":{}}}],["this.channelservice.addchannel(this.channelservice.tojson(this.channel",{"_index":758,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["this.channelservice.addmessagetochat(this.channelservice.tojsonmessage(this.message",{"_index":2226,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.channelservice.channels",{"_index":1858,"title":{},"body":{"components/SearchInputComponent.html":{},"injectables/SearchService.html":{}}}],["this.channelservice.channels.filter(channel",{"_index":1933,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.channelservice.channels[this.channelservice.selectedchannel",{"_index":504,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogEditChannelComponent.html":{}}}],["this.channelservice.channels[this.channelservice.selectedchannel].members",{"_index":596,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["this.channelservice.channels[this.channelservice.selectedchannel].name",{"_index":594,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["this.channelservice.getdate(chat.timestamp",{"_index":611,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["this.channelservice.getdate(message.timestamp",{"_index":712,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["this.channelservice.getdate(this.channelservice.selectedchannelchats[index",{"_index":609,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["this.channelservice.getdate(this.channelservice.selectedchannelchats[this.channelservice.selchatindex].allmessages[index",{"_index":2254,"title":{},"body":{"components/ThreadBoardComponent.html":{}}}],["this.channelservice.getdate(this.chatservice.messages[index",{"_index":711,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["this.channelservice.selchatindex",{"_index":2256,"title":{},"body":{"components/ThreadBoardComponent.html":{}}}],["this.channelservice.selectedchannel",{"_index":2437,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["this.channelservice.selectedchannelchats",{"_index":506,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["this.channelservice.selectedchannelchats.length",{"_index":1562,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.channelservice.selectedchannelchats[0].chatid",{"_index":608,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["this.channelservice.selectedchannelchats[this.channelservice.selchatindex",{"_index":2224,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.channelservice.selectedchannelchats[this.channelservice.selchatindex].allmessages",{"_index":2251,"title":{},"body":{"components/ThreadBoardComponent.html":{}}}],["this.channelservice.selectedchannelchats[this.channelservice.selchatindex].allmessages.length",{"_index":2255,"title":{},"body":{"components/ThreadBoardComponent.html":{}}}],["this.channelservice.selectedchannelchats[this.channelservice.selchatindex].allmessages[0].messageid",{"_index":2253,"title":{},"body":{"components/ThreadBoardComponent.html":{}}}],["this.channelservice.selectedchannelchats[this.channelservice.selchatindex].allmessages[this.messageindex",{"_index":961,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["this.channelservice.setselectedchannelindex(channelref",{"_index":1850,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.channelservice.startnewchat",{"_index":2220,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.channelservice.subsglchannelchats(channelref",{"_index":1849,"title":{},"body":{"components/SearchInputComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["this.channelservice.tojsonmessage(this.message",{"_index":2221,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.channelservice.unsubsglchannelchats",{"_index":1848,"title":{},"body":{"components/SearchInputComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["this.channelservice.updatechannel(this.channel",{"_index":822,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelservice.updatemessage(messageobj",{"_index":969,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["this.chatid",{"_index":632,"title":{},"body":{"classes/Chat.html":{},"classes/PrivateChat.html":{}}}],["this.chatrefs",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["this.chats",{"_index":2428,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["this.chatservice.addmessagetoprivatechat(this.chatservice.tojsonmessage(this.message",{"_index":2228,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.chatservice.chats$.subscribe(chats",{"_index":2427,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["this.chatservice.currentchat",{"_index":864,"title":{},"body":{"components/DialogShowProfilComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["this.chatservice.getprivatechatmessages(chat",{"_index":2440,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["this.chatservice.getprivatechatmessages(this.chatservice.currentchat",{"_index":866,"title":{},"body":{"components/DialogShowProfilComponent.html":{}}}],["this.chatservice.getselchatindex(this.data.profilref",{"_index":861,"title":{},"body":{"components/DialogShowProfilComponent.html":{}}}],["this.chatservice.messages",{"_index":708,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["this.chatservice.messages[0].timestamp",{"_index":710,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["this.chatservice.messages[this.messageindex",{"_index":962,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["this.chatservice.privatechats[this.chatservice.selchatindex",{"_index":865,"title":{},"body":{"components/DialogShowProfilComponent.html":{}}}],["this.chatservice.privatechats[this.chatservice.selchatindex].chatid",{"_index":863,"title":{},"body":{"components/DialogShowProfilComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["this.chatservice.selchatindex",{"_index":860,"title":{},"body":{"components/DialogShowProfilComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["this.chatservice.selchatref",{"_index":862,"title":{},"body":{"components/DialogShowProfilComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["this.chatservice.startnewprivatechat({members",{"_index":856,"title":{},"body":{"components/DialogShowProfilComponent.html":{}}}],["this.chatservice.unsubprivatechatmessages",{"_index":855,"title":{},"body":{"components/DialogShowProfilComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["this.chatservice.updatemessage(messageobj",{"_index":970,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["this.chatsubscription",{"_index":2426,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["this.chatsubscription?.unsubscribe",{"_index":2431,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["this.closedialogonclickdok(dialog",{"_index":563,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["this.closeeditmsg.emit(false",{"_index":972,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["this.containerhovered",{"_index":1640,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["this.createdat",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createuserobject",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.creator",{"_index":443,"title":{},"body":{"classes/Channel.html":{}}}],["this.croppedimage",{"_index":2317,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["this.currentuser",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentuser.uid",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.data.profilref",{"_index":857,"title":{},"body":{"components/DialogShowProfilComponent.html":{}}}],["this.description",{"_index":447,"title":{},"body":{"classes/Channel.html":{}}}],["this.dialog.open(dialogaddchannelcomponent",{"_index":2442,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["this.dialog.open(dialogeditchannelcomponent",{"_index":539,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["this.dialog.open(dialogshowprofilcomponent",{"_index":656,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["this.dialog.open(dialoguserprofilcomponent",{"_index":884,"title":{},"body":{"components/DialogUserMenuComponent.html":{}}}],["this.displayname",{"_index":904,"title":{},"body":{"components/DialogUserProfilComponent.html":{}}}],["this.editmessagestate",{"_index":1710,"title":{},"body":{"components/MessageRightComponent.html":{}}}],["this.editnameopen",{"_index":809,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.editprofilopen",{"_index":903,"title":{},"body":{"components/DialogUserProfilComponent.html":{}}}],["this.edittextopen",{"_index":810,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.email",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"components/DialogUserProfilComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/SignupComponent.html":{},"classes/User.html":{}}}],["this.emojimenutrigger",{"_index":1636,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["this.emojimenutrigger.menuopen",{"_index":1637,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["this.evtsvc.channelmodus",{"_index":1851,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.evtsvc.getchannelopenstatus().subscribe(status",{"_index":1516,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.evtsvc.getnewchatopenstatus().subscribe(status",{"_index":1520,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.evtsvc.getprivatechatopenstatus().subscribe(status",{"_index":1518,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.evtsvc.getthreadopenstatus().subscribe(status",{"_index":1514,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.evtsvc.getworkspaceopenstatus().subscribe(status",{"_index":1522,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.evtsvc.openchannel(false",{"_index":1526,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.evtsvc.opennewchat(true",{"_index":1528,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.evtsvc.openprivatechat(false",{"_index":1527,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.evtsvc.openthread(false",{"_index":1529,"title":{},"body":{"components/MainPageComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["this.evtsvc.openthread(true",{"_index":1643,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["this.evtsvc.privatechatmodus",{"_index":867,"title":{},"body":{"components/DialogShowProfilComponent.html":{}}}],["this.fb.group",{"_index":1181,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{}}}],["this.fileselectedsubject.next(this.filestoupload",{"_index":1109,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.filestoupload",{"_index":1098,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.filestoupload.length",{"_index":1121,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.filestoupload.map(async",{"_index":1124,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.filestoupload.push(...chosenfiles",{"_index":1104,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.fileuploadservice.deletefile",{"_index":2232,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.fileuploadservice.uploadedfiles",{"_index":2230,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.fileuploadservice.uploadedfiles.length",{"_index":2210,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.fileuploadservice.uploadedfiles.map(fileinfo",{"_index":2214,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.fileuploadservice.uploadedfiles[0].file.name",{"_index":2239,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.filtercurrentuser",{"_index":2391,"title":{},"body":{"injectables/UserService.html":{}}}],["this.foundchannelnames",{"_index":1922,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.foundmessages",{"_index":1924,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.foundusers",{"_index":1920,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.generateownchatevent.emit",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getemailfromfirebase(guestuserid",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getparameterbyname('oobcode",{"_index":1805,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.guestuserservice.deleteoldguests",{"_index":2180,"title":{},"body":{"components/StartingPageComponent.html":{}}}],["this.id",{"_index":440,"title":{},"body":{"classes/Channel.html":{},"classes/User.html":{}}}],["this.imagechangedevent",{"_index":2315,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["this.inputtext",{"_index":1852,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.inputtext.includes",{"_index":1842,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.inputtext.replace",{"_index":1844,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.isguestuseronfirebase(guestuserid",{"_index":1257,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["this.isuploaded=false",{"_index":2314,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["this.isuploaded=true",{"_index":2330,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["this.isuploading",{"_index":1122,"title":{},"body":{"injectables/FileUploadService.html":{},"components/UploadFormComponent.html":{}}}],["this.isuploading=false",{"_index":2329,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["this.joinstaringchannelsevent.emit",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginerror",{"_index":1399,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginservice.togglelogin",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"components/SignuppictureComponent.html":{}}}],["this.loginservice.toggleresetpasswort",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginservice.toggletopicture",{"_index":1987,"title":{},"body":{"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{}}}],["this.logoutevent.emit",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.member",{"_index":1575,"title":{},"body":{"classes/Message.html":{}}}],["this.members",{"_index":445,"title":{},"body":{"classes/Channel.html":{},"classes/PrivateChat.html":{}}}],["this.message",{"_index":966,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"classes/Message.html":{}}}],["this.message.member",{"_index":2212,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.message.message",{"_index":2236,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.message.message.trim",{"_index":2211,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.message.timestamp",{"_index":2213,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.message.trim",{"_index":964,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["this.message.uploadedfile",{"_index":2215,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.messageid",{"_index":1573,"title":{},"body":{"classes/Message.html":{}}}],["this.messagelistopen",{"_index":2433,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["this.messageloaded.emit",{"_index":1634,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["this.myform",{"_index":1180,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["this.myform.get('email",{"_index":1194,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.myform.get('name",{"_index":1989,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.myform.get('password",{"_index":1406,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["this.myform.get('passwordrepeat",{"_index":1776,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.myform.valid",{"_index":1190,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["this.myform.value['email",{"_index":1191,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.myform.value['name",{"_index":1986,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.myform.value['password",{"_index":1403,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["this.name",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"classes/Channel.html":{},"components/SignupComponent.html":{},"classes/User.html":{}}}],["this.newchatopen",{"_index":1521,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.newchatopenstatus.asobservable",{"_index":1039,"title":{},"body":{"injectables/EventService.html":{}}}],["this.newchatopenstatus.next(state",{"_index":1041,"title":{},"body":{"injectables/EventService.html":{}}}],["this.onchannelboard",{"_index":2219,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.onthreadboard",{"_index":2222,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.onworkspace",{"_index":2459,"title":{},"body":{"components/WorkspaceUserProfilComponent.html":{}}}],["this.openchannel(false",{"_index":1048,"title":{},"body":{"injectables/EventService.html":{}}}],["this.openchannel.emit",{"_index":2438,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["this.opennewchat(false",{"_index":1049,"title":{},"body":{"injectables/EventService.html":{}}}],["this.opennewchat.emit",{"_index":2434,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["this.openprivatechat(true",{"_index":1047,"title":{},"body":{"injectables/EventService.html":{}}}],["this.openprivatechat.emit",{"_index":2441,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["this.openthread(false",{"_index":1050,"title":{},"body":{"injectables/EventService.html":{}}}],["this.overlaycontent",{"_index":1733,"title":{},"body":{"injectables/OverlayService.html":{}}}],["this.overlayservice.hideoverlay",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"components/SignuppictureComponent.html":{}}}],["this.overlayservice.showoverlay",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.overlayservice.showoverlay('abmelden",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.overlayservice.showoverlay('anmelden",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.overlayservice.showoverlay('konto",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.overlayservice.showoverlayerror('e",{"_index":2036,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["this.overlayshow=false",{"_index":1737,"title":{},"body":{"injectables/OverlayService.html":{}}}],["this.overlayshow=true",{"_index":1734,"title":{},"body":{"injectables/OverlayService.html":{}}}],["this.overlaystyle",{"_index":1735,"title":{},"body":{"injectables/OverlayService.html":{}}}],["this.ownchateventemitted",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.password",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["this.photourl",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["this.privatechatopen",{"_index":1519,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.privatechatopenstatus.asobservable",{"_index":1036,"title":{},"body":{"injectables/EventService.html":{}}}],["this.privatechatopenstatus.next(state",{"_index":1038,"title":{},"body":{"injectables/EventService.html":{}}}],["this.privatechatscontainerref",{"_index":667,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["this.privatechatscontainerref?.nativeelement",{"_index":668,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["this.randompath",{"_index":1076,"title":{},"body":{"injectables/FileUploadService.html":{},"components/UploadFormComponent.html":{}}}],["this.reactemoji",{"_index":1747,"title":{},"body":{"classes/Reaction.html":{}}}],["this.reactions",{"_index":1577,"title":{},"body":{"classes/Message.html":{}}}],["this.reactuser",{"_index":1745,"title":{},"body":{"classes/Reaction.html":{}}}],["this.renderer.addclass(background",{"_index":2144,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.renderer.addclass(element",{"_index":2162,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.renderer.addclass(imgcontainer",{"_index":2132,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.renderer.addclass(logocontainer",{"_index":2140,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.renderer.addclass(textcontainer",{"_index":2142,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.renderer.addclass(textcontainerp",{"_index":2135,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.renderer.listen(document.body",{"_index":567,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["this.renderer.removestyle(body",{"_index":2169,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.renderer.removestyle(document.body",{"_index":2150,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.renderer.setstyle(body",{"_index":2158,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.renderer.setstyle(document.body",{"_index":2149,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.resetpasswordservice.handleresetpassword",{"_index":1769,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router",{"_index":2028,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["this.router.navigate",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['/start",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sanitizer.bypasssecuritytrusturl(event.objecturl",{"_index":2318,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["this.savevariables",{"_index":1397,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.scrolltobottom",{"_index":669,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["this.searchchannel",{"_index":1846,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.searchchannelmessages(searchtext",{"_index":1925,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.searchchannelnames(searchtext",{"_index":1923,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.searchmemberscomponent",{"_index":583,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["this.searchmemberscomponent.selectedmembers",{"_index":584,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["this.searchmemberscomponent?.selectedmembers",{"_index":579,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogAddChannelComponent.html":{}}}],["this.searchservice.foundchannelnames",{"_index":1548,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.searchservice.foundmessages",{"_index":1553,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.searchservice.foundusers",{"_index":1543,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.searchservice.getmessagetext(message.message",{"_index":1554,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.searchservice.startsearch(this.searchtext",{"_index":1525,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.searchtext",{"_index":1843,"title":{},"body":{"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["this.searchuser",{"_index":1845,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.searchusers(searchtext",{"_index":1921,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.selectedmembers.push(userobj",{"_index":1872,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["this.selectedmembers.splice(i",{"_index":1880,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["this.selectmerbersopen",{"_index":752,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["this.setbodyoverflowhidden(false",{"_index":2146,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.setbodyoverflowhidden(true",{"_index":2117,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.setmembers",{"_index":754,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["this.setpersistence",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.settextfieldstatus(false",{"_index":2231,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.showlogin",{"_index":1442,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.showresetpassword",{"_index":1446,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.showsignup",{"_index":1443,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.showsignuppicture",{"_index":1444,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.showsignuppictureupload",{"_index":1445,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.signingin",{"_index":2032,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["this.signupform",{"_index":2029,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["this.startanimation",{"_index":2118,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["this.subcurrentuser",{"_index":2382,"title":{},"body":{"injectables/UserService.html":{}}}],["this.submitmessage(ngform",{"_index":2235,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.subuserslist",{"_index":2380,"title":{},"body":{"injectables/UserService.html":{}}}],["this.textfieldonupload",{"_index":593,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{}}}],["this.textfieldstatus.emit(state",{"_index":2237,"title":{},"body":{"components/TextareaMainPageComponent.html":{}}}],["this.threadopen",{"_index":1515,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.threadopenstatus.asobservable",{"_index":1030,"title":{},"body":{"injectables/EventService.html":{}}}],["this.threadopenstatus.next(state",{"_index":1032,"title":{},"body":{"injectables/EventService.html":{}}}],["this.timestamp",{"_index":633,"title":{},"body":{"classes/Chat.html":{},"classes/Message.html":{},"classes/PrivateChat.html":{}}}],["this.uid",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.unsubcurrentuser",{"_index":2381,"title":{},"body":{"injectables/UserService.html":{}}}],["this.unsubusers",{"_index":2379,"title":{},"body":{"injectables/UserService.html":{}}}],["this.uploadedfile",{"_index":968,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"classes/Message.html":{}}}],["this.uploadedfiles",{"_index":1119,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.uploadedfiles.push",{"_index":1131,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.uploadedfiles.splice(0",{"_index":1153,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.uploadedfiles.splice(fileindex",{"_index":1149,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.uploadedfiles[0",{"_index":1152,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.uploadedfiles[fileindex",{"_index":1144,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.uploadfiles",{"_index":1115,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["this.user",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users",{"_index":2384,"title":{},"body":{"injectables/UserService.html":{}}}],["this.users.findindex(obj",{"_index":2398,"title":{},"body":{"injectables/UserService.html":{}}}],["this.users.push(this.setuserobject(element.data",{"_index":2388,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.getpartnerid(chatservice.currentchat.members",{"_index":676,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["this.userservice.getusersdata",{"_index":675,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["this.userservice.getusersdata(chatservice.currentchat.members[0",{"_index":677,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["this.userservice.getusersdata(this.channeldata.creator",{"_index":836,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.userservice.users",{"_index":674,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["this.userservice.users.filter(user",{"_index":1929,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.userservice.users.findindex(obj",{"_index":1878,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["this.userservice.users[this.userservice.getusersdata(memberid",{"_index":655,"title":{},"body":{"components/ChatBoardComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["this.userservice.users[this.userservice.getusersdata(user)].name",{"_index":1663,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["this.usersname",{"_index":2386,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersname.push(element.data()['name",{"_index":2390,"title":{},"body":{"injectables/UserService.html":{}}}],["this.workspaceopen",{"_index":1523,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.workspaceopenstatus.asobservable",{"_index":1042,"title":{},"body":{"injectables/EventService.html":{}}}],["this.workspaceopenstatus.next(state",{"_index":1044,"title":{},"body":{"injectables/EventService.html":{}}}],["thread",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["threadboard",{"_index":2241,"title":{},"body":{"components/ThreadBoardComponent.html":{}}}],["threadboardcomponent",{"_index":144,"title":{"components/ThreadBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["threadchatscontainerref",{"_index":2242,"title":{},"body":{"components/ThreadBoardComponent.html":{}}}],["threadmodus",{"_index":1002,"title":{},"body":{"injectables/EventService.html":{}}}],["threadopen",{"_index":1461,"title":{},"body":{"components/MainPageComponent.html":{}}}],["threadopenstatus",{"_index":988,"title":{},"body":{"injectables/EventService.html":{}}}],["throw",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["time",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["timelastmessage",{"_index":1597,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["timeseparatorcomponent",{"_index":146,"title":{"components/TimeSeparatorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["timestamp",{"_index":626,"title":{},"body":{"classes/Chat.html":{},"components/DialogShowProfilComponent.html":{},"classes/Message.html":{},"classes/PrivateChat.html":{},"components/TextareaMainPageComponent.html":{}}}],["title",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":1819,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["togglechannellist",{"_index":2406,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["toggleinput",{"_index":737,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["toggleinput(checked",{"_index":743,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["togglelogin",{"_index":1426,"title":{},"body":{"injectables/LoginService.html":{}}}],["togglemessagelist",{"_index":2407,"title":{},"body":{"components/WorkspaceMenuComponent.html":{}}}],["toggleownpicture",{"_index":1427,"title":{},"body":{"injectables/LoginService.html":{}}}],["toggleresetpasswort",{"_index":1428,"title":{},"body":{"injectables/LoginService.html":{}}}],["togglesidenav",{"_index":1472,"title":{},"body":{"components/MainPageComponent.html":{}}}],["togglesignup",{"_index":1429,"title":{},"body":{"injectables/LoginService.html":{}}}],["toggletopicture",{"_index":1430,"title":{},"body":{"injectables/LoginService.html":{}}}],["top",{"_index":888,"title":{},"body":{"components/DialogUserMenuComponent.html":{}}}],["track",{"_index":598,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["transform",{"_index":1358,"title":{},"body":{"pipes/InputFilterPipe.html":{}}}],["transform(items",{"_index":1359,"title":{},"body":{"pipes/InputFilterPipe.html":{}}}],["transition",{"_index":2159,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["transitions",{"_index":2155,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["tree",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["true",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["try",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileUploadService.html":{},"components/LoginComponent.html":{},"components/SignuppictureComponent.html":{}}}],["tslib",{"_index":2531,"title":{},"body":{"dependencies.html":{}}}],["twentyfourhoursago",{"_index":1263,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["type",{"_index":14,"title":{},"body":{"injectables/AnimationStateService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Channel.html":{},"components/ChannelBoardComponent.html":{},"classes/Chat.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/ImprintComponent.html":{},"pipes/InputFilterPipe.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"injectables/OverlayService.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2590,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1952,"title":{},"body":{"injectables/SearchService.html":{}}}],["types/user.class",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"components/MainPageComponent.html":{}}}],["uhr",{"_index":1652,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["uid",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{},"components/MainPageComponent.html":{}}}],["um",{"_index":1304,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["und",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatBoardComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{}}}],["undefined",{"_index":883,"title":{},"body":{"components/DialogUserMenuComponent.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{}}}],["ungültig",{"_index":1202,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["unit",{"_index":2564,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":1901,"title":{},"body":{"injectables/SearchService.html":{}}}],["unsubcurrentuser",{"_index":2378,"title":{},"body":{"injectables/UserService.html":{}}}],["unsubusers",{"_index":2353,"title":{},"body":{"injectables/UserService.html":{}}}],["unterhaltung",{"_index":680,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["unterstützt",{"_index":1966,"title":{},"body":{"injectables/SearchService.html":{}}}],["update",{"_index":2119,"title":{},"body":{"components/StartAnimationComponent.html":{}}}],["updatedoc",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{},"injectables/UserService.html":{}}}],["updatedoc(channelref",{"_index":1302,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["updatedoc(messagedoc.ref",{"_index":1333,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["updatedoc(userdocref",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatedreactions",{"_index":1330,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["updateemail",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateemail(this.user",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateinfo",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"components/DialogUserProfilComponent.html":{}}}],["updateinfo(name",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatemessage",{"_index":925,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["updatemessage(ngform",{"_index":947,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["updateprofile",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateprofile(user",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatepromise",{"_index":1301,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["updatepromises",{"_index":1294,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["updatepromises.push(updatepromise",{"_index":1306,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["upload",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["uploadbytes",{"_index":2307,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["uploadbytes(this.storageref",{"_index":2327,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["uploadbytesresumable",{"_index":1081,"title":{},"body":{"injectables/FileUploadService.html":{},"components/UploadFormComponent.html":{}}}],["uploadbytesresumable(childref",{"_index":1129,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["uploadedfile",{"_index":931,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"classes/Message.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["uploadedfile[0",{"_index":983,"title":{},"body":{"components/EditMsgTextareaComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["uploadedfiles",{"_index":1059,"title":{},"body":{"injectables/FileUploadService.html":{},"classes/Message.html":{}}}],["uploadfiles",{"_index":1062,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["uploadformcomponent",{"_index":149,"title":{"components/UploadFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["uploads",{"_index":2333,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["uploadtasks",{"_index":1123,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["url",{"_index":1798,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["use",{"_index":2035,"title":{},"body":{"components/SignuppictureComponent.html":{},"index.html":{}}}],["used",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"components/UploadFormComponent.html":{}}}],["user",{"_index":100,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["user's",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResetPasswordService.html":{}}}],["user.id",{"_index":1544,"title":{},"body":{"components/MainPageComponent.html":{}}}],["user.metadata?.creationtime",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name.tolowercase().includes(querytext",{"_index":1930,"title":{},"body":{"injectables/SearchService.html":{}}}],["user.service",{"_index":1394,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SearchService.html":{},"components/StartingPageComponent.html":{}}}],["user.service.ts",{"_index":1214,"title":{},"body":{"injectables/GuestUserService.html":{},"coverage.html":{}}}],["user.service.ts:10",{"_index":1226,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["user.service.ts:105",{"_index":1240,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["user.service.ts:121",{"_index":1233,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["user.service.ts:14",{"_index":1227,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["user.service.ts:145",{"_index":1236,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["user.service.ts:33",{"_index":1238,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["user.service.ts:42",{"_index":1234,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["user.service.ts:77",{"_index":1229,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["user.service.ts:91",{"_index":1231,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["user.uid",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["user:any",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercredential",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercredential.user",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{}}}],["userdata.name",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.photourl",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata?.['email']?.endswith('@guest.de",{"_index":1278,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["userdata['email",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdocref",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{}}}],["userid",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["userimage",{"_index":2454,"title":{},"body":{"components/WorkspaceUserProfilComponent.html":{}}}],["usermenudialog",{"_index":1487,"title":{},"body":{"components/MainPageComponent.html":{}}}],["username",{"_index":1868,"title":{},"body":{"components/SearchMemberInputComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["userobj",{"_index":483,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/SearchMemberInputComponent.html":{}}}],["userobj.id",{"_index":1883,"title":{},"body":{"components/SearchMemberInputComponent.html":{}}}],["userobject",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GuestUserService.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":466,"title":{"injectables/UserService.html":{}},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["usersname",{"_index":2354,"title":{},"body":{"injectables/UserService.html":{}}}],["usersservice",{"_index":841,"title":{},"body":{"components/DialogShowProfilComponent.html":{},"components/WorkspaceMenuComponent.html":{}}}],["usertype",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"components/MainPageComponent.html":{},"miscellaneous/typealiases.html":{}}}],["validatepasswordrepeat",{"_index":1752,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["validators",{"_index":1178,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["validators.email",{"_index":1396,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.minlength(7",{"_index":1767,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["validators.pattern(/^[a",{"_index":1183,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["validators.required",{"_index":1182,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["valide",{"_index":1147,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["value",{"_index":18,"title":{},"body":{"injectables/AnimationStateService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"injectables/GuestUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"injectables/OverlayService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"injectables/SearchService.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["variable",{"_index":2468,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2594,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vergebe",{"_index":783,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["vergeben",{"_index":2037,"title":{},"body":{"components/SignuppictureComponent.html":{},"components/TextareaMainPageComponent.html":{}}}],["vergessen",{"_index":1415,"title":{},"body":{"components/LoginComponent.html":{}}}],["verifypasswordresetcode",{"_index":1802,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["verifypasswordresetcode(this.authservice.auth",{"_index":1816,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["verlassen",{"_index":837,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["version",{"_index":2541,"title":{},"body":{"index.html":{},"properties.html":{}}}],["verwenden",{"_index":2047,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["verwendest",{"_index":1414,"title":{},"body":{"components/LoginComponent.html":{}}}],["via",{"_index":2568,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":510,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["viewchild('abovemenutrigger",{"_index":1629,"title":{},"body":{"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{}}}],["viewchild('channelchatscontainer",{"_index":502,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["viewchild('privatechatscontainer",{"_index":648,"title":{},"body":{"components/ChatBoardComponent.html":{}}}],["viewchild('threadchatscontainer",{"_index":2249,"title":{},"body":{"components/ThreadBoardComponent.html":{}}}],["viewchild(searchmemberinputcomponent",{"_index":508,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogAddChannelComponent.html":{}}}],["void",{"_index":30,"title":{},"body":{"injectables/AnimationStateService.html":{},"injectables/AuthService.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"injectables/FileUploadService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"injectables/OverlayService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ResetPasswordService.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/UploadFormComponent.html":{},"injectables/UserService.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["vollständiger",{"_index":912,"title":{},"body":{"components/DialogUserProfilComponent.html":{}}}],["vom",{"_index":979,"title":{},"body":{"components/EditMsgTextareaComponent.html":{}}}],["von",{"_index":788,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{}}}],["vor",{"_index":1268,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["vorhanden",{"_index":1251,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["warten",{"_index":1285,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["weiter",{"_index":792,"title":{},"body":{"components/DialogAddChannelComponent.html":{},"components/SignuppictureComponent.html":{}}}],["weiterleitet",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["wenn",{"_index":1248,"title":{},"body":{"injectables/GuestUserService.html":{},"injectables/SearchService.html":{}}}],["werden",{"_index":1788,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["wert",{"_index":1960,"title":{},"body":{"injectables/SearchService.html":{}}}],["west1.firebasedatabase.app\",\"storagebucket\":\"dabubble",{"_index":2607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["where('creator",{"_index":1280,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["where('member",{"_index":1319,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["where('members",{"_index":1291,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["width",{"_index":2051,"title":{},"body":{"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{}}}],["window.innerwidth",{"_index":561,"title":{},"body":{"components/ChannelBoardComponent.html":{},"components/DialogUserMenuComponent.html":{},"injectables/EventService.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/ThreadBoardComponent.html":{}}}],["window.location.href",{"_index":1447,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ResetPasswordService.html":{}}}],["windows",{"_index":1046,"title":{},"body":{"injectables/EventService.html":{}}}],["wir",{"_index":1205,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["wird",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SearchService.html":{}}}],["workspace",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"injectables/EventService.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{}}}],["workspacemenucomponent",{"_index":152,"title":{"components/WorkspaceMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["workspaceopen",{"_index":1462,"title":{},"body":{"components/MainPageComponent.html":{}}}],["workspaceopenstatus",{"_index":989,"title":{},"body":{"injectables/EventService.html":{}}}],["workspaceuserprofilcomponent",{"_index":154,"title":{"components/WorkspaceUserProfilComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChannelBoardComponent.html":{},"components/ChatBoardComponent.html":{},"components/ConfirmationOverlayComponent.html":{},"components/DialogAddChannelComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfilComponent.html":{},"components/DialogUserMenuComponent.html":{},"components/DialogUserProfilComponent.html":{},"components/EditMsgTextareaComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/MessageLeftComponent.html":{},"components/MessageRightComponent.html":{},"components/NewMsgBoardComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchInputComponent.html":{},"components/SearchMemberInputComponent.html":{},"components/SignupComponent.html":{},"components/SignuppictureComponent.html":{},"components/StartAnimationComponent.html":{},"components/StartingPageComponent.html":{},"components/TextareaMainPageComponent.html":{},"components/ThreadBoardComponent.html":{},"components/TimeSeparatorComponent.html":{},"components/UploadFormComponent.html":{},"components/WorkspaceMenuComponent.html":{},"components/WorkspaceUserProfilComponent.html":{},"coverage.html":{}}}],["wrapper",{"_index":547,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["wrapper.offsetheight",{"_index":558,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["wrapper.offsetleft",{"_index":551,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["wrapper.offsettop",{"_index":557,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["wrapper.offsetwidth",{"_index":552,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["wurde",{"_index":619,"title":{},"body":{"components/ChannelBoardComponent.html":{}}}],["wurden",{"_index":1136,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["wähle",{"_index":2041,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["wählen",{"_index":2044,"title":{},"body":{"components/SignuppictureComponent.html":{}}}],["yes",{"_index":434,"title":{},"body":{"classes/Channel.html":{},"classes/Chat.html":{},"classes/Message.html":{},"classes/PrivateChat.html":{},"classes/Reaction.html":{},"classes/User.html":{}}}],["z0",{"_index":1185,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["z]{2",{"_index":1188,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["z]{2,}$/.test(value",{"_index":1404,"title":{},"body":{"components/LoginComponent.html":{}}}],["za",{"_index":1184,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["zahl",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["zeichen",{"_index":1773,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/SignupComponent.html":{}}}],["zeichenkette",{"_index":1954,"title":{},"body":{"injectables/SearchService.html":{}}}],["zeitpunkt",{"_index":1267,"title":{},"body":{"injectables/GuestUserService.html":{}}}],["zone.js",{"_index":2533,"title":{},"body":{"dependencies.html":{}}}],["zu",{"_index":1305,"title":{},"body":{"injectables/GuestUserService.html":{},"components/LoginComponent.html":{}}}],["zufällige",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["zufälliger",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["zulassen",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["zum",{"_index":778,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["zur",{"_index":771,"title":{},"body":{"components/DialogAddChannelComponent.html":{}}}],["zurück",{"_index":1956,"title":{},"body":{"injectables/SearchService.html":{}}}],["zurücksetzen",{"_index":1204,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["zuvor",{"_index":1096,"title":{},"body":{"injectables/FileUploadService.html":{}}}],["zuweisung",{"_index":2331,"title":{},"body":{"components/UploadFormComponent.html":{}}}],["zwischen",{"_index":683,"title":{},"body":{"components/ChatBoardComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AnimationStateService.html":{"url":"injectables/AnimationStateService.html","title":"injectable - AnimationStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnimationStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/animation-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animatedOnce\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isAnimatedOnce\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animatedOnce\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/animation-state.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isAnimatedOnce\n                    \n                \n\n                \n                    \n                        getisAnimatedOnce()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/animation-state.service.ts:9\n                                \n                            \n\n                \n                    \n                        setisAnimatedOnce(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/animation-state.service.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnimationStateService {\n  private animatedOnce: boolean = false;\n\n  get isAnimatedOnce(): boolean {\n    return this.animatedOnce;\n  }\n\n  set isAnimatedOnce(value: boolean) {\n    this.animatedOnce = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                ConfirmationOverlayComponent\n                            NgIf\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                overlayService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        overlayService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OverlayService\n\n                    \n                \n                \n                    \n                        Default value : inject(OverlayService)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dabubble'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { ConfirmationOverlayComponent } from './confirmation-overlay/confirmation-overlay.component';\nimport { OverlayService } from './services/overlay.service';\nimport { NgIf } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, ConfirmationOverlayComponent, NgIf],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\n\nexport class AppComponent {\n  title = 'dabubble';\n  overlayService: OverlayService = inject(OverlayService)\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _currentUserSubject\n                            \n                            \n                                    Public\n                                auth\n                            \n                            \n                                chatRefs\n                            \n                            \n                                createdAt\n                            \n                            \n                                currentUser\n                            \n                            \n                                currentUser$\n                            \n                            \n                                email\n                            \n                            \n                                    Public\n                                generateOwnChatEvent\n                            \n                            \n                                    Public\n                                joinStaringChannelsEvent\n                            \n                            \n                                    Public\n                                joinStartingChannelsEventEmitted\n                            \n                            \n                                    Public\n                                logoutEvent\n                            \n                            \n                                name\n                            \n                            \n                                    Public\n                                ownChatEventEmitted\n                            \n                            \n                                password\n                            \n                            \n                                photoURL\n                            \n                            \n                                provider\n                            \n                            \n                                registerError\n                            \n                            \n                                uid\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createUserObject\n                            \n                            \n                                    Private\n                                    Async\n                                getEmailFromFirebase\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                loginGuest\n                            \n                            \n                                loginWithGoogle\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                registerGuest\n                            \n                            \n                                sendPasswortReset\n                            \n                            \n                                    Private\n                                setPersistence\n                            \n                            \n                                    Async\n                                updateInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(overlayService: OverlayService, loginService: LoginService, auth: Auth, firestore: Firestore, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        overlayService\n                                                  \n                                                        \n                                                                        OverlayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createUserObject\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUserObject()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         UserType\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getEmailFromFirebase\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEmailFromFirebase(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:287\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loginGuest\n                        \n                    \n                \n            \n            \n                \n                        \n                    loginGuest(guestUserId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:268\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                guestUserId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithGoogle\n                        \n                    \n                \n            \n            \n                \nloginWithGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:215\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerGuest\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerGuest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:228\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendPasswortReset\n                        \n                    \n                \n            \n            \n                \nsendPasswortReset(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setPersistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    setPersistence()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateInfo(name: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chatRefs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._currentUserSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        generateOwnChatEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        joinStaringChannelsEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        joinStartingChannelsEventEmitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logoutEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ownChatEventEmitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photoURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : './assets/img/profils/standardPic.svg'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GoogleAuthProvider()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable, inject } from '@angular/core';\nimport { Auth, User, createUserWithEmailAndPassword, updateProfile, user, browserSessionPersistence, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup, getAdditionalUserInfo, sendPasswordResetEmail, updateEmail, signOut, sendEmailVerification, onAuthStateChanged } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subscription, from, map } from 'rxjs';\nimport { UserType } from '../types/user.class';\nimport { Firestore, collection, doc, getDoc, onSnapshot, setDoc, updateDoc } from '@angular/fire/firestore';\nimport { OverlayService } from './overlay.service';\nimport { setPersistence } from '@firebase/auth';\nimport { LoginService } from './login.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n  private _currentUserSubject: BehaviorSubject = new BehaviorSubject(null);\n  currentUser$ = this._currentUserSubject.asObservable();\n  currentUser: any;\n  user:any\n  uid: string = '';\n  email: string = '';\n  password: string = '';\n  name: string = '';\n  createdAt: string = '';\n  photoURL = './assets/img/profils/standardPic.svg';\n  chatRefs: any;\n  public ownChatEventEmitted: boolean = false;\n  public joinStartingChannelsEventEmitted: boolean = false;\n  registerError: string = ''\n\n  provider = new GoogleAuthProvider();\n  public logoutEvent: EventEmitter = new EventEmitter();\n  public generateOwnChatEvent: EventEmitter = new EventEmitter();\n  public joinStaringChannelsEvent: EventEmitter = new EventEmitter();\n  \n  constructor( \n    private overlayService: OverlayService,\n    private loginService: LoginService,\n    public auth: Auth,\n    private firestore: Firestore,\n    private router: Router,\n    ){\n    this.setPersistence();\n    this.auth.onAuthStateChanged(user => {\n      if (user) {\n        console.log(user)\n        this.user = user\n        this.uid = user.uid;\n        \n        const userDocRef = doc(this.firestore, 'users', this.uid);\n        onSnapshot(userDocRef, (doc) => {\n          if (!doc.exists()) {\n            this.router.navigate(['/']);\n          } else {\n            this.router.navigate(['/start'])\n            this.currentUser = {...doc.data() } as UserType;\n          \n            this._currentUserSubject.next(this.currentUser);\n          }\n        }, (error) => {\n          console.error('Error fetching user document:', error);\n          // Handle error\n        });\n      } else {\n        this._currentUserSubject.next(null);\n        if(this.router.url !== '/reset-password'){   this.router.navigate(['/']);}\n     \n      }\n    });\n  }\n\n  private setPersistence(): void {\n \n    // Setzen der Persistenzoption auf \"local\"\n    setPersistence(this.auth, browserSessionPersistence)\n      .then(() => {\n      })\n      .catch((error) => {\n        console.error('Error setting Firebase persistence:', error);\n      });\n  }\n\n  private createUserObject(): UserType {\n    return {\n      uid: this.uid,\n      name: this.name,\n      email: this.email,\n      photoURL: this.photoURL,\n      chatRefs: this.uid,\n      createdAt: this.createdAt\n    };\n  }\n\n  async login(): Promise {\n    console.log('loginCalled')\n    try {\n      await setPersistence(this.auth, browserSessionPersistence);\n      await signInWithEmailAndPassword(this.auth, this.email, this.password);\n      this.overlayService.showOverlay('Anmelden')\n      setTimeout(() => {\n        this.overlayService.hideOverlay();\n      }, 1500);\n\n      this.router.navigate(['/start']);\n\n    } catch (error) {\n      console.log(error)\n      throw error;\n    }\n  }\n\n  async register(): Promise {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(this.auth, this.email, this.password);\n      const user = userCredential.user;\n      await updateProfile(user, {\n        displayName: this.name\n      });\n      await updateProfile(user, {\n        photoURL: this.photoURL\n      });\n      this.chatRefs = [user.uid];\n      const userObject: UserType = this.createUserObject();\n      const userDocRef = doc(this.firestore, 'users', user.uid);\n      await setDoc(userDocRef, userObject);\n        this.generateOwnChatEvent.emit(); // Emitiere das Event\n        this.joinStaringChannelsEvent.emit(); // Emitiere das Event\n      this.loginService.toggleLogin\n      //erst ab hier zulassen dass  die Registrierung fertig ist und der user weiterleitet wird\n      this.overlayService.showOverlay('Konto erfolgreich erstellt!')\n      setTimeout(() => {\n        this.overlayService.hideOverlay();\n        this.router.navigate(['/start']);\n      }, 1500);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async updateInfo(name: string, email: string) {\n\n    const userDocRef = doc(this.firestore, 'users', this.currentUser.uid);\n    await updateEmail(this.user, email);\n    await updateDoc(userDocRef, { email: email, name: name });\n\n  };\n\n\n  loginWithGoogle() {\n    signInWithPopup(this.auth, new GoogleAuthProvider())\n      .then((result) => {\n        this.overlayService.showOverlay('Anmelden');\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n       \n        if (credential) {\n          const userData: UserType = {\n            uid: result.user.uid,\n            email: result.user.email || '',\n            name: result.user.displayName || '',\n            photoURL: result.user.photoURL || '',\n            chatRefs:[result.user.uid],\n          createdAt:''\n          };\n          const userDocRef = doc(this.firestore, 'users', result.user.uid);\n          //check if user  already exists in the database and create it if not\n          getDoc(userDocRef).then((docSnapshot) => {\n              if (!docSnapshot.exists()) {\n                setDoc(userDocRef, userData);\n                if (!this.ownChatEventEmitted) {\n               \n                  this.generateOwnChatEvent.emit(); // Emitiere das Event\n                  this.joinStaringChannelsEvent.emit(); // Emitiere das Event\n                }\n              }}\n          );\n          this\n          this._currentUserSubject.next(userData); // Aktualisieren Sie currentUser im BehaviorSubject\n          this.router.navigate(['/start']);\n          setTimeout(() => {\n            this.overlayService.hideOverlay();\n          }, 1500);\n        }\n      }).catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // The email of the user's account used.\n        const email = error.customData.email;\n        // The AuthCredential type that was used.\n        const credential = GoogleAuthProvider.credentialFromError(error);\n        // ...\n      });\n  }\n\n  sendPasswortReset(email: string) {\n    sendPasswordResetEmail(this.auth, email)\n      .then(() => {\n        this.overlayService.showOverlay(' E-Mail gesendet');\n        setTimeout(() => {\n          this.overlayService.hideOverlay();\n          this.loginService.toggleResetPasswort()\n        }, 1500);\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // ..\n      });\n  }\n\n\n  async logout(): Promise {\n    try {\n      this.logoutEvent.emit();\n      this.overlayService.showOverlay('Abmelden')\n      await signOut(this.auth);\n      setTimeout(() => {\n        this.overlayService.hideOverlay();\n      }, 1500);\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  }\n\n  async registerGuest(): Promise {\n    try {\n      const randomNum = Math.floor(Math.random() * 10000); // Zufällige Zahl generieren\n      const email = `guest${randomNum}@guest.de`; // E-Mail-Adresse mit zufälliger Zahl erstellen\n      \n      const userCredential = await createUserWithEmailAndPassword(this.auth, email, '1234567');\n      const user = userCredential.user;\n  \n      const userData: UserType = {\n        uid: user.uid,\n        name: 'Guest', // Name des Gastbenutzers\n        email: email, // E-Mail-Adresse des Gastbenutzers mit zufälliger Zahl\n        photoURL: './assets/img/profils/standardPic.svg', // Profilbild des Gastbenutzers (optional)\n        chatRefs: [],\n        createdAt: user.metadata?.creationTime\n\n      };\n  \n      await updateProfile(user, {\n        displayName: userData.name\n      });\n      await updateProfile(user, {\n        photoURL: userData.photoURL\n      });\n      const userDocRef = doc(this.firestore, 'users', user.uid);\n      await setDoc(userDocRef, userData);\n      this.overlayService.showOverlay('Konto erfolgreich erstellt!')\n      this.generateOwnChatEvent.emit();\n      this.joinStaringChannelsEvent.emit();\n      setTimeout(() => {\n        this.overlayService.hideOverlay();\n        this.router.navigate(['/start']);\n      }, 1500);\n      return user.uid; // Rückgabe der uid des registrierten Gastbenutzers\n    } catch (error) {\n      console.error('Error registering guest user:', error);\n      throw error;\n    }\n  }\n  \n  async loginGuest(guestUserId: string): Promise {\n    const email = await this.getEmailFromFirebase(guestUserId);\n    console.log(email)\n    try {\n      await setPersistence(this.auth, browserSessionPersistence);\n      await signInWithEmailAndPassword(this.auth, email, '1234567');\n      this.overlayService.showOverlay('Anmelden')\n      setTimeout(() => {\n        this.overlayService.hideOverlay();\n      }, 1500);\n\n      this.router.navigate(['/start']);\n\n    } catch (error) {\n      console.log(error)\n      throw error;\n    }\n  }\n\n  private async getEmailFromFirebase(userId: string): Promise {\n    const userDocRef = doc(this.firestore, 'users', userId);\n    const docSnapshot = await getDoc(userDocRef);\n    if (docSnapshot.exists()) {\n        const userData = docSnapshot.data();\n        return userData['email'];\n    } else {\n        throw new Error('User document not found in Firestore');\n    }\n}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Channel.html":{"url":"classes/Channel.html","title":"class - Channel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Channel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/channel.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creator\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                id\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/channel.class.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/channel.class.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/channel.class.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/channel.class.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/channel.class.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/channel.class.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Channel {\n    id: string;\n    name: string;\n    creator: string;\n    members: string[];\n    description?: string;\n\n\n  constructor(obj?:any) {\n    this.id = obj ? obj.id : '';\n    this.name = obj ? obj.name : '';\n    this.creator = obj ? obj.creator : '';\n    this.members = obj ? obj.members : [''];\n    this.description = obj ? obj.description : '';\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChannelBoardComponent.html":{"url":"components/ChannelBoardComponent.html","title":"component - ChannelBoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChannelBoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/channel-board/channel-board.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-channel-board\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                TextareaMainPageComponent\n                                MessageLeftComponent\n                                MessageRightComponent\n                            MatDialogModule\n                            CommonModule\n                                WorkspaceUserProfilComponent\n                                SearchMemberInputComponent\n                                TimeSeparatorComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./channel-board.component.html\n            \n\n\n\n            \n                styleUrl\n                ./channel-board.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Private\n                                    Optional\n                                bodyClickListener\n                            \n                            \n                                channelBoard\n                            \n                            \n                                    \n                                    Optional\n                                channelChatsContainerRef\n                            \n                            \n                                channelData\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                chatsData\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    \n                                    Optional\n                                searchMembersComponent\n                            \n                            \n                                textfieldOnUpload\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMembersToChannel\n                            \n                            \n                                checkIfUserIsAleadyAdded\n                            \n                            \n                                closeDialog\n                            \n                            \n                                closeDialogOnClickDok\n                            \n                            \n                                openChannelMembersDialog\n                            \n                            \n                                openEditChannelDialog\n                            \n                            \n                                scrollToBottom\n                            \n                            \n                                setTextfieldStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, channelService: ChannelService, renderer: Renderer2, userService: UserService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/channel-board/channel-board.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMembersToChannel\n                        \n                    \n                \n            \n            \n                \naddMembersToChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel-board/channel-board.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkIfUserIsAleadyAdded\n                        \n                    \n                \n            \n            \n                \ncheckIfUserIsAleadyAdded(userObj: User, channel: Channel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel-board/channel-board.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userObj\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                channel\n                                            \n                                                            Channel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog(selDialog: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel-board/channel-board.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selDialog\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialogOnClickDok\n                        \n                    \n                \n            \n            \n                \ncloseDialogOnClickDok(dialog: HTMLDialogElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel-board/channel-board.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dialog\n                                            \n                                                        HTMLDialogElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openChannelMembersDialog\n                        \n                    \n                \n            \n            \n                \nopenChannelMembersDialog(selDialog: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel-board/channel-board.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selDialog\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditChannelDialog\n                        \n                    \n                \n            \n            \n                \nopenEditChannelDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel-board/channel-board.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToBottom\n                        \n                    \n                \n            \n            \n                \nscrollToBottom()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel-board/channel-board.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTextfieldStatus\n                        \n                    \n                \n            \n            \n                \nsetTextfieldStatus(event: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel-board/channel-board.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel-board/channel-board.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        bodyClickListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel-board/channel-board.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelBoard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel-board/channel-board.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        channelChatsContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('channelChatsContainer')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel-board/channel-board.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.channelService.channels[this.channelService.selectedChannel]\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel-board/channel-board.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel-board/channel-board.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chatsData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.channelService.selectedChannelChats\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel-board/channel-board.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel-board/channel-board.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        searchMembersComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchMemberInputComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(SearchMemberInputComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel-board/channel-board.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textfieldOnUpload\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel-board/channel-board.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel-board/channel-board.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Renderer2, ViewChild, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextareaMainPageComponent } from '../shared/textarea-main-page/textarea-main-page.component';\nimport { MessageLeftComponent } from '../shared/message-left/message-left.component';\nimport { MessageRightComponent } from '../shared/message-right/message-right.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { DialogEditChannelComponent } from '../dialogs/dialog-edit-channel/dialog-edit-channel.component';\nimport { ChannelService } from '../../services/channel.service';\nimport { WorkspaceUserProfilComponent } from '../shared/workspace-user-profil/workspace-user-profil.component';\nimport { UserService } from '../../services/user.service';\nimport { SearchMemberInputComponent } from '../shared/search-member-input/search-member-input.component';\nimport { Channel } from '../../models/channel.class';\nimport { User } from '../../models/user.class';\nimport { AuthService } from '../../services/auth.service';\nimport { TimeSeparatorComponent } from '../shared/time-separator/time-separator.component';\n\n\n@Component({\n  selector: 'app-channel-board',\n  standalone: true,\n  imports: [TextareaMainPageComponent, MessageLeftComponent, MessageRightComponent, MatDialogModule, CommonModule, WorkspaceUserProfilComponent, SearchMemberInputComponent, TimeSeparatorComponent],\n  templateUrl: './channel-board.component.html',\n  styleUrl: './channel-board.component.scss'\n})\nexport class ChannelBoardComponent {\n\n    @ViewChild(SearchMemberInputComponent) searchMembersComponent?: SearchMemberInputComponent;\n    @ViewChild('channelChatsContainer') channelChatsContainerRef?: ElementRef;\n    \n    channelBoard = true;\n    private bodyClickListener?: () => void;\n    channelData = this.channelService.channels[this.channelService.selectedChannel];\n    chatsData = this.channelService.selectedChannelChats;\n    // channelTextarea = true;\n    textfieldOnUpload = false;\n\n\n    \n    constructor(public dialog: MatDialog, public channelService: ChannelService, private renderer: Renderer2, public userService: UserService, public authService: AuthService) {}\n\n\n    openEditChannelDialog() {\n      this.dialog.open(DialogEditChannelComponent, {panelClass: 'dialog-bor-rad-round'});\n    }\n\n\n    openChannelMembersDialog(selDialog:string) {\n      let dialog = document.getElementById(selDialog);\n      if(dialog) {\n        let wrapper = document.getElementById(\"dialog-wrapper\");\n        if(wrapper) {\n          dialog.style.left = (wrapper.offsetLeft + wrapper.offsetWidth - dialog.offsetWidth - 512) + \"px\"; \n          dialog.style.top = (wrapper.offsetTop + wrapper.offsetHeight + 140) + \"px\";\n          dialog.showModal();\n\n          if (window.innerWidth > 544 && window.innerWidth  {\n        this.closeDialogOnClickDok(dialog);\n      }, 100);\n    }\n\n\n    closeDialogOnClickDok(dialog:HTMLDialogElement) {\n        this.bodyClickListener = this.renderer.listen(document.body, 'click', (event) => {\n        const dialogDimensions = dialog.getBoundingClientRect()\n        if (\n          event.clientX  dialogDimensions.right ||\n          event.clientY  dialogDimensions.bottom\n        ) {\n          dialog.close();\n          if(this.bodyClickListener) {\n            this.bodyClickListener();\n          }\n        }\n        });\n    }\n\n\n    closeDialog(selDialog:string) {\n      let dialog = document.getElementById(selDialog);\n      dialog.close();\n      let selectedMembersArray = this.searchMembersComponent?.selectedMembers;\n\n      if(selectedMembersArray && selectedMembersArray.length > 0 && this.searchMembersComponent) {\n        this.searchMembersComponent.selectedMembers = [];\n      }\n\n      if(this.bodyClickListener) {\n        this.bodyClickListener();\n      }\n    }\n\n\n    addMembersToChannel() {\n      let selectedMembersArray = this.searchMembersComponent?.selectedMembers;\n      let channel = Object.assign({}, this.channelService.channels[this.channelService.selectedChannel]);\n\n      if(selectedMembersArray) {\n        for (let i = 0; i = 0) {\n          return true\n        } else {\n          return false\n        }\n    }\n\n\n    scrollToBottom(): void {\n      if (this.channelChatsContainerRef) {\n        const containerElement = this.channelChatsContainerRef.nativeElement;\n        containerElement.scrollTop = containerElement.scrollHeight;\n        console.log('Die Höhe ist ', containerElement.scrollHeight);\n      }\n    }\n\n\n    setTextfieldStatus(event: boolean) {\n      this.textfieldOnUpload = event;\n    }\n}\n\n\n    \n\n    \n        \n  \n    \n      {{\n        this.channelService.channels[this.channelService.selectedChannel].name\n      }}\n    \n    \n  \n  \n    \n      \n        @if(this.channelService.channels[this.channelService.selectedChannel]) {\n        @for (member of\n        this.channelService.channels[this.channelService.selectedChannel].members\n        | slice:0:3; track $index) {\n        \n        }}\n      \n      \n        {{\n          this.channelService.channels[this.channelService.selectedChannel]\n            .members.length\n        }}\n      \n    \n    \n      \n        \n          Mitglieder\n          \n        \n        \n          @for (member of\n          this.channelService.channels[this.channelService.selectedChannel].members;\n          track member[0]; let index = $index) {\n          \n          }\n        \n        \n          \n          Mitglieder hinzufügen\n        \n      \n    \n    \n    \n      \n        \n          Leute hinzufügen\n          \n        \n        \n          {{\n            this.channelService.channels[this.channelService.selectedChannel]\n              .name\n          }}\n        \n        \n        \n          Hinzufügen\n        \n      \n    \n  \n\n\n\n\n\n  @if(this.channelService.selectedChannelChats[0]) { @for(chat of\n  this.channelService.selectedChannelChats; track index; let index = $index; let\n  last = $last) {\n\n  \n  @if(chat.chatId === this.channelService.selectedChannelChats[0].chatId ||\n  this.channelService.getDate(this.channelService.selectedChannelChats[index -\n  1].timestamp) !== this.channelService.getDate(chat.timestamp)) {\n  @if(this.channelService.isToday(chat.timestamp)) {\n  \n  } @else {\n  \n  }}\n\n  \n  @if(chat.allMessages[0] && chat.allMessages[0].member &&\n  chat.allMessages[0].member !== this.authService.uid) { @if(last) {\n  } @else {\n  \n  }} @else if(chat.allMessages[0] && chat.allMessages[0].member) { @if(last) {\n  } @else {\n  \n  }} }} @else if(this.channelService.selectedChannelChats.length === 0) {\n  \n    \n      {{\n        this.channelService.channels[this.channelService.selectedChannel].name\n      }}\n    \n    \n      Dieser Channel wurde neu erstellt. Das ist der Anfang des Channels\n      \n        {{\n          this.channelService.channels[this.channelService.selectedChannel].name\n        }}.\n    \n  \n  }\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{        this.channelService.channels[this.channelService.selectedChannel].name      }}                              @if(this.channelService.channels[this.channelService.selectedChannel]) {        @for (member of        this.channelService.channels[this.channelService.selectedChannel].members        | slice:0:3; track $index) {                }}                    {{          this.channelService.channels[this.channelService.selectedChannel]            .members.length        }}                                      Mitglieder                                    @for (member of          this.channelService.channels[this.channelService.selectedChannel].members;          track member[0]; let index = $index) {                    }                                    Mitglieder hinzufügen                                                  Leute hinzufügen                                    {{            this.channelService.channels[this.channelService.selectedChannel]              .name          }}                                  Hinzufügen                      @if(this.channelService.selectedChannelChats[0]) { @for(chat of  this.channelService.selectedChannelChats; track index; let index = $index; let  last = $last) {    @if(chat.chatId === this.channelService.selectedChannelChats[0].chatId ||  this.channelService.getDate(this.channelService.selectedChannelChats[index -  1].timestamp) !== this.channelService.getDate(chat.timestamp)) {  @if(this.channelService.isToday(chat.timestamp)) {    } @else {    }}    @if(chat.allMessages[0] && chat.allMessages[0].member &&  chat.allMessages[0].member !== this.authService.uid) { @if(last) {  } @else {    }} @else if(chat.allMessages[0] && chat.allMessages[0].member) { @if(last) {  } @else {    }} }} @else if(this.channelService.selectedChannelChats.length === 0) {            {{        this.channelService.channels[this.channelService.selectedChannel].name      }}              Dieser Channel wurde neu erstellt. Das ist der Anfang des Channels              {{          this.channelService.channels[this.channelService.selectedChannel].name        }}.        }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChannelBoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Chat.html":{"url":"classes/Chat.html","title":"class - Chat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Chat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/chat.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allMessages\n                            \n                            \n                                chatId\n                            \n                            \n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/chat.class.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/chat.class.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chatId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/chat.class.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/chat.class.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Message } from \"./message.class\";\n\nexport class Chat {\n    chatId: string;\n    timestamp: number;\n    allMessages: Message[];\n\n\n  constructor(obj?:any) {\n    this.chatId = obj ? obj.id : '';\n    this.timestamp = obj ? obj.timestamp : '';\n    this.allMessages = obj ? obj.messages: [''];\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatBoardComponent.html":{"url":"components/ChatBoardComponent.html","title":"component - ChatBoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatBoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/chat-board/chat-board.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-board\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                TextareaMainPageComponent\n                                WorkspaceUserProfilComponent\n                            MatDialogModule\n                                MessageLeftComponent\n                                MessageRightComponent\n                                TimeSeparatorComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./chat-board.component.html\n            \n\n\n\n            \n                styleUrl\n                ./chat-board.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                channelBoard\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                    Public\n                                chatService\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    \n                                    Optional\n                                privateChatsContainerRef\n                            \n                            \n                                privatTextarea\n                            \n                            \n                                textfieldOnUpload\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openShowProfilDialog\n                            \n                            \n                                scrollToBottom\n                            \n                            \n                                setTextfieldStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, userService: UserService, chatService: ChatService, authService: AuthService, channelService: ChannelService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/chat-board/chat-board.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openShowProfilDialog\n                        \n                    \n                \n            \n            \n                \nopenShowProfilDialog(memberId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/chat-board/chat-board.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                memberId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToBottom\n                        \n                    \n                \n            \n            \n                \nscrollToBottom()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/chat-board/chat-board.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTextfieldStatus\n                        \n                    \n                \n            \n            \n                \nsetTextfieldStatus(event: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/chat-board/chat-board.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/chat-board/chat-board.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelBoard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/chat-board/chat-board.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/chat-board/chat-board.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chatService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/chat-board/chat-board.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/chat-board/chat-board.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        privateChatsContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('privateChatsContainer')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/chat-board/chat-board.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        privatTextarea\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/chat-board/chat-board.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textfieldOnUpload\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/chat-board/chat-board.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/chat-board/chat-board.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { TextareaMainPageComponent } from '../shared/textarea-main-page/textarea-main-page.component';\nimport { WorkspaceUserProfilComponent } from '../shared/workspace-user-profil/workspace-user-profil.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { DialogShowProfilComponent } from '../dialogs/dialog-show-profil/dialog-show-profil.component';\nimport { ChannelService } from '../../services/channel.service';\nimport { UserService } from '../../services/user.service';\nimport { ChatService } from '../../services/chat.service';\nimport { AuthService } from '../../services/auth.service';\nimport { MessageLeftComponent } from '../shared/message-left/message-left.component';\nimport { MessageRightComponent } from '../shared/message-right/message-right.component';\nimport { TimeSeparatorComponent } from '../shared/time-separator/time-separator.component';\n\n@Component({\n  selector: 'app-chat-board',\n  standalone: true,\n  imports: [TextareaMainPageComponent, WorkspaceUserProfilComponent, MatDialogModule, MessageLeftComponent, MessageRightComponent, TimeSeparatorComponent],\n  templateUrl: './chat-board.component.html',\n  styleUrl: './chat-board.component.scss'\n})\nexport class ChatBoardComponent {\n\n  channelBoard = false;\n  textfieldOnUpload = false;\n  privatTextarea = true;\n\n  @ViewChild('privateChatsContainer') privateChatsContainerRef?: ElementRef;\n\n\n  constructor(public dialog: MatDialog, public userService: UserService, public chatService:ChatService, public authService: AuthService, public channelService: ChannelService) {}\n\n\n  openShowProfilDialog(memberId: string) {\n\n    let memberData = this.userService.users[this.userService.getUsersData(memberId)];\n    \n    this.dialog.open(DialogShowProfilComponent, {panelClass: ['dialog-bor-rad-round', 'user-profil-popup'], data: {\n        profilName: memberData.name,\n        profilRef: memberData.id,\n        profilEmail: memberData.email,\n        profilImg: memberData.photoURL,\n      }});\n  }\n\n\n  scrollToBottom(): void {\n    if (this.privateChatsContainerRef) {\n      const containerElement = this.privateChatsContainerRef?.nativeElement;\n      containerElement.scrollTop = containerElement.scrollHeight;\n    } else {\n      setTimeout(() => {\n        this.scrollToBottom();\n      }, 1);\n    }\n  }\n\n\n  setTextfieldStatus(event: boolean) {\n    this.textfieldOnUpload = event;\n  }\n}\n\n    \n\n    \n        \n  \n     -->\n    @if(chatService.currentChat.members.length === 2) {\n    } @else if(chatService.currentChat.members.length === 1) {\n    \n    }\n  \n\n\n\n\n\n  @if(this.chatService.messages.length == 0) {\n  \n    \n      @if(chatService.currentChat.members.length === 2) {\n      \n      \n        {{\n          this.userService.users[\n            this.userService.getUsersData(\n              this.userService.getPartnerId(chatService.currentChat.members)\n            )\n          ].name\n        }}\n      \n      } @else if(chatService.currentChat.members.length === 1) {\n      \n      \n        {{\n          this.userService.users[\n            this.userService.getUsersData(chatService.currentChat.members[0])\n          ].name + \" (Du)\"\n        }}\n      \n      }\n    \n    @if(chatService.currentChat.members.length === 2){\n    \n      Diese Unterhaltung findet nur zwischen\n      &#64;{{\n          this.userService.users[\n            this.userService.getUsersData(\n              this.userService.getPartnerId(chatService.currentChat.members)\n            )\n          ].name\n        }} und dir statt.\n    \n    } @else if(chatService.currentChat.members.length === 1){\n    \n      Dieser Raum ist nur für dich da. Mache dir Notizen, liste deine To-dos auf\n      oder bewahre Links und Dateien griffbereit auf. Du kannst hier auch gerne\n      Dinge mit dir selbst besprechen.\n    \n    }\n  \n  } @else { @for(message of this.chatService.messages; track index; let index =\n  $index; let last = $last) {\n  \n  \n  @if(message.timestamp === this.chatService.messages[0].timestamp ||\n  this.channelService.getDate(this.chatService.messages[index - 1].timestamp)\n  !== this.channelService.getDate(message.timestamp)) {\n  @if(this.channelService.isToday(message.timestamp)) {\n  \n  } @else {\n  \n  }}\n\n  \n  @if(message.member !== this.authService.uid) { @if(last) {\n  } @else {\n  \n  } } @else { @if(last) {\n  } @else {\n  \n  } } } }\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       -->    @if(chatService.currentChat.members.length === 2) {    } @else if(chatService.currentChat.members.length === 1) {        }    @if(this.chatService.messages.length == 0) {            @if(chatService.currentChat.members.length === 2) {                    {{          this.userService.users[            this.userService.getUsersData(              this.userService.getPartnerId(chatService.currentChat.members)            )          ].name        }}            } @else if(chatService.currentChat.members.length === 1) {                    {{          this.userService.users[            this.userService.getUsersData(chatService.currentChat.members[0])          ].name + \" (Du)\"        }}            }        @if(chatService.currentChat.members.length === 2){          Diese Unterhaltung findet nur zwischen      @{{          this.userService.users[            this.userService.getUsersData(              this.userService.getPartnerId(chatService.currentChat.members)            )          ].name        }} und dir statt.        } @else if(chatService.currentChat.members.length === 1){          Dieser Raum ist nur für dich da. Mache dir Notizen, liste deine To-dos auf      oder bewahre Links und Dateien griffbereit auf. Du kannst hier auch gerne      Dinge mit dir selbst besprechen.        }    } @else { @for(message of this.chatService.messages; track index; let index =  $index; let last = $last) {      @if(message.timestamp === this.chatService.messages[0].timestamp ||  this.channelService.getDate(this.chatService.messages[index - 1].timestamp)  !== this.channelService.getDate(message.timestamp)) {  @if(this.channelService.isToday(message.timestamp)) {    } @else {    }}    @if(message.member !== this.authService.uid) { @if(last) {  } @else {    } } @else { @if(last) {  } @else {    } } } }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatBoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmationOverlayComponent.html":{"url":"components/ConfirmationOverlayComponent.html","title":"component - ConfirmationOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmationOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/confirmation-overlay/confirmation-overlay.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirmation-overlay\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./confirmation-overlay.component.html\n            \n\n\n\n            \n                styleUrl\n                ./confirmation-overlay.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                overlayService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        overlayService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OverlayService\n\n                    \n                \n                \n                    \n                        Default value : inject(OverlayService)\n                    \n                \n                    \n                        \n                                Defined in src/app/confirmation-overlay/confirmation-overlay.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, Input  } from '@angular/core';\nimport { OverlayService } from '../services/overlay.service';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  selector: 'app-confirmation-overlay',\n  standalone: true,\n  imports: [NgClass],\n  templateUrl: './confirmation-overlay.component.html',\n  styleUrl: './confirmation-overlay.component.scss'\n})\nexport class ConfirmationOverlayComponent {\noverlayService: OverlayService = inject(OverlayService)\n\n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmationOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogAddChannelComponent.html":{"url":"components/DialogAddChannelComponent.html","title":"component - DialogAddChannelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogAddChannelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/dialogs/dialog-add-channel/dialog-add-channel.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-add-channel\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            MatDialogTitle\n                            MatDialogContent\n                            MatDialogActions\n                            MatDialogClose\n                                SearchMemberInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-add-channel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-add-channel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addMembersOpen\n                            \n                            \n                                channel\n                            \n                            \n                                    \n                                    Optional\n                                searchMembersComponent\n                            \n                            \n                                selectMerbersOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openAddMembers\n                            \n                            \n                                saveChannel\n                            \n                            \n                                setMembers\n                            \n                            \n                                toggleInput\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(channelService: ChannelService, userService: UserService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/dialogs/dialog-add-channel/dialog-add-channel.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMembers\n                        \n                    \n                \n            \n            \n                \nopenAddMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/dialogs/dialog-add-channel/dialog-add-channel.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChannel\n                        \n                    \n                \n            \n            \n                \nsaveChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/dialogs/dialog-add-channel/dialog-add-channel.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMembers\n                        \n                    \n                \n            \n            \n                \nsetMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/dialogs/dialog-add-channel/dialog-add-channel.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleInput\n                        \n                    \n                \n            \n            \n                \ntoggleInput(checked: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/dialogs/dialog-add-channel/dialog-add-channel.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                checked\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addMembersOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-add-channel/dialog-add-channel.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                \n                    \n                        Default value : new Channel()\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-add-channel/dialog-add-channel.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        searchMembersComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchMemberInputComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(SearchMemberInputComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-add-channel/dialog-add-channel.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectMerbersOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-add-channel/dialog-add-channel.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n  MatDialogTitle,\n  MatDialogContent,\n  MatDialogActions,\n  MatDialogClose,\n} from '@angular/material/dialog';\nimport { Channel } from '../../../models/channel.class';\nimport { ChannelService } from '../../../services/channel.service';\nimport { UserService } from '../../../services/user.service';\nimport { SearchMemberInputComponent } from '../../shared/search-member-input/search-member-input.component';\nimport { AuthService } from '../../../services/auth.service';\n\n\n@Component({\n  selector: 'app-dialog-add-channel',\n  standalone: true,\n  imports: [FormsModule, MatDialogTitle, MatDialogContent, MatDialogActions, MatDialogClose, SearchMemberInputComponent],\n  templateUrl: './dialog-add-channel.component.html',\n  styleUrl: './dialog-add-channel.component.scss'\n})\nexport class DialogAddChannelComponent {\n\n  @ViewChild(SearchMemberInputComponent) searchMembersComponent?: SearchMemberInputComponent;\n\n  channel: Channel = new Channel();\n  addMembersOpen = false;\n  selectMerbersOpen = false;\n\n\n  constructor(private channelService: ChannelService, private userService: UserService, private authService: AuthService){}\n\n  openAddMembers() {\n    this.addMembersOpen = true;\n  }\n\n\n  toggleInput(checked: boolean) {\n    this.selectMerbersOpen = checked;\n    console.log('selectMemberOpen is ', this.selectMerbersOpen)\n  }\n\n  saveChannel() {\n\n    this.setMembers();\n    console.log('Current channel is', this.channel);\n    this.channel.creator = this.authService.uid;\n\n    this.channelService.addChannel(this.channelService.toJSON(this.channel), 'channels');\n  }\n\n\n  setMembers() {\n    let allMembers = document.getElementById('all-members');\n    let selectedMembers = document.getElementById('selected-members');\n    let selectedMembersArray = this.searchMembersComponent?.selectedMembers;\n    this.channel.members = [];\n\n    if(allMembers && allMembers.checked == true) {\n      for (let i = 0; i \n    \n\n    \n        \n  \n    @if(!addMembersOpen) {\n    Channel erstellen\n    } @if(addMembersOpen) {\n    Leute hinzufügen\n    }\n    \n  \n  \n    @if(!addMembersOpen) {\n    \n      Channels dienen deinem Team zur Kommunikation. Am besten sollten sie\n      themenbezogen sein #marketing zum Beispiel.\n    \n    Channel-Name\n    \n      \n      @if(channelName.invalid && channelName.touched) {\n      Bitte vergebe einen Channel Namen\n      }\n    \n    Beschreibung (optional)} @if(addMembersOpen) {\n    \n      \n      Alle Mitglieder von Office Team hinzufügen\n    \n    \n      \n      Bestimmte Leute hinzufügen\n    \n    @if(selectMerbersOpen) {\n    \n    } }\n  \n  \n    @if(!addMembersOpen) {\n    \n      Weiter} @if(addMembersOpen) {\n      Erstellen}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if(!addMembersOpen) {    Channel erstellen    } @if(addMembersOpen) {    Leute hinzufügen    }            @if(!addMembersOpen) {          Channels dienen deinem Team zur Kommunikation. Am besten sollten sie      themenbezogen sein #marketing zum Beispiel.        Channel-Name                @if(channelName.invalid && channelName.touched) {      Bitte vergebe einen Channel Namen      }        Beschreibung (optional)} @if(addMembersOpen) {                Alle Mitglieder von Office Team hinzufügen                    Bestimmte Leute hinzufügen        @if(selectMerbersOpen) {        } }        @if(!addMembersOpen) {          Weiter} @if(addMembersOpen) {      Erstellen}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogAddChannelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogEditChannelComponent.html":{"url":"components/DialogEditChannelComponent.html","title":"component - DialogEditChannelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogEditChannelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/dialogs/dialog-edit-channel/dialog-edit-channel.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-edit-channel\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatDialogContent\n                            MatDialogActions\n                            MatDialogClose\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-edit-channel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-edit-channel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channel\n                            \n                            \n                                channelData\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                editNameOpen\n                            \n                            \n                                editTextOpen\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeChanges\n                            \n                            \n                                leaveChannel\n                            \n                            \n                                openChangesName\n                            \n                            \n                                openChangesText\n                            \n                            \n                                saveChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(channelService: ChannelService, authService: AuthService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/dialogs/dialog-edit-channel/dialog-edit-channel.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeChanges\n                        \n                    \n                \n            \n            \n                \ncloseChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/dialogs/dialog-edit-channel/dialog-edit-channel.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leaveChannel\n                        \n                    \n                \n            \n            \n                \nleaveChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/dialogs/dialog-edit-channel/dialog-edit-channel.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openChangesName\n                        \n                    \n                \n            \n            \n                \nopenChangesName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/dialogs/dialog-edit-channel/dialog-edit-channel.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openChangesText\n                        \n                    \n                \n            \n            \n                \nopenChangesText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/dialogs/dialog-edit-channel/dialog-edit-channel.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveChanges\n                        \n                    \n                \n            \n            \n                \nsaveChanges(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/dialogs/dialog-edit-channel/dialog-edit-channel.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-edit-channel/dialog-edit-channel.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.channelService.channels[this.channelService.selectedChannel]\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-edit-channel/dialog-edit-channel.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-edit-channel/dialog-edit-channel.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editNameOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-edit-channel/dialog-edit-channel.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTextOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-edit-channel/dialog-edit-channel.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-edit-channel/dialog-edit-channel.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  MatDialogContent,\n  MatDialogActions,\n  MatDialogClose,\n} from '@angular/material/dialog';\nimport { ChannelService } from '../../../services/channel.service';\nimport { Channel } from '../../../models/channel.class';\nimport { AuthService } from '../../../services/auth.service';\nimport { UserService } from '../../../services/user.service';\n\n\n@Component({\n  selector: 'app-dialog-edit-channel',\n  standalone: true,\n  imports: [MatDialogContent, MatDialogActions, MatDialogClose],\n  templateUrl: './dialog-edit-channel.component.html',\n  styleUrl: './dialog-edit-channel.component.scss'\n})\nexport class DialogEditChannelComponent {\n\n  editNameOpen = false;\n  editTextOpen = false;\n  channelData = this.channelService.channels[this.channelService.selectedChannel];\n  channel: Channel;\n\n  constructor(public channelService: ChannelService, private authService: AuthService, public userService: UserService ) {\n    this.channel = Object.assign({}, this.channelService.channels[this.channelService.selectedChannel]);\n  }\n\n  openChangesName() {\n    this.editNameOpen = true;\n  }\n\n  openChangesText() {\n    this.editTextOpen = true;\n  }\n\n  closeChanges() {\n    this.editNameOpen = false;\n    this.editTextOpen = false;\n  }\n  \n\n  saveChanges(field:string) {\n    let changedName = document.getElementById('channelName');\n    let changedText = document.getElementById('description');\n\n    \n    if(field == 'name') {\n      this.channel.name = changedName.value;\n    } else if(field == 'text') {\n      this.channel.description = changedText.value;\n    }\n    \n    this.channelService.updateChannel(this.channel);\n  }\n\n\n  leaveChannel() {\n    if(this.authService.uid) {\n      let index = this.channel.members?.indexOf(this.authService.uid)\n      \n      if(index) {\n        this.channel.members?.splice(index, 1);\n        this.channelService.updateChannel(this.channel);\n      }\n    }\n  }\n\n  \n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ channelData.name }}\n      \n    \n    \n  \n  \n    \n      \n        Channel-Name@if(!editNameOpen) {\n        \n          \n          Bearbeiten\n        \n        } @if(editNameOpen) {\n        \n          \n          Speichern\n        \n        }\n      \n      @if(!editNameOpen) {\n      \n        {{ channelData.name }}\n      \n      } @if(editNameOpen) {}\n    \n    \n      \n        Beschreibung @if(!editTextOpen) {\n        \n          \n          Bearbeiten\n        \n        } @if(editTextOpen) {\n        \n          \n          Speichern\n        \n        }\n      \n      @if(!editTextOpen) {\n      \n        {{ channelData.description }}\n      \n      } @if(editTextOpen) {}\n      \n      Erstellt von\n      \n        {{\n          this.userService.users[\n            this.userService.getUsersData(this.channelData.creator)\n          ].name\n        }}\n      \n    \n  \n  \n    Channel verlassen\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ channelData.name }}                                    Channel-Name@if(!editNameOpen) {                            Bearbeiten                } @if(editNameOpen) {                            Speichern                }            @if(!editNameOpen) {              {{ channelData.name }}            } @if(editNameOpen) {}                      Beschreibung @if(!editTextOpen) {                            Bearbeiten                } @if(editTextOpen) {                            Speichern                }            @if(!editTextOpen) {              {{ channelData.description }}            } @if(editTextOpen) {}            Erstellt von              {{          this.userService.users[            this.userService.getUsersData(this.channelData.creator)          ].name        }}                  Channel verlassen  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogEditChannelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogShowProfilComponent.html":{"url":"components/DialogShowProfilComponent.html","title":"component - DialogShowProfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogShowProfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/dialogs/dialog-show-profil/dialog-show-profil.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-show-profil\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatDialogTitle\n                            MatDialogContent\n                            MatDialogActions\n                            MatDialogClose\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-show-profil.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-show-profil.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                usersService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                startPrivateChat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UserService, chatService: ChatService, authService: AuthService, evtSvc: EventService, data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/dialogs/dialog-show-profil/dialog-show-profil.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        evtSvc\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        startPrivateChat\n                        \n                    \n                \n            \n            \n                \nstartPrivateChat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/dialogs/dialog-show-profil/dialog-show-profil.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-show-profil/dialog-show-profil.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        usersService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-show-profil/dialog-show-profil.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogTitle,\n  MatDialogContent,\n  MatDialogActions,\n  MatDialogClose,\n} from '@angular/material/dialog';\nimport { UserService } from '../../../services/user.service';\nimport { ChatService } from '../../../services/chat.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { EventService } from '../../../services/event.service';\nimport { timestamp } from 'rxjs';\n\n@Component({\n  selector: 'app-dialog-show-profil',\n  standalone: true,\n  imports: [MatDialogTitle, MatDialogContent, MatDialogActions, MatDialogClose],\n  templateUrl: './dialog-show-profil.component.html',\n  styleUrl: './dialog-show-profil.component.scss'\n})\nexport class DialogShowProfilComponent {\n\n  constructor(public usersService: UserService, private chatService: ChatService, private authService: AuthService, private evtSvc: EventService, @Inject(MAT_DIALOG_DATA) public data: {\n        profilName: string,\n        profilRef: string,\n        profilEmail: string,\n        profilImg: string,\n      }) { }\n\n\n  startPrivateChat() {\n    if(!this.chatService.searchForMemberInChats(this.data.profilRef)) {\n\n      if(this.chatService.unsubPrivateChatMessages) {\n        this.chatService.unsubPrivateChatMessages();\n      }\n      this.chatService.startNewPrivateChat({members: [this.authService.uid, this.data.profilRef], timestamp: Date.now()},  'chats');\n    } else {\n      if(this.chatService.unsubPrivateChatMessages) {\n        this.chatService.unsubPrivateChatMessages();\n      }\n      this.chatService.selChatIndex = this.chatService.getSelChatIndex(this.data.profilRef);\n      this.chatService.selChatRef = this.chatService.privateChats[this.chatService.selChatIndex].chatId;\n      this.chatService.currentChat = this.chatService.privateChats[this.chatService.selChatIndex];\n      this.chatService.getPrivateChatMessages(this.chatService.currentChat);\n\n    this.evtSvc.PrivateChatModus();\n    }\n  }\n\n\n\n}\n\n    \n\n    \n        \n  \n    Profil\n    \n  \n  \n    \n      \n    \n    \n      {{ data.profilName }}\n    \n    \n      E-Mail-Adresse\n      {{ data.profilEmail }}\n    \n  \n  \n    Nachricht\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Profil                                {{ data.profilName }}              E-Mail-Adresse      {{ data.profilEmail }}            Nachricht  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogShowProfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogUserMenuComponent.html":{"url":"components/DialogUserMenuComponent.html","title":"component - DialogUserMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogUserMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/dialogs/dialog-user-menu/dialog-user-menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-user-menu\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatDialogContent\n                            MatDialogActions\n                            MatDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-user-menu.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-user-menu.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                openUserProfilDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/dialogs/dialog-user-menu/dialog-user-menu.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/dialogs/dialog-user-menu/dialog-user-menu.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserProfilDialog\n                        \n                    \n                \n            \n            \n                \nopenUserProfilDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/dialogs/dialog-user-menu/dialog-user-menu.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-user-menu/dialog-user-menu.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-user-menu/dialog-user-menu.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-user-menu/dialog-user-menu.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MatDialogContent,\n  MatDialogActions,\n} from '@angular/material/dialog';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { DialogUserProfilComponent } from '../dialog-user-profil/dialog-user-profil.component';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-dialog-user-menu',\n  standalone: true,\n  imports: [MatDialogContent, MatDialogActions, MatDialogModule],\n  templateUrl: './dialog-user-menu.component.html',\n  styleUrl: './dialog-user-menu.component.scss'\n})\nexport class DialogUserMenuComponent {\n  dialogRef: MatDialogRef | undefined;\n  constructor(public dialog: MatDialog, public authService: AuthService) { }\n\n\n  openUserProfilDialog() {\n    if (window.innerWidth > 544) {\n        this.dialog.open(DialogUserProfilComponent, { position: { right: '24px', top: '80px' }, panelClass: 'dialog-bor-rad-corner' });\n    } else if (window.innerWidth \n    \n\n    \n        \n  Profil\n  \n    Log out\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Profil      Log out  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogUserMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogUserProfilComponent.html":{"url":"components/DialogUserProfilComponent.html","title":"component - DialogUserProfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogUserProfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/dialogs/dialog-user-profil/dialog-user-profil.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-user-profil\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatDialogContent\n                            MatDialogActions\n                            MatDialogClose\n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-user-profil.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-user-profil.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                displayName\n                            \n                            \n                                editProfilOpen\n                            \n                            \n                                email\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeEditProfil\n                            \n                            \n                                editProfil\n                            \n                            \n                                updateInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/dialogs/dialog-user-profil/dialog-user-profil.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeEditProfil\n                        \n                    \n                \n            \n            \n                \ncloseEditProfil()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/dialogs/dialog-user-profil/dialog-user-profil.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editProfil\n                        \n                    \n                \n            \n            \n                \neditProfil()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/dialogs/dialog-user-profil/dialog-user-profil.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateInfo\n                        \n                    \n                \n            \n            \n                \nupdateInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/dialogs/dialog-user-profil/dialog-user-profil.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-user-profil/dialog-user-profil.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-user-profil/dialog-user-profil.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editProfilOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-user-profil/dialog-user-profil.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/dialogs/dialog-user-profil/dialog-user-profil.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {\n  MatDialogContent,\n  MatDialogActions,\n  MatDialogClose,\n} from '@angular/material/dialog';\nimport { AuthService } from '../../../services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-dialog-user-profil',\n  standalone: true,\n  imports: [MatDialogContent, MatDialogActions, MatDialogClose, CommonModule, FormsModule],\n  templateUrl: './dialog-user-profil.component.html',\n  styleUrl: './dialog-user-profil.component.scss'\n})\nexport class DialogUserProfilComponent {\n  constructor(public authService: AuthService) {\n\n  }\n\n  editProfilOpen = false;\n  displayName: string = '';\n  email: string = '';\n\n  editProfil() {\n    this.editProfilOpen = true;\n    this.displayName = this.authService.currentUser?.name|| '';\n    this.email = this.authService.currentUser?.email || '';\n \n  }\n\n  closeEditProfil() {\n    this.editProfilOpen = false;\n  }\n\n  updateInfo() {\n    console.log(this.email)\n    this.authService.updateInfo(this.displayName, this.email)\n  }\n}\n\n    \n\n    \n        \n  \n    @if(!editProfilOpen) {\n    Profil\n    } @if(editProfilOpen) {\n    Dein Profil bearbeiten\n    }\n    \n  \n  \n    \n      \n    \n    @if(!editProfilOpen) {\n    \n      \n        {{ this.authService.currentUser?.name }}\n        \n          \n          Bearbeiten\n        \n      \n    \n    \n      E-Mail-Adresse\n      {{ this.authService.currentUser?.email }}\n    \n    } @if(editProfilOpen) {\n    \n      \n        Vollständiger Name\n      \n      \n      \n        E-Mail-Adresse\n      \n      \n    \n    }\n  \n  @if(editProfilOpen) {\n    \n      Abbrechen\n      Speichern\n     }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if(!editProfilOpen) {    Profil    } @if(editProfilOpen) {    Dein Profil bearbeiten    }                          @if(!editProfilOpen) {                  {{ this.authService.currentUser?.name }}                            Bearbeiten                            E-Mail-Adresse      {{ this.authService.currentUser?.email }}        } @if(editProfilOpen) {                  Vollständiger Name                          E-Mail-Adresse                    }    @if(editProfilOpen) {          Abbrechen      Speichern     }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogUserProfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditMsgTextareaComponent.html":{"url":"components/EditMsgTextareaComponent.html","title":"component - EditMsgTextareaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditMsgTextareaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/shared/edit-msg-textarea/edit-msg-textarea.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-msg-textarea\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            PickerComponent\n                            MatMenuModule\n                            EmojiComponent\n                                EditMsgTextareaComponent\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./edit-msg-textarea.component.html\n            \n\n\n\n            \n                styleUrl\n                ./edit-msg-textarea.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEmoji\n                            \n                            \n                                cancleUpdateMsg\n                            \n                            \n                                deleteFile\n                            \n                            \n                                updateMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                messageIndex\n                            \n                            \n                                onChannelBoard\n                            \n                            \n                                onPrivateChat\n                            \n                            \n                                onThreadBoard\n                            \n                            \n                                uploadedFile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeEditMsg\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(channelService: ChannelService, chatService: ChatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/shared/edit-msg-textarea/edit-msg-textarea.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/edit-msg-textarea/edit-msg-textarea.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messageIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/edit-msg-textarea/edit-msg-textarea.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChannelBoard\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/edit-msg-textarea/edit-msg-textarea.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onPrivateChat\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/edit-msg-textarea/edit-msg-textarea.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onThreadBoard\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/edit-msg-textarea/edit-msg-textarea.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uploadedFile\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/edit-msg-textarea/edit-msg-textarea.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeEditMsg\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/edit-msg-textarea/edit-msg-textarea.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEmoji\n                        \n                    \n                \n            \n            \n                \naddEmoji($event: EmojiEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/edit-msg-textarea/edit-msg-textarea.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        EmojiEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancleUpdateMsg\n                        \n                    \n                \n            \n            \n                \ncancleUpdateMsg(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/edit-msg-textarea/edit-msg-textarea.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFile\n                        \n                    \n                \n            \n            \n                \ndeleteFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/edit-msg-textarea/edit-msg-textarea.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMessage\n                        \n                    \n                \n            \n            \n                \nupdateMessage(ngForm: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/edit-msg-textarea/edit-msg-textarea.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ngForm\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/edit-msg-textarea/edit-msg-textarea.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { PickerComponent } from '@ctrl/ngx-emoji-mart';\nimport { MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\nimport { EmojiComponent, EmojiEvent } from '@ctrl/ngx-emoji-mart/ngx-emoji';\nimport { ChannelService } from '../../../services/channel.service';\nimport { Message } from '../../../models/message.class';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { ChatService } from '../../../services/chat.service';\n\n@Component({\n  selector: 'app-edit-msg-textarea',\n  standalone: true,\n  imports: [PickerComponent, MatMenuModule, EmojiComponent, EditMsgTextareaComponent, FormsModule],\n  templateUrl: './edit-msg-textarea.component.html',\n  styleUrl: './edit-msg-textarea.component.scss'\n})\nexport class EditMsgTextareaComponent {\n\n  @Input() messageIndex: number = 0;\n  @Input() message: string = '';\n  @Input() onChannelBoard: boolean = false;\n  @Input() onPrivateChat: boolean = false;\n  @Input() onThreadBoard: boolean = false;  \n  @Input() uploadedFile: string[] = [];\n\n  @Output() closeEditMsg = new EventEmitter();\n\n\n  constructor(public channelService: ChannelService, private chatService: ChatService) {}\n\n\n  updateMessage(ngForm: NgForm) {\n    let messageObj;\n    if(this.onPrivateChat !== true) {\n      messageObj = Object.assign({}, this.channelService.selectedChannelChats[this.channelService.selChatIndex].allMessages[this.messageIndex]);\n    } else {\n      messageObj = this.chatService.messages[this.messageIndex];\n    }\n\n    if (ngForm.valid && this.message.trim() !== '') {\n      messageObj.message = this.message;\n      messageObj.uploadedFile = this.uploadedFile;\n\n      if(this.onPrivateChat !== true) {\n        this.channelService.updateMessage(messageObj);\n      } else {\n        this.chatService.updateMessage(messageObj);\n      }\n\n      ngForm.resetForm();\n      this.closeEditMsg.emit(false);\n    } else {\n        console.log('Ungültige Eingabe');\n    }\n  }\n\n\n  cancleUpdateMsg(event: Event) {\n    event.preventDefault()\n\n    this.closeEditMsg.emit(false);\n  }\n\n  addEmoji($event: EmojiEvent) {\n    if($event.emoji.native)\n    this.message += $event.emoji.native;\n  }\n\n  deleteFile() {\n    // mit der docRef file vom Storage löschen!\n\n    this.uploadedFile = [];\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      @if(uploadedFile[0]) {\n      \n        {{\n          uploadedFile[0]\n        }}\n        \n      \n      }\n    \n    \n      \n        \n        \n          \n        \n      \n      \n        Abbrechen\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                @if(uploadedFile[0]) {              {{          uploadedFile[0]        }}                    }                                                                    Abbrechen                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditMsgTextareaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventService.html":{"url":"injectables/EventService.html","title":"injectable - EventService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/event.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channelOpenStatus\n                            \n                            \n                                    Private\n                                newChatOpenStatus\n                            \n                            \n                                    Private\n                                privateChatOpenStatus\n                            \n                            \n                                    Private\n                                threadOpenStatus\n                            \n                            \n                                    Private\n                                workspaceOpenStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ChannelModus\n                            \n                            \n                                getChannelOpenStatus\n                            \n                            \n                                getNewChatOpenStatus\n                            \n                            \n                                getPrivateChatOpenStatus\n                            \n                            \n                                getThreadOpenStatus\n                            \n                            \n                                getWorkspaceOpenStatus\n                            \n                            \n                                openChannel\n                            \n                            \n                                openNewChat\n                            \n                            \n                                openPrivateChat\n                            \n                            \n                                openThread\n                            \n                            \n                                openWorkspace\n                            \n                            \n                                PrivateChatModus\n                            \n                            \n                                ThreadModus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/event.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ChannelModus\n                        \n                    \n                \n            \n            \n                \nChannelModus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChannelOpenStatus\n                        \n                    \n                \n            \n            \n                \ngetChannelOpenStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNewChatOpenStatus\n                        \n                    \n                \n            \n            \n                \ngetNewChatOpenStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPrivateChatOpenStatus\n                        \n                    \n                \n            \n            \n                \ngetPrivateChatOpenStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getThreadOpenStatus\n                        \n                    \n                \n            \n            \n                \ngetThreadOpenStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWorkspaceOpenStatus\n                        \n                    \n                \n            \n            \n                \ngetWorkspaceOpenStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openChannel\n                        \n                    \n                \n            \n            \n                \nopenChannel(state: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNewChat\n                        \n                    \n                \n            \n            \n                \nopenNewChat(state: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPrivateChat\n                        \n                    \n                \n            \n            \n                \nopenPrivateChat(state: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openThread\n                        \n                    \n                \n            \n            \n                \nopenThread(state: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWorkspace\n                        \n                    \n                \n            \n            \n                \nopenWorkspace(state: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PrivateChatModus\n                        \n                    \n                \n            \n            \n                \nPrivateChatModus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ThreadModus\n                        \n                    \n                \n            \n            \n                \nThreadModus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channelOpenStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/event.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        newChatOpenStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/event.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        privateChatOpenStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/event.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        threadOpenStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/event.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        workspaceOpenStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/event.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  private threadOpenStatus = new BehaviorSubject(true);\n  private channelOpenStatus = new BehaviorSubject(true);\n  private privateChatOpenStatus = new BehaviorSubject(false);\n  private newChatOpenStatus = new BehaviorSubject(false);\n  private workspaceOpenStatus = new BehaviorSubject(true);\n\n\n  constructor() { }\n\n  // Thread Status\n\n  getThreadOpenStatus() {\n    return this.threadOpenStatus.asObservable();\n  }\n\n  openThread(state:boolean) {\n    this.threadOpenStatus.next(state);\n  }\n\n\n  // Channel Status\n\n  getChannelOpenStatus() {\n    return this.channelOpenStatus.asObservable();\n  }\n\n  openChannel(state:boolean) {\n    this.channelOpenStatus.next(state);\n  }\n\n\n  // Private Chat Status\n\n  getPrivateChatOpenStatus() {\n    return this.privateChatOpenStatus.asObservable();\n  }\n\n  openPrivateChat(state:boolean) {\n    this.privateChatOpenStatus.next(state);\n  }\n\n\n\n  // New Chat Status\n\n  getNewChatOpenStatus() {\n    return this.newChatOpenStatus.asObservable();\n  }\n\n  openNewChat(state:boolean) {\n    this.newChatOpenStatus.next(state);\n  }\n\n\n  // Workspace Status\n\n  getWorkspaceOpenStatus() {\n    return this.workspaceOpenStatus.asObservable();\n  }\n\n  openWorkspace(state:boolean) {\n    this.workspaceOpenStatus.next(state);\n  }\n\n\n\n  // PrivateChat Windows\n\n    PrivateChatModus() {\n      this.openPrivateChat(true);\n      this.openChannel(false);\n      this.openNewChat(false);\n      this.openThread(false);\n  \n      if (window.innerWidth  792 && window.innerWidth  792 && window.innerWidth \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileUploadService.html":{"url":"injectables/FileUploadService.html","title":"injectable - FileUploadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileUploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/fileupload.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fileSelectedSubject\n                            \n                            \n                                    Private\n                                filesToUpload\n                            \n                            \n                                    Private\n                                isUploading\n                            \n                            \n                                    Private\n                                randomPath\n                            \n                            \n                                    Private\n                                storage\n                            \n                            \n                                    Private\n                                storageRef\n                            \n                            \n                                    Public\n                                uploadedFiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chooseFile\n                            \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                getUploadedFiles\n                            \n                            \n                                    Private\n                                    Async\n                                uploadFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/fileupload.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chooseFile\n                        \n                    \n                \n            \n            \n                \nchooseFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/fileupload.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/fileupload.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUploadedFiles\n                        \n                    \n                \n            \n            \n                \ngetUploadedFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/fileupload.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        uploadFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/fileupload.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fileSelectedSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/fileupload.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filesToUpload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/fileupload.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isUploading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/fileupload.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        randomPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Math.random().toString(36).substring(2)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/fileupload.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getStorage()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/fileupload.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storageRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ref(this.storage, this.randomPath)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/fileupload.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        uploadedFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/fileupload.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { getDownloadURL, getStorage, ref, uploadBytesResumable, deleteObject } from \"firebase/storage\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileUploadService {\n  private filesToUpload: File[] = [];\n  public uploadedFiles: { file: File, docRef: any, downloadURL: string }[] = [];\n  private fileSelectedSubject: Subject = new Subject();\n  private storage = getStorage();\n  private randomPath = Math.random().toString(36).substring(2);\n  private storageRef = ref(this.storage, this.randomPath);\n  private isUploading: boolean = false;\n\n  constructor() { }\n\n  chooseFile() {\n    if(this.uploadedFiles.length === 0) {\n    const fileInput = document.createElement('input');\n    fileInput.type = 'file';\n    fileInput.addEventListener('change', async (event) => {\n      const target = event.target as HTMLInputElement;\n      if (target.files && target.files.length > 0) {\n        // Leere die Liste der zuvor hochgeladenen Dateien\n        this.filesToUpload = [];\n        \n        // Füge die neu ausgewählten Dateien hinzu\n        const chosenFiles: File[] = Array.from(target.files);\n        this.filesToUpload.push(...chosenFiles);\n        \n        // Benachrichtige über die Auswahl neuer Dateien\n        this.fileSelectedSubject.next(this.filesToUpload);\n        \n        // Starte den Upload automatisch nach Auswahl der Datei(en)\n        await this.uploadFiles();\n        console.log('so sieht die file aus', this.uploadedFiles);\n      }\n    });\n    fileInput.click();\n  }\n  }\n  \n\n  private async uploadFiles() {\n    if (this.filesToUpload.length === 0 || this.isUploading) return;\n\n    this.isUploading = true;\n\n    const uploadTasks = this.filesToUpload.map(async (file) => {\n      const childRef = ref(this.storageRef, file.name);\n      const snapshot = await uploadBytesResumable(childRef, file);\n      const downloadURL = await getDownloadURL(snapshot.ref);\n      this.uploadedFiles.push({ file, docRef: snapshot.ref, downloadURL });\n    });\n\n    try {\n      await Promise.all(uploadTasks);\n      // Alle Dateien erfolgreich hochgeladen\n      console.log('Alle Dateien wurden erfolgreich hochgeladen');\n    } catch (error) {\n      // Fehler beim Hochladen der Dateien\n      console.error('Fehler beim Hochladen der Dateien:', error);\n    } finally {\n      this.isUploading = false;\n    }\n  }\n\n  getUploadedFiles(): { file: File, docRef: any, downloadURL: string }[] {\n    return this.uploadedFiles;\n  }\n\n  \n\n  // async deleteFile(fileIndex: number) {\n  //   const fileToDelete = this.uploadedFiles[fileIndex];\n  //   if (!fileToDelete) return; // Überprüfen, ob das Index valide ist\n  //   try {\n  //     await deleteObject(fileToDelete.docRef);\n  //     this.uploadedFiles.splice(fileIndex, 1);\n  //     console.log(this.uploadFiles);\n  //   } catch (error) {\n  //     console.error('Fehler beim Löschen der Datei:', error);\n  //   }\n  // }\n\n  async deleteFile() {\n    const fileToDelete = this.uploadedFiles[0];\n    if (!fileToDelete) return; // Überprüfen, ob das Index valide ist\n    try {\n      await deleteObject(fileToDelete.docRef);\n      // this.uploadedFiles.splice(fileIndex, 1);\n      this.uploadedFiles.splice(0, 1);\n      console.log(this.uploadFiles);\n    } catch (error) {\n      console.error('Fehler beim Löschen der Datei:', error);\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/starting-page/forgot-password/forgot-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgIf\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forgot-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                email\n                            \n                            \n                                loginService\n                            \n                            \n                                myForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    emailError\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, renderer: Renderer2, el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/starting-page/forgot-password/forgot-password.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/forgot-password/forgot-password.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/forgot-password/forgot-password.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/forgot-password/forgot-password.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginService\n\n                    \n                \n                \n                    \n                        Default value : inject(LoginService)\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/forgot-password/forgot-password.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/forgot-password/forgot-password.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        emailError\n                    \n                \n\n                \n                    \n                        getemailError()\n                    \n                \n                            \n                                \n                                    Defined in src/app/starting-page/forgot-password/forgot-password.component.ts:34\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Renderer2, inject } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { NgIf } from '@angular/common';\nimport { LoginService } from '../../services/login.service';\n@Component({\n  selector: 'app-forgot-password',\n  standalone: true,\n  imports: [NgIf, ReactiveFormsModule],\n  templateUrl: './forgot-password.component.html',\n  styleUrl: './forgot-password.component.scss'\n})\nexport class ForgotPasswordComponent {\n  myForm: FormGroup;\n  authService: AuthService = inject(AuthService);\n  loginService: LoginService = inject(LoginService)\n  constructor(private fb: FormBuilder, private renderer: Renderer2,\n    private el: ElementRef,){\n\n    \n    this.myForm = this.fb.group({\n      email: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/)]],\n    });\n  }\n  email:string =''\n  onSubmit() {\n   \n    if (this.myForm.valid) {\n      this.email = this.myForm.value['email'];\n      this.authService.sendPasswortReset(this.email)\n    }\n  }\n\n  get emailError() {\n    const emailControl = this.myForm.get('email');\n    const value = emailControl?.value as string;\n    if (emailControl?.hasError('required')) {\n      return '*Bitte geben Sie Ihre E-Mail-Adresse ein';\n    }\n    if (emailControl?.hasError('pattern')) {\n      return '*Diese E-Mail-Adresse ist leider ungültig';\n    }\n    return '';\n  }\n}\n\n    \n\n    \n        \n    Passwort zurücksetzen\n    Bitte geben Sie Ihre E-Mail-Adresse ein.\n\n    \n        \n        \n    \n    \n        {{ emailError }}\n    \n\n    Wir senden Ihnen eine E-Mail, über die \n        Sie Ihr Passwort ändern können.\n   \n\n\n\n\n\n    \n        E-Mail senden\n    \n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Passwort zurücksetzen    Bitte geben Sie Ihre E-Mail-Adresse ein.                                    {{ emailError }}        Wir senden Ihnen eine E-Mail, über die         Sie Ihr Passwort ändern können.               E-Mail senden        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GuestUserService.html":{"url":"injectables/GuestUserService.html","title":"injectable - GuestUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GuestUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/guest-user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                GUEST_USER_KEY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGuestUser\n                            \n                            \n                                    Private\n                                    Async\n                                deleteChannelsByUser\n                            \n                            \n                                    Private\n                                    Async\n                                deleteChatsByUser\n                            \n                            \n                                    Private\n                                    Async\n                                deleteMessagesByUser\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOldGuests\n                            \n                            \n                                    Private\n                                    Async\n                                deleteReactionsByUser\n                            \n                            \n                                    Async\n                                isGuestUserOnFirebase\n                            \n                            \n                                    Private\n                                    Async\n                                removeUserFromChannels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/guest-user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGuestUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGuestUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/guest-user.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        deleteChannelsByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteChannelsByUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/guest-user.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        deleteChatsByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteChatsByUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/guest-user.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        deleteMessagesByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMessagesByUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/guest-user.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteOldGuests\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOldGuests()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/guest-user.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        deleteReactionsByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteReactionsByUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/guest-user.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isGuestUserOnFirebase\n                        \n                    \n                \n            \n            \n                \n                        \n                    isGuestUserOnFirebase(guestUserId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/guest-user.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                guestUserId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        removeUserFromChannels\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeUserFromChannels(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/guest-user.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        GUEST_USER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'guest_user_id'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/guest-user.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Firestore, collection, deleteDoc, doc, getDoc, getDocs, query, updateDoc, where } from '@angular/fire/firestore';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuestUserService {\n\n  private readonly GUEST_USER_KEY = 'guest_user_id';\n\n  constructor(private firestore: Firestore, private authService: AuthService) { }\n\n  async createGuestUser(): Promise {\n    let guestUserId = localStorage.getItem(this.GUEST_USER_KEY);\n    if (guestUserId) { this.authService.loginGuest(guestUserId) }\n    if (!guestUserId) {\n      // Wenn keine Gastbenutzer-ID im Local Storage vorhanden ist, generieren Sie eine neue\n      guestUserId = await this.authService.registerGuest();\n      localStorage.setItem(this.GUEST_USER_KEY, guestUserId);\n    } else {\n      // Überprüfen, ob der Gastbenutzer noch auf Firebase vorhanden ist\n      const isGuestUserExisting = await this.isGuestUserOnFirebase(guestUserId);\n      if (!isGuestUserExisting) {\n        // Wenn der Gastbenutzer nicht auf Firebase vorhanden ist, registrieren Sie ihn erneut\n        guestUserId = await this.authService.registerGuest();\n        localStorage.setItem(this.GUEST_USER_KEY, guestUserId);\n      }\n    }\n    return guestUserId;\n  }\n\n  async isGuestUserOnFirebase(guestUserId: string): Promise {\n    const userDocRef = doc(this.firestore, 'users', guestUserId);\n    console.log('user exists on firebase')\n    const docSnapshot = await getDoc(userDocRef);\n    return docSnapshot.exists();\n  }\n\n\n\n  public async deleteOldGuests(): Promise {\n\n    const twentyFourHoursAgo = new Date(Date.now() - 2 * 60 * 1000); // Zeitpunkt vor 24 Stunden\n\n\n    const querySnapshot = await getDocs(collection(this.firestore, 'users'));\n    const deletionPromises: Promise[] = [];\n\n    querySnapshot.forEach(async (doc) => {\n      const userData = doc.data();\n      const userId = doc.id;\n\n      const createdAtDate = new Date(userData['createdAt']);\n      if (\n        userData?.['email']?.endsWith('@guest.de') &&\n        createdAtDate  {\n    const querySnapshot = await getDocs(query(collection(this.firestore, 'channels'), where('creator', '==', userId)));\n\n    const deletionPromises: Promise[] = [];\n\n    querySnapshot.forEach((doc) => {\n      const deletionPromise = deleteDoc(doc.ref);\n      deletionPromises.push(deletionPromise);\n    });\n\n    // Warten, bis alle Löschvorgänge abgeschlossen sind\n    await Promise.all(deletionPromises);\n  }\n\n  private async deleteChatsByUser(userId: string): Promise {\n    const querySnapshot = await getDocs(query(collection(this.firestore, 'chats'), where('members', 'array-contains', userId)));\n\n    const deletionPromises: Promise[] = [];\n\n    querySnapshot.forEach((doc) => {\n      const deletionPromise = deleteDoc(doc.ref);\n      deletionPromises.push(deletionPromise);\n    });\n\n    // Warten, bis alle Löschvorgänge abgeschlossen sind\n    await Promise.all(deletionPromises);\n  }\n\n  private async removeUserFromChannels(userId: string): Promise {\n    const querySnapshot = await getDocs(query(collection(this.firestore, 'channels'), where('members', 'array-contains', userId)));\n\n    const updatePromises: Promise[] = [];\n\n    querySnapshot.forEach((doc) => {\n      const channelRef = doc.ref;\n      const members = doc.data()['members'].filter((memberId: string) => memberId !== userId); // Entfernen Sie die Benutzer-ID aus dem Array\n      const updatePromise = updateDoc(channelRef, { members }); // Aktualisieren Sie das Dokument, um die Benutzer-ID zu entfernen\n      updatePromises.push(updatePromise);\n    });\n\n    // Warten, bis alle Aktualisierungsvorgänge abgeschlossen sind\n    await Promise.all(updatePromises);\n  }\n\n  private async deleteMessagesByUser(userId: string): Promise {\n    const querySnapshot = await getDocs(query(collection(this.firestore, 'channels'), where('members', 'array-contains', userId)));\n\n    const deletionPromises: Promise[] = [];\n\n    querySnapshot.forEach(async (doc) => {\n      const channelId = doc.id;\n      const chatQuerySnapshot = await getDocs(collection(this.firestore, `channels/${channelId}/chats`));\n\n      chatQuerySnapshot.forEach(async (chatDoc) => {\n        const messagesCollection = collection(this.firestore, `channels/${channelId}/chats/${chatDoc.id}/messages`);\n        const messageQuerySnapshot = await getDocs(query(messagesCollection, where('member', '==', userId)));\n\n        messageQuerySnapshot.forEach((messageDoc) => {\n          const deletionPromise = deleteDoc(messageDoc.ref);\n          deletionPromises.push(deletionPromise);\n        });\n      });\n    });\n\n    // Warten, bis alle Löschvorgänge abgeschlossen sind\n    await Promise.all(deletionPromises);\n  }\n\n  private async deleteReactionsByUser(userId: string): Promise {\n    const querySnapshot = await getDocs(query(collection(this.firestore, 'channels'), where('members', 'array-contains', userId)));\n\n    const deletionPromises: Promise[] = [];\n\n    querySnapshot.forEach(async (doc) => {\n      const channelId = doc.id;\n      const chatQuerySnapshot = await getDocs(collection(this.firestore, `channels/${channelId}/chats`));\n\n      chatQuerySnapshot.forEach(async (chatDoc) => {\n        const messagesCollection = collection(this.firestore, `channels/${channelId}/chats/${chatDoc.id}/messages`);\n        const messageQuerySnapshot = await getDocs(messagesCollection);\n\n        messageQuerySnapshot.forEach(async (messageDoc) => {\n          const messageData = messageDoc.data();\n          if (messageData['reactions']) {\n            const reactions = Object.entries(messageData['reactions']);\n            const updatedReactions = reactions.filter(([uid, _]) => uid !== userId);\n            await updateDoc(messageDoc.ref, { reactions: Object.fromEntries(updatedReactions) });\n          }\n        });\n      });\n    });\n\n    // Warten, bis alle Löschvorgänge abgeschlossen sind\n    await Promise.all(deletionPromises);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImprintComponent.html":{"url":"components/ImprintComponent.html","title":"component - ImprintComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ImprintComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/imprint/imprint.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-imprint\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./imprint.component.html\n            \n\n\n\n            \n                styleUrl\n                ./imprint.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/imprint/imprint.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/imprint/imprint.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-imprint',\n  standalone: true,\n  imports: [],\n  templateUrl: './imprint.component.html',\n  styleUrl: './imprint.component.scss'\n})\nexport class ImprintComponent {\nconstructor( public router: Router){}\n}\n\n    \n\n    \n        \n    \n\n\n\n\n    \n        \n        Impressum\n        \n            Regina Gering\n            Kirchgasse\n            885546 Murnau am Neckar\n        \n\n        Contact\n        Email: regina&#64;test.de\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Impressum                    Regina Gering            Kirchgasse            885546 Murnau am Neckar                Contact        Email: regina@test.de    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImprintComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/InputFilterPipe.html":{"url":"pipes/InputFilterPipe.html","title":"pipe - InputFilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  InputFilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/input-filter.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        inputFilter\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(items: any[], searchText: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/input-filter.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                items\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchText\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'inputFilter',\n  standalone: true\n})\nexport class InputFilterPipe implements PipeTransform {\n\n    transform(items: any[], searchText: string): any[] {\n    if (!items) {\n      return [];\n    }\n    if (!searchText) {\n      return items;\n    }\n    searchText = searchText.toLocaleLowerCase();\n\n    return items.filter(it => {\n      const nameIncludesSearchText = it['name'] && it['name'].toLocaleLowerCase().includes(searchText);\n      const emailIncludesSearchText = it['email'] && it['email'].toLocaleLowerCase().includes(searchText);\n      return nameIncludesSearchText || emailIncludesSearchText;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/starting-page/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgIf\n                            NgClass\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                guestUserService\n                            \n                            \n                                loginError\n                            \n                            \n                                loginService\n                            \n                            \n                                myForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loginWithGoogle\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                    Async\n                                saveVariables\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    emailError\n                                \n                                \n                                    passwordError\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, renderer: Renderer2, el: ElementRef, overlayService: OverlayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/starting-page/login/login.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        overlayService\n                                                  \n                                                        \n                                                                        OverlayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithGoogle\n                        \n                    \n                \n            \n            \n                \nloginWithGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/login/login.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/login/login.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveVariables\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveVariables()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/login/login.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guestUserService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GuestUserService\n\n                    \n                \n                \n                    \n                        Default value : inject(GuestUserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginError\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginService\n\n                    \n                \n                \n                    \n                        Default value : inject(LoginService)\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/login/login.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        emailError\n                    \n                \n\n                \n                    \n                        getemailError()\n                    \n                \n                            \n                                \n                                    Defined in src/app/starting-page/login/login.component.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        passwordError\n                    \n                \n\n                \n                    \n                        getpasswordError()\n                    \n                \n                            \n                                \n                                    Defined in src/app/starting-page/login/login.component.ts:59\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { NgClass, NgIf } from '@angular/common';\nimport { Component, ElementRef, Renderer2, inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { LoginService } from '../../services/login.service';\nimport { OverlayService } from '../../services/overlay.service';\nimport { GuestUserService } from '../../services/guest-user.service';\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [ReactiveFormsModule, NgIf, NgClass, RouterLink],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss'\n})\nexport class LoginComponent {\n\n  myForm: FormGroup;\n  authService: AuthService = inject(AuthService);\n  loginService: LoginService = inject(LoginService);\n  guestUserService: GuestUserService = inject(GuestUserService);\n  loginError: string | null = null;\n  constructor(private fb: FormBuilder, private renderer: Renderer2,\n    private el: ElementRef, private overlayService:OverlayService) {\n    this.myForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  async onSubmit() {\n    this.saveVariables();\n    try {\n      await this.authService.login();\n   \n    } catch (error) {\n      this.loginError = '*Email oder Password falsch.';\n    }\n  }\n\n\n  async saveVariables() {\n    this.authService.email = this.myForm.value['email'];\n    this.authService.password = this.myForm.value['password'];\n    ;\n  }\n  get emailError() {\n    const emailControl = this.myForm.get('email');\n    const value = emailControl?.value as string;\n    if (emailControl?.hasError('required')) {\n      return '*Bitte geben Sie Ihre E-Mail-Adresse ein';\n    }\n    if (value && !/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(value)) {\n      return '*Diese E-Mail-Adresse ist leider ungültig';\n    }\n    return '';\n  }\n\n  get passwordError() {\n    const passwordControl = this.myForm.get('password');\n    if (passwordControl?.hasError('required')) {\n      return '*Bitte geben Sie Ihr Password ein';\n    }\n    return '';\n  }\n\n  loginWithGoogle() {\n    this.authService.loginWithGoogle()\n  }\n}\n    \n\n    \n        \n    Anmeldung\n    Wir empfehlen dir, die E-Mail-Adresse zu nutzen, die du bei der Arbeit verwendest.\n\n    \n        \n        \n    \n    \n        {{ emailError }}\n    \n\n    \n        \n        \n    \n    \n        {{ passwordError }}\n    \n    \n        {{ loginError }}\n    \n\n    Passwort vergessen?\n\n    \n        \n        ODER\n    \n    Anmeldung mit Google\n    \n        Anmelden\n        Gäste-Login\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Anmeldung    Wir empfehlen dir, die E-Mail-Adresse zu nutzen, die du bei der Arbeit verwendest.                                    {{ emailError }}                                        {{ passwordError }}                {{ loginError }}        Passwort vergessen?                    ODER        Anmeldung mit Google            Anmelden        Gäste-Login    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/login.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showLogin\n                            \n                            \n                                showResetPassword\n                            \n                            \n                                showSignUp\n                            \n                            \n                                showSignUpPicture\n                            \n                            \n                                showSignUpPictureUpload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToLogin\n                            \n                            \n                                toggleLogin\n                            \n                            \n                                toggleOwnPicture\n                            \n                            \n                                toggleResetPasswort\n                            \n                            \n                                toggleSignUp\n                            \n                            \n                                toggleToPicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/login.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToLogin\n                        \n                    \n                \n            \n            \n                \nnavigateToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/login.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLogin\n                        \n                    \n                \n            \n            \n                \ntoggleLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/login.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleOwnPicture\n                        \n                    \n                \n            \n            \n                \ntoggleOwnPicture()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/login.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleResetPasswort\n                        \n                    \n                \n            \n            \n                \ntoggleResetPasswort()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/login.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSignUp\n                        \n                    \n                \n            \n            \n                \ntoggleSignUp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/login.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleToPicture\n                        \n                    \n                \n            \n            \n                \ntoggleToPicture()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/login.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/services/login.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showResetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/login.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSignUp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/login.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSignUpPicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/login.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSignUpPictureUpload\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/login.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  showLogin: boolean = true;\n  showSignUp: boolean = false;\n  showSignUpPicture: boolean = false;\n  showSignUpPictureUpload = false;\n  showResetPassword: boolean = false;\n  constructor() { }\n  toggleSignUp() {\n    this.showLogin = !this.showLogin;\n    this.showSignUp = !this.showSignUp;\n  }\n\n  toggleToPicture() {\n    this.showSignUp = !this.showSignUp;\n    this.showSignUpPicture = !this.showSignUpPicture;\n  }\n\n  toggleOwnPicture() {\n    this.showSignUpPictureUpload = !this.showSignUpPictureUpload\n    this.showSignUpPicture = !this.showSignUpPicture;\n  }\n\n  toggleResetPasswort() {\n    this.showLogin = !this.showLogin;\n    this.showResetPassword = !this.showResetPassword;\n  }\n\n  toggleLogin() {\n    this.showSignUpPicture = !this.showSignUpPicture;\n    this.showLogin = !this.showLogin;\n  }\n\n  navigateToLogin(){\n    window.location.href='/';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainPageComponent.html":{"url":"components/MainPageComponent.html","title":"component - MainPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgIf\n                            NgFor\n                            FormsModule\n                                WorkspaceMenuComponent\n                                ChatBoardComponent\n                                ThreadBoardComponent\n                            MatSidenavModule\n                            MatButtonModule\n                                ChannelBoardComponent\n                                NewMsgBoardComponent\n                            MatDialogModule\n                                WorkspaceUserProfilComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./main-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                channelChatOpen\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                currentUser\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                evtSvc\n                            \n                            \n                                inputFocus\n                            \n                            \n                                newChatOpen\n                            \n                            \n                                privateChatOpen\n                            \n                            \n                                searchService\n                            \n                            \n                                searchText\n                            \n                            \n                                threadOpen\n                            \n                            \n                                uid\n                            \n                            \n                                workspaceOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isInputFocused\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onOpenChannel\n                            \n                            \n                                openChanel\n                            \n                            \n                                openNewChat\n                            \n                            \n                                openPrivateChat\n                            \n                            \n                                openThreadOnSearch\n                            \n                            \n                                openUserMenuDialog\n                            \n                            \n                                openWorkspace\n                            \n                            \n                                setInputFocus\n                            \n                            \n                                startSearch\n                            \n                            \n                                stopSearch\n                            \n                            \n                                toggleSideNav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(evtSvc: EventService, dialog: MatDialog, channelService: ChannelService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-page.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        evtSvc\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isInputFocused\n                        \n                    \n                \n            \n            \n                \nisInputFocused()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:174\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOpenChannel\n                        \n                    \n                \n            \n            \n                \nonOpenChannel(channelRef: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelRef\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openChanel\n                        \n                    \n                \n            \n            \n                \nopenChanel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNewChat\n                        \n                    \n                \n            \n            \n                \nopenNewChat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPrivateChat\n                        \n                    \n                \n            \n            \n                \nopenPrivateChat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openThreadOnSearch\n                        \n                    \n                \n            \n            \n                \nopenThreadOnSearch(channelRef: string, chatRef: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelRef\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                chatRef\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserMenuDialog\n                        \n                    \n                \n            \n            \n                \nopenUserMenuDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:144\n                        \n                    \n\n\n            \n                \n                        Opens UserMenuDialog by click\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWorkspace\n                        \n                    \n                \n            \n            \n                \nopenWorkspace()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setInputFocus\n                        \n                    \n                \n            \n            \n                \nsetInputFocus(value: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startSearch\n                        \n                    \n                \n            \n            \n                \nstartSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopSearch\n                        \n                    \n                \n            \n            \n                \nstopSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSideNav\n                        \n                    \n                \n            \n            \n                \ntoggleSideNav()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelChatOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserType | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        evtSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputFocus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newChatOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        privateChatOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchService\n\n                    \n                \n                \n                    \n                        Default value : inject(SearchService)\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        threadOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        workspaceOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { WorkspaceMenuComponent } from './workspace-menu/workspace-menu.component';\nimport { ChatBoardComponent } from './chat-board/chat-board.component';\nimport { ChannelBoardComponent } from './channel-board/channel-board.component';\nimport { ThreadBoardComponent } from './thread-board/thread-board.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { AuthService } from '../services/auth.service';\nimport { EventService } from '../services/event.service';\nimport { NewMsgBoardComponent } from './new-msg-board/new-msg-board.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { DialogUserMenuComponent } from './dialogs/dialog-user-menu/dialog-user-menu.component';\nimport { UserType } from '../types/user.class';\nimport { ChannelService } from '../services/channel.service';\nimport { SearchService } from '../services/search.service';\nimport { FormsModule } from '@angular/forms';\nimport { NgIf, NgFor } from '@angular/common';\nimport { WorkspaceUserProfilComponent } from './shared/workspace-user-profil/workspace-user-profil.component';\n\n@Component({\n  selector: 'app-main-page',\n  standalone: true,\n  imports: [NgIf, NgFor, FormsModule, WorkspaceMenuComponent, ChatBoardComponent, ThreadBoardComponent, MatSidenavModule, MatButtonModule, ChannelBoardComponent, NewMsgBoardComponent, MatDialogModule, WorkspaceUserProfilComponent],\n  templateUrl: './main-page.component.html',\n  styleUrl: './main-page.component.scss'\n})\nexport class MainPageComponent {\n\n  authService: AuthService = inject(AuthService);\n  searchService: SearchService = inject(SearchService);\n  workspaceOpen = true;\n  channelChatOpen = true;\n  privateChatOpen = false;\n  threadOpen = true;\n  newChatOpen = false;\n  uid: string = ''\n  currentUser: UserType | null = null;\n  searchText: string = '';\n  inputFocus: boolean = false;\n\n\n  constructor(public evtSvc: EventService, public dialog: MatDialog, public channelService: ChannelService) {\n    this.evtSvc.getThreadOpenStatus().subscribe(status => {\n      this.threadOpen = status;\n    });\n    this.evtSvc.getChannelOpenStatus().subscribe(status => {\n      this.channelChatOpen = status;\n    });\n    this.evtSvc.getPrivateChatOpenStatus().subscribe(status => {\n      this.privateChatOpen = status;\n    });\n    this.evtSvc.getNewChatOpenStatus().subscribe(status => {\n      this.newChatOpen = status;\n    });\n    this.evtSvc.getWorkspaceOpenStatus().subscribe(status => {\n      this.workspaceOpen = status;\n    });\n  }\n\n\n  ngOnInit() {\n    if (window.innerWidth > 792 && window.innerWidth = 3) {\n      this.searchService.startSearch(this.searchText);\n    }\n  }\n\n\n  toggleSideNav() {\n    this.workspaceOpen = !this.workspaceOpen;\n  }\n\n\n  openNewChat() {\n    this.evtSvc.openChannel(false);\n    this.evtSvc.openPrivateChat(false);\n    this.evtSvc.openNewChat(true);\n    this.evtSvc.openThread(false);\n\n    if (window.innerWidth  792 && window.innerWidth \n    \n\n    \n        \n  \n    \n  \n  @if(workspaceOpen) {\n  \n    \n  \n  } @if(!workspaceOpen) {\n  \n    \n    \n      \n      \n    \n  \n  }\n\n  \n    @if(isInputFocused() && searchText.length Bitte gib mindestens drei Buchstaben ein\n    }\n    \n    \n\n     0\">\n      \n        Keine Ergebnisse gefunden.\n      \n\n       0\" class=\"user-list\">\n        Gefundene Benutzer:\n        @for (user of this.searchService.foundUsers; track user.id) {\n        }\n      \n\n       0\"\n        class=\"channels-list\"\n      >\n        Gefundene Kanäle:\n        @for(channel of this.searchService.foundChannelNames; track channel.id)\n        {\n        \n          {{ channel.name }}\n        \n        }\n      \n\n       0\"\n        class=\"message-list\"\n      >\n        Gefundene Nachrichten:\n        @for(message of this.searchService.foundMessages; track message) {\n        \n          {{ this.searchService.getMessageText(message.message) }}\n        \n        }\n      \n    \n  \n\n  \n    \n      {{ this.authService.currentUser?.name }}\n    \n    \n    \n  \n\n\n\n  @if(workspaceOpen){\n  \n    Workspace-Menü schließen\n    \n  \n  } @if(!workspaceOpen){\n  \n    Workspace-Menü öffnen\n    \n  \n  } @if(workspaceOpen) {\n  \n  } @if(newChatOpen === true) {}\n  @if(channelChatOpen) {\n  \n  } @if(privateChatOpen) {\n  \n  } @if(threadOpen && this.channelService.selectedChannelChats.length > 0) {\n  \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          @if(workspaceOpen) {          } @if(!workspaceOpen) {                              }      @if(isInputFocused() && searchText.length Bitte gib mindestens drei Buchstaben ein    }             0\">              Keine Ergebnisse gefunden.             0\" class=\"user-list\">        Gefundene Benutzer:        @for (user of this.searchService.foundUsers; track user.id) {        }             0\"        class=\"channels-list\"      >        Gefundene Kanäle:        @for(channel of this.searchService.foundChannelNames; track channel.id)        {                  {{ channel.name }}                }             0\"        class=\"message-list\"      >        Gefundene Nachrichten:        @for(message of this.searchService.foundMessages; track message) {                  {{ this.searchService.getMessageText(message.message) }}                }                        {{ this.authService.currentUser?.name }}                @if(workspaceOpen){      Workspace-Menü schließen        } @if(!workspaceOpen){      Workspace-Menü öffnen        } @if(workspaceOpen) {    } @if(newChatOpen === true) {}  @if(channelChatOpen) {    } @if(privateChatOpen) {    } @if(threadOpen && this.channelService.selectedChannelChats.length > 0) {    }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/message.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                member\n                            \n                            \n                                message\n                            \n                            \n                                messageId\n                            \n                            \n                                reactions\n                            \n                            \n                                timestamp\n                            \n                            \n                                uploadedFile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/message.class.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        member\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/message.class.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/message.class.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/message.class.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Reaction[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/message.class.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/message.class.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadedFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/message.class.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Reaction } from \"./reaction.class\"\n\nexport class Message {\n    messageId: string;\n    message: string;\n    member: string;\n    reactions: Reaction[];\n    timestamp: number;\n    uploadedFile: string[];\n    // uploadedFiles: { name: string, downloadURL: string }[];\n\n  constructor(obj?:any) {\n    this.messageId = obj ? obj.id : '';\n    this.message = obj ? obj.message: '';\n    this.member = obj ? obj.member : '';\n    this.reactions = obj ? obj.reactions : [];\n    this.timestamp = obj ? obj.timestamp : '';\n    this.uploadedFile = obj ? obj.uploadedFile : [];\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageLeftComponent.html":{"url":"components/MessageLeftComponent.html","title":"component - MessageLeftComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessageLeftComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/shared/message-left/message-left.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message-left\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatDialogModule\n                            PickerComponent\n                            MatMenuModule\n                            EmojiComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./message-left.component.html\n            \n\n\n\n            \n                styleUrl\n                ./message-left.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                containerHovered\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    \n                                    Optional\n                                emojiMenuTrigger\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEmoji\n                            \n                            \n                                addOrRemoveEmoji\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onMouseOver\n                            \n                            \n                                onOpenThread\n                            \n                            \n                                openShowProfilDialog\n                            \n                            \n                                setChatIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                amountMessage\n                            \n                            \n                                member\n                            \n                            \n                                memberImg\n                            \n                            \n                                memberRef\n                            \n                            \n                                message\n                            \n                            \n                                messageIndex\n                            \n                            \n                                onChannelBoard\n                            \n                            \n                                onPrivateChat\n                            \n                            \n                                onThreadBoard\n                            \n                            \n                                selectedChatIndex\n                            \n                            \n                                sortedReactions\n                            \n                            \n                                time\n                            \n                            \n                                timeLastMessage\n                            \n                            \n                                uploadedFile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                messageLoaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(evtSvc: EventService, dialog: MatDialog, channelService: ChannelService, userService: UserService, authService: AuthService, chatService: ChatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/shared/message-left/message-left.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        evtSvc\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        amountMessage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-left/message-left.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        member\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-left/message-left.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        memberImg\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-left/message-left.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        memberRef\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-left/message-left.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-left/message-left.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messageIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-left/message-left.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChannelBoard\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-left/message-left.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onPrivateChat\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-left/message-left.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onThreadBoard\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-left/message-left.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedChatIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-left/message-left.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sortedReactions\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-left/message-left.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        time\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-left/message-left.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        timeLastMessage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-left/message-left.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uploadedFile\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-left/message-left.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        messageLoaded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-left/message-left.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEmoji\n                        \n                    \n                \n            \n            \n                \naddEmoji($event: EmojiEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/message-left/message-left.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        EmojiEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addOrRemoveEmoji\n                        \n                    \n                \n            \n            \n                \naddOrRemoveEmoji(reactEmoji: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/message-left/message-left.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reactEmoji\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/message-left/message-left.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMouseOver\n                        \n                    \n                \n            \n            \n                \nonMouseOver(action: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/message-left/message-left.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOpenThread\n                        \n                    \n                \n            \n            \n                \nonOpenThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/message-left/message-left.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openShowProfilDialog\n                        \n                    \n                \n            \n            \n                \nopenShowProfilDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/message-left/message-left.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChatIndex\n                        \n                    \n                \n            \n            \n                \nsetChatIndex(chatIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/message-left/message-left.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                chatIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/message-left/message-left.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        containerHovered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/message-left/message-left.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/message-left/message-left.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        emojiMenuTrigger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatMenuTrigger\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('aboveMenuTrigger')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/message-left/message-left.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/message-left/message-left.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, Output,EventEmitter } from '@angular/core';\nimport { EventService } from '../../../services/event.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { DialogShowProfilComponent } from '../../dialogs/dialog-show-profil/dialog-show-profil.component';\nimport { ChannelService } from '../../../services/channel.service';\nimport { UserService } from '../../../services/user.service';\nimport { PickerComponent } from '@ctrl/ngx-emoji-mart';\nimport { MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\nimport { EmojiComponent, EmojiEvent } from '@ctrl/ngx-emoji-mart/ngx-emoji';\nimport { Message } from '../../../models/message.class';\nimport { AuthService } from '../../../services/auth.service';\nimport { Reaction } from '../../../models/reaction.class';\nimport { ChatService } from '../../../services/chat.service';\n\n\n@Component({\n  selector: 'app-message-left',\n  standalone: true,\n  imports: [MatDialogModule, PickerComponent, MatMenuModule, EmojiComponent],\n  templateUrl: './message-left.component.html',\n  styleUrl: './message-left.component.scss'\n})\nexport class MessageLeftComponent {\n\n  @Input() onChannelBoard: boolean = false;\n  @Input() onPrivateChat: boolean = false;\n  @Input() onThreadBoard: boolean = false;\n  @Input() messageIndex: number = 0;\n  @Input() member: string = '';\n  @Input() message: string = '';\n  @Input() memberImg: string = '';\n  @Input() amountMessage: number = 0;\n  @Input() time: string = '';\n  @Input() timeLastMessage: string = '';\n  @Input() selectedChatIndex: number = 0;\n  @Input() memberRef: string = '';\n  @Input() sortedReactions: {reactUser: string[], reactEmoji: string}[] = [];\n  @Input() uploadedFile: string[] = [];\n\n  @Output() messageLoaded: EventEmitter = new EventEmitter();\n\n  @ViewChild('aboveMenuTrigger') emojiMenuTrigger?: MatMenuTrigger;\n\n  containerHovered: boolean = false;\n\n\n  constructor(private evtSvc: EventService, public dialog: MatDialog, private channelService: ChannelService, public userService: UserService, public authService: AuthService, private chatService: ChatService) {}\n\n\n  ngAfterViewInit(): void {\n    this.messageLoaded.emit();\n  }\n\n\n  onMouseOver(action:string) {\n    if (this.emojiMenuTrigger && this.emojiMenuTrigger.menuOpen) {\n    } else {\n      if(action === 'enter') {\n        this.containerHovered = true;\n      } else if(action === 'leave') {\n        this.containerHovered = false;\n      }\n    }\n  }\n\n\n  onOpenThread() {\n    if(this.onChannelBoard === true) {\n      this.evtSvc.openThread(true);\n\n      if (window.innerWidth \n        reaction.reactUser === newReaction.reactUser && reaction.reactEmoji === newReaction.reactEmoji\n      );\n\n      if(index === -1) {\n        messageObj.reactions.push(newReaction);\n        if(this.onPrivateChat === false) {\n          this.channelService.updateMessage(messageObj);\n        } else {\n          this.chatService.updateMessage(messageObj);\n        }\n      }\n    }\n  }\n\n\n  addOrRemoveEmoji(reactEmoji: string) {\n    let messageObj; \n    if(this.onPrivateChat === false) {\n      messageObj = Object.assign({}, this.channelService.selectedChannelChats[this.channelService.selChatIndex].allMessages[this.messageIndex]);\n    } else {\n      messageObj = this.chatService.messages[this.messageIndex];\n    }\n\n    let newReaction: Reaction = {\n        reactUser: this.authService.uid, \n        reactEmoji: reactEmoji\n      }\n\n    const index = messageObj.reactions.findIndex(reaction =>\n        reaction.reactUser === newReaction.reactUser && reaction.reactEmoji === newReaction.reactEmoji\n      );\n\n    if(index === -1) {\n        messageObj.reactions.push(newReaction);\n        if(this.onPrivateChat === false) {\n          this.channelService.updateMessage(messageObj);\n        } else {\n          this.chatService.updateMessage(messageObj);\n        }\n    } else {\n        messageObj.reactions.splice(index, 1);\n        if(this.onPrivateChat === false) {\n          this.channelService.updateMessage(messageObj);\n        } else {\n          this.chatService.updateMessage(messageObj);\n        }\n    }\n  }\n\n  \n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      {{ member }}\n      {{ time }} Uhr\n    \n    \n      @if(uploadedFile.length > 0) {\n      {{ uploadedFile[0] }}\n      }\n      {{ message }}\n    \n    @if(sortedReactions.length > 0) {\n    \n      \n      \n        @for(emojiObj of sortedReactions; track emojiObj) {\n        \n          \n            \n            @for(user of emojiObj.reactUser; track user) { @if(user ===\n            this.authService.uid && emojiObj.reactUser.length === 1) {\n            Du\n            hast reagiert\n            } @else if(user === this.authService.uid) {\n            Du\n            } @else {\n            {{\n              this.userService.users[this.userService.getUsersData(user)].name\n            }}\n            }\n            und\n            } @else if(emojiObj.reactUser.length > 2) {\n            , \n            }  -->\n            } @if(emojiObj.reactUser.length === 1 && emojiObj.reactUser[0] !==\n            this.authService.uid) {\n            hat reagiert\n            } @else if(emojiObj.reactUser.length > 1) {\n            haben reagiert\n            }\n          \n          \n          {{ emojiObj.reactUser.length }}\n        \n        }\n      \n    \n    } @if(onChannelBoard && amountMessage !== 0) {\n    \n      \n        {{ amountMessage }} Antworten\n      \n      Letzte Antwort {{ timeLastMessage }}\n    \n    } @if (containerHovered) {\n    \n    }\n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ member }}      {{ time }} Uhr              @if(uploadedFile.length > 0) {      {{ uploadedFile[0] }}      }      {{ message }}        @if(sortedReactions.length > 0) {                        @for(emojiObj of sortedReactions; track emojiObj) {                                          @for(user of emojiObj.reactUser; track user) { @if(user ===            this.authService.uid && emojiObj.reactUser.length === 1) {            Du            hast reagiert            } @else if(user === this.authService.uid) {            Du            } @else {            {{              this.userService.users[this.userService.getUsersData(user)].name            }}            }            und            } @else if(emojiObj.reactUser.length > 2) {            ,             }  -->            } @if(emojiObj.reactUser.length === 1 && emojiObj.reactUser[0] !==            this.authService.uid) {            hat reagiert            } @else if(emojiObj.reactUser.length > 1) {            haben reagiert            }                              {{ emojiObj.reactUser.length }}                }              } @if(onChannelBoard && amountMessage !== 0) {                  {{ amountMessage }} Antworten            Letzte Antwort {{ timeLastMessage }}        } @if (containerHovered) {        }                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageLeftComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageRightComponent.html":{"url":"components/MessageRightComponent.html","title":"component - MessageRightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessageRightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/shared/message-right/message-right.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message-right\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatDialogModule\n                            PickerComponent\n                            MatMenuModule\n                            EmojiComponent\n                                EditMsgTextareaComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./message-right.component.html\n            \n\n\n\n            \n                styleUrl\n                ./message-right.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                containerHovered\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                editMessageState\n                            \n                            \n                                    \n                                    Optional\n                                emojiMenuTrigger\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEmoji\n                            \n                            \n                                addOrRemoveEmoji\n                            \n                            \n                                closeEditMessage\n                            \n                            \n                                editMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onMouseOver\n                            \n                            \n                                onOpenThread\n                            \n                            \n                                openShowProfilDialog\n                            \n                            \n                                setChatIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                amountMessage\n                            \n                            \n                                member\n                            \n                            \n                                memberImg\n                            \n                            \n                                memberRef\n                            \n                            \n                                message\n                            \n                            \n                                messageIndex\n                            \n                            \n                                onChannelBoard\n                            \n                            \n                                onPrivateChat\n                            \n                            \n                                onThreadBoard\n                            \n                            \n                                selectedChatIndex\n                            \n                            \n                                sortedReactions\n                            \n                            \n                                time\n                            \n                            \n                                timeLastMessage\n                            \n                            \n                                uploadedFile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                messageLoaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(evtSvc: EventService, dialog: MatDialog, channelService: ChannelService, userService: UserService, authService: AuthService, chatService: ChatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/shared/message-right/message-right.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        evtSvc\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        amountMessage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-right/message-right.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        member\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-right/message-right.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        memberImg\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-right/message-right.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        memberRef\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-right/message-right.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-right/message-right.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messageIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-right/message-right.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onChannelBoard\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-right/message-right.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onPrivateChat\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-right/message-right.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onThreadBoard\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-right/message-right.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedChatIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-right/message-right.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sortedReactions\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-right/message-right.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        time\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-right/message-right.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        timeLastMessage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-right/message-right.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uploadedFile\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-right/message-right.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        messageLoaded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/message-right/message-right.component.ts:42\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEmoji\n                        \n                    \n                \n            \n            \n                \naddEmoji($event: EmojiEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/message-right/message-right.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        EmojiEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addOrRemoveEmoji\n                        \n                    \n                \n            \n            \n                \naddOrRemoveEmoji(reactEmoji: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/message-right/message-right.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reactEmoji\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeEditMessage\n                        \n                    \n                \n            \n            \n                \ncloseEditMessage($event: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/message-right/message-right.component.ts:170\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMessage\n                        \n                    \n                \n            \n            \n                \neditMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/message-right/message-right.component.ts:166\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/message-right/message-right.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMouseOver\n                        \n                    \n                \n            \n            \n                \nonMouseOver(action: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/message-right/message-right.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOpenThread\n                        \n                    \n                \n            \n            \n                \nonOpenThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/message-right/message-right.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openShowProfilDialog\n                        \n                    \n                \n            \n            \n                \nopenShowProfilDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/message-right/message-right.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChatIndex\n                        \n                    \n                \n            \n            \n                \nsetChatIndex(chatIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/message-right/message-right.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                chatIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/message-right/message-right.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/message-right/message-right.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        containerHovered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/message-right/message-right.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/message-right/message-right.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMessageState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/message-right/message-right.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        emojiMenuTrigger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatMenuTrigger\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('aboveMenuTrigger')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/message-right/message-right.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/message-right/message-right.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { EventService } from '../../../services/event.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { DialogShowProfilComponent } from '../../dialogs/dialog-show-profil/dialog-show-profil.component';\nimport { ChannelService } from '../../../services/channel.service';\nimport { UserService } from '../../../services/user.service';\nimport { PickerComponent } from '@ctrl/ngx-emoji-mart';\nimport { MatMenuModule, MatMenuTrigger } from '@angular/material/menu';\nimport { EmojiComponent, EmojiEvent } from '@ctrl/ngx-emoji-mart/ngx-emoji';\nimport { Message } from '../../../models/message.class';\nimport { AuthService } from '../../../services/auth.service';\nimport { Reaction } from '../../../models/reaction.class';\nimport { EditMsgTextareaComponent } from '../edit-msg-textarea/edit-msg-textarea.component';\nimport { ChatService } from '../../../services/chat.service';\n\n\n@Component({\n  selector: 'app-message-right',\n  standalone: true,\n  imports: [MatDialogModule, PickerComponent, MatMenuModule, EmojiComponent, EditMsgTextareaComponent],\n  templateUrl: './message-right.component.html',\n  styleUrl: './message-right.component.scss'\n})\nexport class MessageRightComponent {\n\n  @Input() onChannelBoard: boolean = false;\n  @Input() onPrivateChat: boolean = false;\n  @Input() onThreadBoard: boolean = false;\n  @Input() messageIndex: number = 0;\n  @Input() member: string = '';\n  @Input() message: string = '';\n  @Input() memberImg: string = '';\n  @Input() amountMessage: number = 0;\n  @Input() time: string = '';\n  @Input() timeLastMessage: string = '';\n  @Input() selectedChatIndex: number = 0;\n  @Input() memberRef: string = '';\n  @Input() sortedReactions: {reactUser: string[], reactEmoji: string}[] = [];\n  @Input() uploadedFile: string[] = [];\n\n  @Output() messageLoaded: EventEmitter = new EventEmitter();\n  \n  @ViewChild('aboveMenuTrigger') emojiMenuTrigger?: MatMenuTrigger;\n\n  containerHovered: boolean = false;\n  editMessageState: boolean = false;\n\n\n  constructor(private evtSvc: EventService, public dialog: MatDialog, public channelService: ChannelService, public userService: UserService, public authService: AuthService, private chatService: ChatService) {}\n\n\n  ngAfterViewInit(): void {\n    this.messageLoaded.emit();\n  }\n\n\n  onMouseOver(action:string) {\n    if (this.emojiMenuTrigger && this.emojiMenuTrigger.menuOpen) {\n    } else {\n      if(action === 'enter') {\n        this.containerHovered = true;\n      } else if(action === 'leave') {\n        this.containerHovered = false;\n      }\n    }\n  }\n\n\n  onOpenThread() {\n    if(this.onChannelBoard === true) {\n      this.evtSvc.openThread(true);\n\n      if (window.innerWidth \n        reaction.reactUser === newReaction.reactUser && reaction.reactEmoji === newReaction.reactEmoji\n      );\n\n      if(index === -1) {\n        messageObj.reactions.push(newReaction);\n        if(this.onPrivateChat === false) {\n          this.channelService.updateMessage(messageObj);\n        } else {\n          this.chatService.updateMessage(messageObj);\n          console.log('Emoji added', messageObj);\n        }\n      }\n    }\n  }\n\n\n  addOrRemoveEmoji(reactEmoji: string) {\n    let messageObj;\n    if(this.onPrivateChat === false) {\n      messageObj = Object.assign({}, this.channelService.selectedChannelChats[this.channelService.selChatIndex].allMessages[this.messageIndex]);\n    } else {\n      messageObj = this.chatService.messages[this.messageIndex];\n    }\n\n    let newReaction: Reaction = {\n        reactUser: this.authService.uid, \n        reactEmoji: reactEmoji\n      }\n\n    const index = messageObj.reactions.findIndex(reaction =>\n        reaction.reactUser === newReaction.reactUser && reaction.reactEmoji === newReaction.reactEmoji\n      );\n\n    if(index === -1) {\n        messageObj.reactions.push(newReaction);\n        if(this.onPrivateChat === false) {\n          this.channelService.updateMessage(messageObj);\n        } else {\n          this.chatService.updateMessage(messageObj);\n        }\n    } else {\n        messageObj.reactions.splice(index, 1);\n        if(this.onPrivateChat === false) {\n          this.channelService.updateMessage(messageObj);\n        } else {\n          this.chatService.updateMessage(messageObj);\n        }\n    }\n  }\n\n\n  editMessage() {\n    this.editMessageState = true;\n  }\n\n  closeEditMessage($event: boolean) {\n    this.editMessageState = $event;\n  }\n}\n\n\n\n    \n\n    \n        \n  @if(!editMessageState) {\n  \n    \n      {{ time }} Uhr\n      {{ member }}\n    \n    \n      @if(uploadedFile.length > 0) {\n      {{ uploadedFile[0] }}\n      }\n      {{ message }}\n    \n\n    \n    @if(sortedReactions.length > 0) {\n    \n      \n      \n        @for(emojiObj of sortedReactions; track emojiObj) {\n        \n          \n            \n            @for(user of emojiObj.reactUser; track user) { @if(user ===\n            this.authService.uid && emojiObj.reactUser.length === 1) {\n            Du\n            hast reagiert\n            } @else if(user === this.authService.uid) {\n            Du\n            } @else {\n            {{\n              this.userService.users[this.userService.getUsersData(user)].name\n            }}\n            }\n            und\n            } @else if(emojiObj.reactUser.length > 2) {\n            , \n            }  -->\n            } @if(emojiObj.reactUser.length === 1 && emojiObj.reactUser[0] !==\n            this.authService.uid) {\n            hat reagiert\n            } @else if(emojiObj.reactUser.length > 1) {\n            haben reagiert\n            }\n          \n          \n          {{ emojiObj.reactUser.length }}\n        \n        }\n      \n    \n    }\n\n    \n    @if(onChannelBoard && amountMessage !== 0) {\n    \n      \n        {{ amountMessage }} Antworten\n      \n      Letzte Antwort {{ timeLastMessage }}\n    \n    }\n  \n  } @else if(editMessageState) {\n  \n  }\n  \n\n  \n  @if (containerHovered && editMessageState === false) {\n  \n    \n    \n      \n        \n          Nachricht bearbeiten\n        \n      \n    \n  \n  }\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if(!editMessageState) {            {{ time }} Uhr      {{ member }}              @if(uploadedFile.length > 0) {      {{ uploadedFile[0] }}      }      {{ message }}            @if(sortedReactions.length > 0) {                        @for(emojiObj of sortedReactions; track emojiObj) {                                          @for(user of emojiObj.reactUser; track user) { @if(user ===            this.authService.uid && emojiObj.reactUser.length === 1) {            Du            hast reagiert            } @else if(user === this.authService.uid) {            Du            } @else {            {{              this.userService.users[this.userService.getUsersData(user)].name            }}            }            und            } @else if(emojiObj.reactUser.length > 2) {            ,             }  -->            } @if(emojiObj.reactUser.length === 1 && emojiObj.reactUser[0] !==            this.authService.uid) {            hat reagiert            } @else if(emojiObj.reactUser.length > 1) {            haben reagiert            }                              {{ emojiObj.reactUser.length }}                }              }        @if(onChannelBoard && amountMessage !== 0) {                  {{ amountMessage }} Antworten            Letzte Antwort {{ timeLastMessage }}        }    } @else if(editMessageState) {    }      @if (containerHovered && editMessageState === false) {                                  Nachricht bearbeiten                      }        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageRightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewMsgBoardComponent.html":{"url":"components/NewMsgBoardComponent.html","title":"component - NewMsgBoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NewMsgBoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/new-msg-board/new-msg-board.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-msg-board\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                TextareaMainPageComponent\n                                SearchInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./new-msg-board.component.html\n            \n\n\n\n            \n                styleUrl\n                ./new-msg-board.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TextareaMainPageComponent } from '../shared/textarea-main-page/textarea-main-page.component';\nimport { SearchInputComponent } from '../shared/search-input/search-input.component';\n\n@Component({\n  selector: 'app-new-msg-board',\n  standalone: true,\n  imports: [TextareaMainPageComponent, SearchInputComponent],\n  templateUrl: './new-msg-board.component.html',\n  styleUrl: './new-msg-board.component.scss'\n})\nexport class NewMsgBoardComponent {\n\n}\n\n    \n\n    \n        \n  Neue Nachricht\n  \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Neue Nachricht  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewMsgBoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OverlayService.html":{"url":"injectables/OverlayService.html","title":"injectable - OverlayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OverlayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/overlay.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                overlayContent\n                            \n                            \n                                overlayShow\n                            \n                            \n                                overlayStyle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hideOverlay\n                            \n                            \n                                showOverlay\n                            \n                            \n                                showOverlayError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/overlay.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hideOverlay\n                        \n                    \n                \n            \n            \n                \nhideOverlay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/overlay.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOverlay\n                        \n                    \n                \n            \n            \n                \nshowOverlay(content: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/overlay.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOverlayError\n                        \n                    \n                \n            \n            \n                \nshowOverlayError(content: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/overlay.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        overlayContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/overlay.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlayShow\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/overlay.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlayStyle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/services/overlay.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OverlayService {\n\noverlayShow:boolean = false;\noverlayContent:any = null;\noverlayStyle:string = '';\n\n  constructor() {}\nshowOverlay(content: any){\n  this.overlayContent = content;\n  this.overlayShow=true;\n  this.overlayStyle = '';\n}\n\nshowOverlayError(content: any){\n  this.overlayContent = content;\n  this.overlayStyle = 'error'; // Setzen des Stils auf 'error'\n  this.overlayShow=true;\n}\n hideOverlay(){\n  this.overlayShow=false\n }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrivateChat.html":{"url":"classes/PrivateChat.html","title":"class - PrivateChat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrivateChat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/privateChat.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chatId\n                            \n                            \n                                members\n                            \n                            \n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/privateChat.class.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chatId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/privateChat.class.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/privateChat.class.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/privateChat.class.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PrivateChat {\n    chatId: string;\n    timestamp: number;\n    members: string[];\n\n\n  constructor(obj?:any) {\n    this.chatId = obj ? obj.id : '';\n    this.timestamp = obj ? obj.timestamp : '';\n    this.members = obj ? obj.members: [''];\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reaction.html":{"url":"classes/Reaction.html","title":"class - Reaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/reaction.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                reactEmoji\n                            \n                            \n                                reactUser\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/reaction.class.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        reactEmoji\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/reaction.class.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reactUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/reaction.class.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Reaction {\n    reactUser: string;\n    reactEmoji: string;\n\n\n  constructor(obj?:any) {\n    this.reactUser = obj ? obj.reactUser : '';\n    this.reactEmoji = obj ? obj.reactEmoji : '';\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reset-password/reset-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgIf\n                            ReactiveFormsModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                loginService\n                            \n                            \n                                myForm\n                            \n                            \n                                password\n                            \n                            \n                                resetPasswordService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                            \n                                validatePasswordRepeat\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    passwordError\n                                \n                                \n                                    passwordRepeatError\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, renderer: Renderer2, el: ElementRef, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/reset-password/reset-password.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/reset-password/reset-password.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validatePasswordRepeat\n                        \n                    \n                \n            \n            \n                \nvalidatePasswordRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/reset-password/reset-password.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/reset-password/reset-password.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginService\n\n                    \n                \n                \n                    \n                        Default value : inject(LoginService)\n                    \n                \n                    \n                        \n                                Defined in src/app/reset-password/reset-password.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/reset-password/reset-password.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/reset-password/reset-password.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResetPasswordService\n\n                    \n                \n                \n                    \n                        Default value : inject(ResetPasswordService)\n                    \n                \n                    \n                        \n                                Defined in src/app/reset-password/reset-password.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/reset-password/reset-password.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        passwordError\n                    \n                \n\n                \n                    \n                        getpasswordError()\n                    \n                \n                            \n                                \n                                    Defined in src/app/reset-password/reset-password.component.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        passwordRepeatError\n                    \n                \n\n                \n                    \n                        getpasswordRepeatError()\n                    \n                \n                            \n                                \n                                    Defined in src/app/reset-password/reset-password.component.ts:50\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Renderer2, inject } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { NgIf } from '@angular/common';\nimport { LoginService } from '../services/login.service';\nimport { Router, RouterLink } from '@angular/router';\nimport { ResetPasswordService } from '../services/reset-password.service';\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [NgIf, ReactiveFormsModule, RouterLink,],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss'\n})\nexport class ResetPasswordComponent {\n  myForm: FormGroup;\n  authService: AuthService = inject(AuthService);\n  loginService: LoginService = inject(LoginService)\n  resetPasswordService: ResetPasswordService = inject(ResetPasswordService);\n  constructor(private fb: FormBuilder, private renderer: Renderer2,\n    private el: ElementRef, public router: Router) {\n\n\n    this.myForm = this.fb.group({\n\n      password: ['', [Validators.required, Validators.minLength(7)]],\n      passwordRepeat: ['', Validators.required]\n    });\n  }\n  password: string = ''\n  onSubmit() {\n\n    if (this.myForm.valid) {\n      this.password = this.myForm.value['password'];\n      this.resetPasswordService.handleResetPassword()\n    }\n  }\n\n  get passwordError() {\n    const passwordControl = this.myForm.get('password');\n    if (passwordControl?.hasError('required')) {\n      return '*Bitte geben Sie ein Passwort ein';\n    }\n    if (passwordControl?.hasError('minlength')) {\n      return '*Das Passwort muss mindestens 7 Zeichen enthalten';\n    }\n    return '';\n  }\n\n  get passwordRepeatError() {\n    const passwordControl = this.myForm.get('password');\n    const passwordRepeatControl = this.myForm.get('passwordRepeat');\n    if (passwordControl && passwordRepeatControl && passwordControl.value !== passwordRepeatControl.value) {\n      return '*Passwörter stimmen nicht überein';\n    }\n    return '';\n  }\n\n  validatePasswordRepeat() {\n    const passwordControl = this.myForm.get('password');\n    const passwordRepeatControl = this.myForm.get('passwordRepeat');\n\n    if (passwordControl && passwordRepeatControl && passwordControl.value !== passwordRepeatControl.value) {\n      // Setze das entsprechende Formularfeld auf \"berührt\", damit Fehler angezeigt werden können\n      passwordRepeatControl.markAsTouched();\n    }\n  }\n}\n\n\n    \n\n    \n        \n    \n   \n\n\n\n    \n        Passwort zurücksetzen\n        \n            \n            \n        \n        \n            {{ passwordError\n                }}\n        \n\n\n        \n            \n            \n          \n          \n            {{ passwordRepeatError }}\n          \n\n          \n            \n            Passwort ändern\n        \n\n        \n    \n    \n        Impressum\n        Datenschutz\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   Passwort zurücksetzen                                                            {{ passwordError                }}                                                                        {{ passwordRepeatError }}                                            Passwort ändern                                Impressum        Datenschutz    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResetPasswordService.html":{"url":"injectables/ResetPasswordService.html","title":"injectable - ResetPasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/reset-password.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actionCode\n                            \n                            \n                                    Private\n                                authService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getParameterByName\n                            \n                            \n                                    Public\n                                handleResetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/reset-password.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getParameterByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getParameterByName(name: string, url)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/reset-password.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                url\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    window.location.href\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        handleResetPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleResetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/reset-password.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actionCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/reset-password.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/reset-password.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { verifyPasswordResetCode, confirmPasswordReset, } from \"firebase/auth\";\nimport { Firestore } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResetPasswordService {\n\n  private authService = inject(AuthService);\n  private actionCode: string;\n\n  constructor() {\n    this.actionCode = this.getParameterByName('oobCode') || '';\n    console.log(this.actionCode)\n  }\n\n  private getParameterByName(name: string, url = window.location.href) {\n    console.log(url);\n    name = name.replace(/[[]]/g, \"\\\\$&\");\n    const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n      results = regex.exec(url);\n      console.log(results);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n  }\n\n  public handleResetPassword() {\n    console.log('test')\n    if (this.actionCode) {\n      verifyPasswordResetCode(this.authService.auth, this.actionCode).then((email) => {\n        const accountEmail = email;\n        console.log(email)\n        // TODO: Show the reset screen with the user's email and ask the user for the new password.\n        const newPassword = \"...\";\n\n        // Save the new password.\n\n      });\n    }\n  }\n  \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchInputComponent.html":{"url":"components/SearchInputComponent.html","title":"component - SearchInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/shared/search-input/search-input.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            InputFilterPipe\n                            FormsModule\n                                WorkspaceUserProfilComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./search-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./search-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                inputText\n                            \n                            \n                                searchChannel\n                            \n                            \n                                searchText\n                            \n                            \n                                searchUser\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onOpenChannel\n                            \n                            \n                                startSearch\n                            \n                            \n                                stopSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, channelService: ChannelService, evtSvc: EventService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/shared/search-input/search-input.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        evtSvc\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onOpenChannel\n                        \n                    \n                \n            \n            \n                \nonOpenChannel(channelRef: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/search-input/search-input.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelRef\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startSearch\n                        \n                    \n                \n            \n            \n                \nstartSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/search-input/search-input.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopSearch\n                        \n                    \n                \n            \n            \n                \nstopSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/search-input/search-input.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/search-input/search-input.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/search-input/search-input.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchChannel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/search-input/search-input.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/search-input/search-input.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/search-input/search-input.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/search-input/search-input.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { InputFilterPipe } from '../../../pipes/input-filter.pipe';\nimport { FormsModule } from '@angular/forms';\nimport { UserService } from '../../../services/user.service';\nimport { WorkspaceUserProfilComponent } from '../workspace-user-profil/workspace-user-profil.component';\nimport { ChannelService } from '../../../services/channel.service';\nimport { User } from '../../../models/user.class';\nimport { EventService } from '../../../services/event.service';\n\n@Component({\n  selector: 'app-search-input',\n  standalone: true,\n  imports: [InputFilterPipe, FormsModule, WorkspaceUserProfilComponent],\n  templateUrl: './search-input.component.html',\n  styleUrl: './search-input.component.scss'\n})\nexport class SearchInputComponent {\n\n  inputText = '';\n  searchText = '';\n  searchChannel = false;\n  searchUser = false;\n\n  constructor(public userService: UserService, public channelService: ChannelService, private evtSvc: EventService) {}\n\n\n  startSearch() {\n    if (this.inputText.includes('@')) {\n      this.searchText = this.inputText.replace('@', '');\n      this.searchUser = true;\n\n    } else if (this.inputText.includes('#')) {\n      this.searchText = this.inputText.replace('#', '');\n      this.searchChannel = true;\n\n    } else {\n        this.searchChannel = false;\n        this.searchUser = false;\n\n    }\n  }\n\n\n  onOpenChannel(channelRef:string) {\n    this.channelService.unsubSglChannelChats();\n    this.channelService.subSglChannelChats(channelRef);\n    this.channelService.setSelectedChannelIndex(channelRef);\n\n    this.evtSvc.ChannelModus();\n  }\n\n\n  stopSearch() {\n    this.searchText = '';\n    this.inputText = '';\n  }\n\n}\n\n    \n\n    \n        \n  \n  @if(searchText) {\n  \n    @if(searchUser) { @for(user of this.userService.users | inputFilter :\n    searchText; track user) {\n    } @empty {\n    Niemand gefunden\n    }} @else if(searchChannel) {\n    \n      @for(channel of this.channelService.channels | inputFilter : searchText;\n      track channel) {\n      \n        {{ channel.name }}\n      \n      } @empty {\n      Kein Channel gefunden\n      }\n    \n    }\n  \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if(searchText) {      @if(searchUser) { @for(user of this.userService.users | inputFilter :    searchText; track user) {    } @empty {    Niemand gefunden    }} @else if(searchChannel) {          @for(channel of this.channelService.channels | inputFilter : searchText;      track channel) {              {{ channel.name }}            } @empty {      Kein Channel gefunden      }        }    }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchMemberInputComponent.html":{"url":"components/SearchMemberInputComponent.html","title":"component - SearchMemberInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchMemberInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/shared/search-member-input/search-member-input.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-member-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            InputFilterPipe\n                            FormsModule\n                            CommonModule\n                                WorkspaceUserProfilComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./search-member-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./search-member-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                searchText\n                            \n                            \n                                selectedMembers\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUserAsMember\n                            \n                            \n                                checkIfUserIsAleadyAdded\n                            \n                            \n                                getUserData\n                            \n                            \n                                removeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, channelService: ChannelService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/shared/search-member-input/search-member-input.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUserAsMember\n                        \n                    \n                \n            \n            \n                \naddUserAsMember(userObj: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/search-member-input/search-member-input.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userObj\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkIfUserIsAleadyAdded\n                        \n                    \n                \n            \n            \n                \ncheckIfUserIsAleadyAdded(userObj: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/search-member-input/search-member-input.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userObj\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserData\n                        \n                    \n                \n            \n            \n                \ngetUserData(userName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/search-member-input/search-member-input.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeUser\n                        \n                    \n                \n            \n            \n                \nremoveUser(i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/search-member-input/search-member-input.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/search-member-input/search-member-input.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/search-member-input/search-member-input.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedMembers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/search-member-input/search-member-input.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/search-member-input/search-member-input.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { InputFilterPipe } from '../../../pipes/input-filter.pipe';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { UserService } from '../../../services/user.service';\nimport { WorkspaceUserProfilComponent } from '../workspace-user-profil/workspace-user-profil.component';\nimport { ChannelService } from '../../../services/channel.service';\nimport { User } from '../../../models/user.class';\n\n@Component({\n  selector: 'app-search-member-input',\n  standalone: true,\n  imports: [InputFilterPipe, FormsModule, CommonModule, WorkspaceUserProfilComponent],\n  templateUrl: './search-member-input.component.html',\n  styleUrl: './search-member-input.component.scss'\n})\nexport class SearchMemberInputComponent {\n\n  searchText = '';\n  selectedMembers: User[] = [];\n\n  constructor(public userService: UserService, public channelService: ChannelService) {}\n\n\n  addUserAsMember(userObj: User) {\n\n    if(!this.checkIfUserIsAleadyAdded(userObj)) {\n      this.selectedMembers.push(userObj);\n    }\n    let inputFiled = document.getElementById('search-user-input') as HTMLInputElement;\n    if(inputFiled) {\n      inputFiled.value = '';\n    }\n    this.searchText = '';\n  }\n\n\n  getUserData(userName:string) {\n    let index = this.userService.users.findIndex(obj => obj.name === userName);\n\n    return index\n  }\n\n\n  removeUser(i:number) {\n    this.selectedMembers.splice(i, 1);\n  }\n\n\n  checkIfUserIsAleadyAdded(userObj:User) {\n    if(this.selectedMembers.findIndex(obj => obj.id === userObj.id) >= 0) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    @for(newMember of selectedMembers; track newMember.id; let index = $index) {\n    \n      \n      {{ newMember.name }}\n        \n    \n    }\n    \n  \n  @if(searchText) {\n  \n    @for(user of this.userService.users | inputFilter : searchText; track user)\n    {\n    } @empty {\n    Niemand gefunden\n    }\n  \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @for(newMember of selectedMembers; track newMember.id; let index = $index) {                {{ newMember.name }}                }        @if(searchText) {      @for(user of this.userService.users | inputFilter : searchText; track user)    {    } @empty {    Niemand gefunden    }    }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchMemberInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchService.html":{"url":"injectables/SearchService.html","title":"injectable - SearchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/search.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authService\n                            \n                            \n                                    Private\n                                channelListLoaded$\n                            \n                            \n                                    Private\n                                channelService\n                            \n                            \n                                    Private\n                                firestore\n                            \n                            \n                                foundChannelNames\n                            \n                            \n                                foundMessages\n                            \n                            \n                                foundUsers\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessageText\n                            \n                            \n                                    Async\n                                searchChannelMessages\n                            \n                            \n                                searchChannelNames\n                            \n                            \n                                searchUsers\n                            \n                            \n                                    Async\n                                startSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/search.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMessageText\n                        \n                    \n                \n            \n            \n                \ngetMessageText(message: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchChannelMessages\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchChannelMessages(searchText: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchText\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchChannelNames\n                        \n                    \n                \n            \n            \n                \nsearchChannelNames(searchText: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchText\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchUsers\n                        \n                    \n                \n            \n            \n                \nsearchUsers(searchText: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchText\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        startSearch\n                        \n                    \n                \n            \n            \n                \n                        \n                    startSearch(searchText: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchText\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/search.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channelListLoaded$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/search.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelService\n\n                    \n                \n                \n                    \n                        Default value : inject(ChannelService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/search.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/search.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        foundChannelNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/search.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        foundMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/search.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        foundUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/search.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/search.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { UserService } from './user.service';\nimport { Firestore, collection, getDocs, query, where } from '@angular/fire/firestore';\nimport { ChannelService } from './channel.service';\nimport { AuthService } from './auth.service';\nimport { BehaviorSubject } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  constructor() {\n\n  }\n  private userService: UserService = inject(UserService)\n  private firestore: Firestore = inject(Firestore);\n  private channelService: ChannelService = inject(ChannelService)\n  private authService: AuthService = inject(AuthService)\n  foundUsers: any = []\n  foundChannelNames: any = []\n  foundMessages: any = []\n  private channelListLoaded$: BehaviorSubject = new BehaviorSubject(false);\n\n  async startSearch(searchText: string) {\n    this.foundUsers = this.searchUsers(searchText)\n    this.foundChannelNames = this.searchChannelNames(searchText)\n    this.foundMessages = await this.searchChannelMessages(searchText)\nconsole.log(this.foundMessages)\n  }\n\n  searchUsers(searchText: string) {\n    const queryText = searchText.toLowerCase();\n    const foundUsers = this.userService.users.filter(user => user.name.toLowerCase().includes(queryText));\n    console.log(foundUsers)\n    return foundUsers;\n\n  }\n\n  searchChannelNames(searchText: string) {\n    const queryText = searchText.toLowerCase();\n    const foundChannels = this.channelService.channels.filter(channel => channel.name.toLowerCase().includes(queryText));\n    console.log(foundChannels)\n    return foundChannels;\n  }\n\n  async searchChannelMessages(searchText: string) {\n    const queryText = searchText.toLowerCase();\n    const currentUserID = this.authService.uid;\n    const channels = this.channelService.channels;\n    const foundMessages: any[] = [];\n\n    const promises = channels.map(async channel => {\n        const channelId = channel.id;\n        const chatCollectionRef = collection(this.firestore, `channels/${channelId}/chats`);\n        const chatQuerySnapshot = await getDocs(chatCollectionRef);\n        \n        const chatPromises = chatQuerySnapshot.docs.map(async chatDoc => {\n            const chatId = chatDoc.id;\n            const messageCollectionRef = collection(this.firestore, `channels/${channelId}/chats/${chatId}/messages`);\n            const messageQuerySnapshot = await getDocs(messageCollectionRef);\n\n            messageQuerySnapshot.forEach(messageDoc => {\n                const messageData = messageDoc.data();\n                if (messageData['message'].toLowerCase().includes(queryText)) {\n                    foundMessages.push({\n                        channel: channelId,\n                        chat: chatId,\n                        message: messageData\n                    });\n                }\n            });\n        });\n\n        await Promise.all(chatPromises);\n    });\n\n    await Promise.all(promises);\n\n  \n    return foundMessages;\n}\n\ngetMessageText(message: any): string {\n  if (typeof message === 'string') {\n      // Wenn die Nachricht bereits eine Zeichenkette ist, gib sie direkt zurück\n      return message;\n  } else if (message && message.hasOwnProperty('message')) {\n      // Wenn die Nachricht ein Objekt ist und die 'message'-Eigenschaft hat, gib den Wert dieser Eigenschaft zurück\n      return message.message;\n  } else {\n      // Andernfalls gib einfach eine leere Zeichenkette zurück oder eine Meldung, dass der Nachrichtentyp nicht unterstützt wird\n      return '';\n  }\n}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/starting-page/signup/signup.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgIf\n                            NgClass\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n            \n                styleUrl\n                ./signup.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                email\n                            \n                            \n                                loginService\n                            \n                            \n                                myForm\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                            \n                                saveVariables\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    emailError\n                                \n                                \n                                    passwordError\n                                \n                                \n                                    nameError\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, renderer: Renderer2, el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/starting-page/signup/signup.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/signup/signup.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveVariables\n                        \n                    \n                \n            \n            \n                \nsaveVariables()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/signup/signup.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signup/signup.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signup/signup.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginService\n\n                    \n                \n                \n                    \n                        Default value : inject(LoginService)\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signup/signup.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signup/signup.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signup/signup.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signup/signup.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        emailError\n                    \n                \n\n                \n                    \n                        getemailError()\n                    \n                \n                            \n                                \n                                    Defined in src/app/starting-page/signup/signup.component.ts:54\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        passwordError\n                    \n                \n\n                \n                    \n                        getpasswordError()\n                    \n                \n                            \n                                \n                                    Defined in src/app/starting-page/signup/signup.component.ts:66\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nameError\n                    \n                \n\n                \n                    \n                        getnameError()\n                    \n                \n                            \n                                \n                                    Defined in src/app/starting-page/signup/signup.component.ts:77\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Renderer2, inject } from '@angular/core';\nimport { NgClass, NgIf } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { LoginService } from '../../services/login.service';\nimport { RouterLink } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-signup',\n  standalone: true,\n  imports: [ReactiveFormsModule, NgIf, NgClass, RouterLink],\n  templateUrl: './signup.component.html',\n  styleUrl: './signup.component.scss'\n})\nexport class SignupComponent {\n  myForm: FormGroup;\n  authService: AuthService = inject(AuthService);\n  loginService: LoginService = inject(LoginService)\n  constructor(private fb: FormBuilder, private renderer: Renderer2,\n    private el: ElementRef,) {\n    this.myForm = this.fb.group({\n      email: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/)]],\n      password: ['', [Validators.required, Validators.minLength(7)]],\n      name: ['', Validators.required]\n    });\n  }\n\n  email: string = '';\n  password: string = '';\n  name: string = '';\n\n  saveVariables() {\n    this.authService.email = this.email;\n    this.authService.password = this.password;\n    this.authService.name = this.name;\n\n  }\n  onSubmit(event: Event) {\n   \n    if (this.myForm.valid) {\n      this.email = this.myForm.value['email'];\n      this.password = this.myForm.value['password'];\n      this.name = this.myForm.value['name'];\n      this.saveVariables();\n      this.loginService.toggleToPicture();\n    }\n  }\n\n\n\n\n  get emailError() {\n    const emailControl = this.myForm.get('email');\n    const value = emailControl?.value as string;\n    if (emailControl?.hasError('required')) {\n      return '*Bitte geben Sie Ihre E-Mail-Adresse ein';\n    }\n    if (emailControl?.hasError('pattern')) {\n      return '*Diese E-Mail-Adresse ist leider ungültig';\n    }\n    return '';\n  }\n\n  get passwordError() {\n    const passwordControl = this.myForm.get('password');\n    if (passwordControl?.hasError('required')) {\n      return '*Bitte geben Sie ein Password ein';\n    }\n    if (passwordControl?.hasError('minlength')) {\n      return '*Das Passwort muss mindestens 7 Zeichen enthalten';\n    }\n    return '';\n  }\n\n  get nameError() {\n    const nameControl = this.myForm.get('name');\n    if (nameControl?.hasError('required')) {\n      return '*Bitte geben Sie Ihren Namen ein';\n    }\n    return '';\n  }\n}\n\n\n    \n\n    \n        \n\n\n    Konto erstellen\n    Mit deinem Namen und deiner E-Mail-Adresse hast du dein neues DABubble-Konto.\n\n    \n        \n        \n    \n    \n        {{ nameError }}\n    \n\n    \n        \n        \n    \n    \n        {{ emailError }}\n    \n    \n        {{ authService.registerError }}\n    \n\n    \n        \n        \n    \n    \n        {{ passwordError }}\n    \n\n    \n        Anmelden\n    \n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Konto erstellen    Mit deinem Namen und deiner E-Mail-Adresse hast du dein neues DABubble-Konto.                                    {{ nameError }}                                        {{ emailError }}                {{ authService.registerError }}                                        {{ passwordError }}                Anmelden        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignuppictureComponent.html":{"url":"components/SignuppictureComponent.html","title":"component - SignuppictureComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignuppictureComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/starting-page/signuppicture/signuppicture.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signuppicture\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgFor\n                \n            \n\n            \n                styleUrls\n                ./signuppicture.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./signuppicture.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                loginService\n                            \n                            \n                                    Public\n                                overlayService\n                            \n                            \n                                pictures\n                            \n                            \n                                signingIn\n                            \n                            \n                                signupForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                register\n                            \n                            \n                                selectPicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, renderer: Renderer2, authService: AuthService, router: Router, overlayService: OverlayService, loginService: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/starting-page/signuppicture/signuppicture.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        overlayService\n                                                  \n                                                        \n                                                                        OverlayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/signuppicture/signuppicture.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectPicture\n                        \n                    \n                \n            \n            \n                \nselectPicture(i: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/signuppicture/signuppicture.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                i\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signuppicture/signuppicture.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loginService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signuppicture/signuppicture.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        overlayService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OverlayService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signuppicture/signuppicture.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pictures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"./../../../assets/img/profils/avatar_1.svg\",\n    \"./../../../assets/img/profils/avatar_2.svg\",\n    \"./../../../assets/img/profils/avatar_3.svg\",\n    \"./../../../assets/img/profils/avatar_4.svg\",\n    \"./../../../assets/img/profils/avatar_5.svg\",\n    \"./../../../assets/img/profils/avatar_6.svg\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signuppicture/signuppicture.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signingIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signuppicture/signuppicture.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signupForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signuppicture/signuppicture.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Renderer2 } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms'; // Nur die benötigten Teile aus dem @angular/forms importieren\nimport { NgFor } from '@angular/common';\nimport { OverlayService } from '../../services/overlay.service';\nimport { LoginService } from '../../services/login.service';\n\n@Component({\n  selector: 'app-signuppicture',\n  imports: [NgFor],\n  standalone: true,\n  templateUrl: './signuppicture.component.html',\n  styleUrls: ['./signuppicture.component.scss'] // 'styleUrls' anstatt 'styleUrl'\n})\nexport class SignuppictureComponent {\n  signingIn = false;\n  signupForm: FormGroup; // Formulargruppe deklarieren\n  pictures = [\n    \"./../../../assets/img/profils/avatar_1.svg\",\n    \"./../../../assets/img/profils/avatar_2.svg\",\n    \"./../../../assets/img/profils/avatar_3.svg\",\n    \"./../../../assets/img/profils/avatar_4.svg\",\n    \"./../../../assets/img/profils/avatar_5.svg\",\n    \"./../../../assets/img/profils/avatar_6.svg\"];\n  constructor(private fb: FormBuilder, private renderer: Renderer2, public authService: AuthService, private router: Router, public overlayService: OverlayService, public loginService:LoginService) {\n    this.authService = authService;\n    \n    this.router = router;\n    \n    this.signupForm = this.fb.group({\n      // Definieren Sie hier Ihre Formularsteuerelemente\n    });\n  }\n\n  async register() {\n    try {\n      this.signingIn = true;\n      await this.authService.register();\n      this.signingIn = false;\nthis.loginService.toggleLogin()\n    } catch (error: any) {\n      if (error.code === 'auth/email-already-in-use') {\n        this.overlayService.showOverlayError('E-Mail bereits vergeben');\n        setTimeout(() => {\n          this.overlayService.hideOverlay()\n          this.loginService.toggleToPicture()\n        }, 3000);\n        this.signingIn = false;\n      }\n    }\n  }\n\n  selectPicture(i:string){\n    this.authService.photoURL = i\n  }\n}\n    \n\n    \n        \n    Wähle deinen Avatar\n    \n        \n    \n    {{this.authService.name}}\n    Aus der Liste wählen\n    \n        \n            \n        \n    \n    \n        eigenes Bild verwenden\n        Datei hochladen\n    \n    \n    \n        Weiter\n    \n\n\n\n\n    \n\n    \n                \n                    ./signuppicture.component.scss\n                \n                @import \"./../starting-page.component.scss\";\n\n.choosenPicture {\n    height: 168px;\n    width: 168px;\n    border-radius: 100%;\n    overflow: hidden;\n    img{\n        height: 100%;\n    }\n\n}\n\n.standardPictures {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    gap: 12px;\nmargin-bottom: 44px;\n    div {\n        height: 72px;\n        width: 72px;\n        padding: 4px;\n        border-radius: 100%;\n        cursor: pointer;\n        display: flex;\n        object-fit: cover;\n\n        &:hover {\n            background-color: #E6E6E6;\n        }\n        &:active{\n            background-color: black;\n        }\n    }\n}\n\n.ownPicture{\n    display: flex;\n    align-items: center;\n    gap: 24px;\n    width: 100%;\n    justify-content: flex-start;\n    margin-bottom: 21px;\n    p{\n        margin: 0;\n    }\n}\n\n.buttonContainer{\n    width: 100%;\n    display: flex;\n    justify-content: end;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Wähle deinen Avatar                    {{this.authService.name}}    Aus der Liste wählen                                                eigenes Bild verwenden        Datei hochladen                    Weiter    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignuppictureComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StartAnimationComponent.html":{"url":"components/StartAnimationComponent.html","title":"component - StartAnimationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StartAnimationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/starting-page/start-animation/start-animation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-start-animation\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./start-animation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./start-animation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAnimatedOnce\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animateStage1\n                            \n                            \n                                animateStage2\n                            \n                            \n                                animateStage3\n                            \n                            \n                                animateStage4\n                            \n                            \n                                applyFinalAnimationStates\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setBodyOverflowHidden\n                            \n                            \n                                startAnimation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, animationStateService: AnimationStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/starting-page/start-animation/start-animation.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationStateService\n                                                  \n                                                        \n                                                                        AnimationStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animateStage1\n                        \n                    \n                \n            \n            \n                \nanimateStage1()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/start-animation/start-animation.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animateStage2\n                        \n                    \n                \n            \n            \n                \nanimateStage2()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/start-animation/start-animation.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animateStage3\n                        \n                    \n                \n            \n            \n                \nanimateStage3()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/start-animation/start-animation.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animateStage4\n                        \n                    \n                \n            \n            \n                \nanimateStage4()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/start-animation/start-animation.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyFinalAnimationStates\n                        \n                    \n                \n            \n            \n                \napplyFinalAnimationStates()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/start-animation/start-animation.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/start-animation/start-animation.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBodyOverflowHidden\n                        \n                    \n                \n            \n            \n                \nsetBodyOverflowHidden(hidden: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/start-animation/start-animation.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hidden\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startAnimation\n                        \n                    \n                \n            \n            \n                \nstartAnimation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/start-animation/start-animation.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isAnimatedOnce\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/start-animation/start-animation.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Renderer2 } from '@angular/core';\nimport { NgClass } from '@angular/common';\nimport { AnimationStateService } from '../../services/animation-state.service';\n@Component({\n  selector: 'app-start-animation',\n  standalone: true,\n  imports: [NgClass],\n  templateUrl: './start-animation.component.html',\n  styleUrl: './start-animation.component.scss'\n})\nexport class StartAnimationComponent {\nisAnimatedOnce: boolean = false;\n \n  constructor( private renderer: Renderer2,\n    private animationStateService: AnimationStateService) {}\n    ngOnInit() {\n      console.log(this.animationStateService.isAnimatedOnce)\n      if (!this.animationStateService.isAnimatedOnce) {\n        this.setBodyOverflowHidden(true);\n        this.startAnimation();\n        this.animationStateService.isAnimatedOnce = true; // Update the service state\n      }\n      else{\n        this.applyFinalAnimationStates();\n      }\n    }\n  startAnimation() {\n    setTimeout(() => this.animateStage1(), 1000);\n    setTimeout(() => this.animateStage2(), 2500); \n   setTimeout(() => this.animateStage3(), 3500); \n  setTimeout(() => this.animateStage4(), 4500); \n  }\n\n  animateStage1() {\n    const imgContainer = document.querySelector('.img-container');\n    if (imgContainer) {\n      this.renderer.addClass(imgContainer, 'left');\n    }\n  }\n\n  animateStage2() {\n    const textContainerP = document.querySelector('.text-container p');\n    if (textContainerP) {\n      this.renderer.addClass(textContainerP, 'right');\n    }\n  }\n\n  animateStage3() {\n    const logoContainer = document.querySelector('.logo-container');\n    const imgContainer = document.querySelector('.img-container');\n    const textContainer = document.querySelector('.text-container');\n    const textContainerP = document.querySelector('.text-container p');\n    const background = document.querySelector('.background');\n    if (logoContainer) {\n      this.renderer.addClass(logoContainer, 'moveOnTop');\n    }\n    if (imgContainer) {\n      this.renderer.addClass(imgContainer, 'width');\n    }\n    if (textContainer) {\n      this.renderer.addClass(textContainer, 'text-container-width');\n    }\n    if (textContainerP) {\n      this.renderer.addClass(textContainerP, 'fontSize');\n    }\n    if (background) {\n      this.renderer.addClass(background, 'opacity');\n    }\n  }\n\n  animateStage4() {\n    this.setBodyOverflowHidden(false);\n    this.animationStateService.isAnimatedOnce = true;\n    const background = document.querySelector('.background');\n    if (background) {\n      this.renderer.addClass(background, 'd-none');\n    }\n  }\n\n  setBodyOverflowHidden(hidden: boolean) {\n    if (hidden) {\n      this.renderer.setStyle(document.body, 'overflow', 'hidden');\n    } else {\n      this.renderer.removeStyle(document.body, 'overflow');\n    }\n  }\n\n  applyFinalAnimationStates() {\n    const elementsWithClasses = [\n      { selector: '.img-container', className: 'left' },\n      { selector: '.text-container p', className: 'right' },\n      { selector: '.logo-container', className: 'moveOnTop' },\n      { selector: '.img-container', className: 'width' },\n      { selector: '.text-container', className: 'text-container-width' },\n      { selector: '.text-container p', className: 'fontSize' },\n      { selector: '.background', className: 'opacity' },\n      { selector: '.background', className: 'd-none' }\n    ];\n\n    // Disable transitions\n    const body = document.body;\n    this.renderer.setStyle(body, 'transition', 'none');\n\n    elementsWithClasses.forEach(item => {\n      const element = document.querySelector(item.selector);\n      if (element) {\n        this.renderer.addClass(element, item.className);\n      }\n    });\n\n    // Force reflow\n    body.offsetHeight;\n\n    // Re-enable transitions\n    this.renderer.removeStyle(body, 'transition');\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    DaBubble\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              DaBubble  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StartAnimationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StartingPageComponent.html":{"url":"components/StartingPageComponent.html","title":"component - StartingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StartingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/starting-page/starting-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-starting-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                SignupComponent\n                                ForgotPasswordComponent\n                                LoginComponent\n                                SignuppictureComponent\n                                UploadFormComponent\n                            FormsModule\n                            NgIf\n                            RouterLink\n                                StartAnimationComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./starting-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./starting-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                guestUserService\n                            \n                            \n                                loginService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/starting-page/starting-page.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/starting-page.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/starting-page.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guestUserService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GuestUserService\n\n                    \n                \n                \n                    \n                        Default value : inject(GuestUserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/starting-page.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginService\n\n                    \n                \n                \n                    \n                        Default value : inject(LoginService)\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/starting-page.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/starting-page.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { SignuppictureComponent } from './signuppicture/signuppicture.component';\nimport { UploadFormComponent } from './signuppicture/upload-form/upload-form.component';\nimport { Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { FormsModule } from '@angular/forms';\nimport { NgIf } from '@angular/common';\nimport { LoginService } from '../services/login.service';\nimport { StartAnimationComponent } from './start-animation/start-animation.component';\nimport { GuestUserService } from '../services/guest-user.service';\n\n\n@Component({\n  selector: 'app-starting-page',\n  standalone: true,\n  imports: [\n    SignupComponent,\n    ForgotPasswordComponent,\n    LoginComponent,\n    SignuppictureComponent,\n    UploadFormComponent,\n    FormsModule,\n    NgIf,\n    RouterLink,\n    StartAnimationComponent\n  ],\n  templateUrl: './starting-page.component.html',\n  styleUrl: './starting-page.component.scss'\n})\n\nexport class StartingPageComponent {\n\n  constructor(public router: Router) { }\n  authService: AuthService = inject(AuthService);\n  loginService: LoginService = inject(LoginService);\n guestUserService: GuestUserService = inject(GuestUserService)\n\n ngOnInit(){\n  this.guestUserService.deleteOldGuests()\n }\n}\n\n    \n\n    \n        \n\n  \n    \n        Neu be DABubble?\n        Konto erstellen\n    \n\n\n    \n    \n    \n    \n    \n    \n        Impressum\n        Datenschutz\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Neu be DABubble?        Konto erstellen                                    Impressum        Datenschutz    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StartingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextareaMainPageComponent.html":{"url":"components/TextareaMainPageComponent.html","title":"component - TextareaMainPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextareaMainPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-textarea-main-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            PickerComponent\n                            MatMenuModule\n                            EmojiComponent\n                            NgFor\n                                WorkspaceUserProfilComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./textarea-main-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./textarea-main-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                    Public\n                                chatService\n                            \n                            \n                                    Public\n                                fileUploadService\n                            \n                            \n                                message\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEmoji\n                            \n                            \n                                deleteFile\n                            \n                            \n                                highlightUser\n                            \n                            \n                                onEnterKeyPressed\n                            \n                            \n                                setTextfieldStatus\n                            \n                            \n                                submitMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onChannelBoard\n                            \n                            \n                                onNewMsgBoard\n                            \n                            \n                                onPrivatTextarea\n                            \n                            \n                                onThreadBoard\n                            \n                            \n                                textfieldOnUploadChannel\n                            \n                            \n                                textfieldOnUploadChat\n                            \n                            \n                                textfieldOnUploadThread\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                TextfieldStatus\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(channelService: ChannelService, authService: AuthService, fileUploadService: FileUploadService, chatService: ChatService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileUploadService\n                                                  \n                                                        \n                                                                        FileUploadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onChannelBoard\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onNewMsgBoard\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onPrivatTextarea\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onThreadBoard\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        textfieldOnUploadChannel\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        textfieldOnUploadChat\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        textfieldOnUploadThread\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:36\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        TextfieldStatus\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:33\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEmoji\n                        \n                    \n                \n            \n            \n                \naddEmoji($event: EmojiEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        EmojiEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFile\n                        \n                    \n                \n            \n            \n                \ndeleteFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highlightUser\n                        \n                    \n                \n            \n            \n                \nhighlightUser(memberRef: string, memberName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                memberRef\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                memberName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEnterKeyPressed\n                        \n                    \n                \n            \n            \n                \nonEnterKeyPressed(event: Event, ngForm: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ngForm\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTextfieldStatus\n                        \n                    \n                \n            \n            \n                \nsetTextfieldStatus(state: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitMessage\n                        \n                    \n                \n            \n            \n                \nsubmitMessage(ngForm: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ngForm\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chatService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fileUploadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileUploadService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message\n\n                    \n                \n                \n                    \n                        Default value : new Message()\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Message } from '../../../models/message.class';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { ChannelService } from '../../../services/channel.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { PickerComponent } from '@ctrl/ngx-emoji-mart';\nimport {MatMenuModule} from '@angular/material/menu';\nimport { EmojiComponent, EmojiEvent } from '@ctrl/ngx-emoji-mart/ngx-emoji';\nimport { FileUploadService } from '../../../services/fileupload.service';\nimport { NgFor } from '@angular/common';\nimport { ChatService } from '../../../services/chat.service';\nimport { WorkspaceUserProfilComponent } from '../workspace-user-profil/workspace-user-profil.component';\nimport { UserService } from '../../../services/user.service';\nimport { CommonModule } from '@angular/common';\n\n\n@Component({\n  selector: 'app-textarea-main-page',\n  standalone: true,\n  imports: [FormsModule, PickerComponent, MatMenuModule, EmojiComponent, NgFor, WorkspaceUserProfilComponent, CommonModule],\n  templateUrl: './textarea-main-page.component.html',\n  styleUrl: './textarea-main-page.component.scss'\n})\nexport class TextareaMainPageComponent {\n\n  message: Message = new Message();\n\n\n  @Input() onChannelBoard:boolean = false;\n  @Input() onThreadBoard:boolean = false;\n  @Input() onPrivatTextarea = false;\n  @Input() onNewMsgBoard = false;\n  @Output() TextfieldStatus: EventEmitter = new EventEmitter();\n  @Input() textfieldOnUploadChannel:boolean = false;\n  @Input() textfieldOnUploadChat:boolean = false;\n  @Input() textfieldOnUploadThread:boolean = false;\n\n  constructor(public channelService: ChannelService, private authService: AuthService, public fileUploadService: FileUploadService, public chatService: ChatService, public userService: UserService) { \n  }\n\n\n  submitMessage(ngForm: NgForm) {\n    if (this.fileUploadService.uploadedFiles.length > 0 || this.message.message.trim() !== '') { \n      this.message.member = this.authService.uid;\n      this.message.timestamp = Date.now();\n\n      this.fileUploadService.uploadedFiles.map(fileInfo => (\n        this.message.uploadedFile = [fileInfo.file.name, fileInfo.downloadURL]\n          // an dieser Stelle noch docRef vergeben!\n        ));\n        \n        if (this.onChannelBoard) {\n          this.channelService.startNewChat({ timestamp: this.message.timestamp }, this.channelService.toJSONmessage(this.message));\n        } else if (this.onThreadBoard) {\n          const selectedChat = this.channelService.selectedChannelChats[this.channelService.selChatIndex];\n          if (selectedChat && selectedChat.chatId) {\n            this.channelService.addMessageToChat(this.channelService.toJSONmessage(this.message), selectedChat.chatId);\n          }\n        } else if(this.onPrivatTextarea) {\n            this.chatService.addMessageToPrivateChat(this.chatService.toJSONmessage(this.message), this.chatService.privateChats[this.chatService.selChatIndex].chatId); \n        }\n\n        ngForm.resetForm();\n        \n        if(this.fileUploadService.uploadedFiles) {\n          this.fileUploadService.uploadedFiles = [];\n        }\n        this.setTextfieldStatus(false);\n     \n    } else {\n      console.log('Ungültige Eingabe');\n    }\n  }\n\n\n  deleteFile() {\n    this.fileUploadService.deleteFile();\n    this.setTextfieldStatus(false);\n  }\n\n  onEnterKeyPressed(event: Event, ngForm: NgForm) {\n    if (!(event as KeyboardEvent).shiftKey && (event as KeyboardEvent).key === 'Enter') {\n    event.preventDefault();\n      this.submitMessage(ngForm);\n    }\n  }\n\n\n  addEmoji($event: EmojiEvent) {\n      if($event.emoji.native)\n      this.message.message += $event.emoji.native;\n  }\n\n\n  setTextfieldStatus(state: boolean) {\n    this.TextfieldStatus.emit(state);\n  }\n\n\n  highlightUser(memberRef: string, memberName: string) {\n    this.message.message = `@${memberName}`;\n  }\n\n  \n}\n\n    \n\n    \n        \n  \n    \n\n    \n    \n      @if(this.fileUploadService.uploadedFiles[0] && textfieldOnUploadChannel ==\n      true) {\n      \n        {{ this.fileUploadService.uploadedFiles[0].file.name }}\n\n        \n      \n      } @else if(this.fileUploadService.uploadedFiles[0] &&\n      textfieldOnUploadThread == true) {\n      \n        {{ this.fileUploadService.uploadedFiles[0].file.name }}\n        \n      \n      } @else if(this.fileUploadService.uploadedFiles[0] &&\n      textfieldOnUploadChat == true) {\n      \n        {{ this.fileUploadService.uploadedFiles[0].file.name }}\n        \n      \n      }\n    \n\n    \n    \n      \n        \n        \n        \n        \n          \n        \n        @if(onChannelBoard || onThreadBoard) {\n        \n          \n            @if(this.channelService.channels[this.channelService.selectedChannel])\n            {\n            \n              @for (member of\n              this.channelService.channels[this.channelService.selectedChannel].members;\n              track member[0]; let index = $index) {\n              \n              }\n            \n            }\n          \n        \n        }\n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @if(this.fileUploadService.uploadedFiles[0] && textfieldOnUploadChannel ==      true) {              {{ this.fileUploadService.uploadedFiles[0].file.name }}                    } @else if(this.fileUploadService.uploadedFiles[0] &&      textfieldOnUploadThread == true) {              {{ this.fileUploadService.uploadedFiles[0].file.name }}                    } @else if(this.fileUploadService.uploadedFiles[0] &&      textfieldOnUploadChat == true) {              {{ this.fileUploadService.uploadedFiles[0].file.name }}                    }                                                                            @if(onChannelBoard || onThreadBoard) {                              @if(this.channelService.channels[this.channelService.selectedChannel])            {                          @for (member of              this.channelService.channels[this.channelService.selectedChannel].members;              track member[0]; let index = $index) {                            }                        }                          }                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextareaMainPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThreadBoardComponent.html":{"url":"components/ThreadBoardComponent.html","title":"component - ThreadBoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThreadBoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/thread-board/thread-board.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-thread-board\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                TextareaMainPageComponent\n                                MessageLeftComponent\n                                MessageRightComponent\n                                TimeSeparatorComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./thread-board.component.html\n            \n\n\n\n            \n                styleUrl\n                ./thread-board.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                textfieldOnUpload\n                            \n                            \n                                threadBoard\n                            \n                            \n                                    \n                                    Optional\n                                threadChatsContainerRef\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCloseThread\n                            \n                            \n                                scrollToBottom\n                            \n                            \n                                setTextfieldStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(evtSvc: EventService, channelService: ChannelService, userService: UserService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/thread-board/thread-board.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        evtSvc\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCloseThread\n                        \n                    \n                \n            \n            \n                \nonCloseThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread-board/thread-board.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToBottom\n                        \n                    \n                \n            \n            \n                \nscrollToBottom()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread-board/thread-board.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTextfieldStatus\n                        \n                    \n                \n            \n            \n                \nsetTextfieldStatus(event: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread-board/thread-board.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread-board/thread-board.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread-board/thread-board.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textfieldOnUpload\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread-board/thread-board.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        threadBoard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread-board/thread-board.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        threadChatsContainerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('threadChatsContainer')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread-board/thread-board.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread-board/thread-board.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { TextareaMainPageComponent } from '../shared/textarea-main-page/textarea-main-page.component';\nimport { MessageLeftComponent } from '../shared/message-left/message-left.component';\nimport { MessageRightComponent } from '../shared/message-right/message-right.component';\nimport { EventService } from '../../services/event.service';\nimport { ChannelService } from '../../services/channel.service';\nimport { UserService } from '../../services/user.service';\nimport { AuthService } from '../../services/auth.service';\nimport { TimeSeparatorComponent } from '../shared/time-separator/time-separator.component';\n\n@Component({\n  selector: 'app-thread-board',\n  standalone: true,\n  imports: [TextareaMainPageComponent, MessageLeftComponent, MessageRightComponent, TimeSeparatorComponent],\n  templateUrl: './thread-board.component.html',\n  styleUrl: './thread-board.component.scss'\n})\nexport class ThreadBoardComponent {\n\n  threadBoard = true;\n  textfieldOnUpload = false;\n\n  @ViewChild('threadChatsContainer') threadChatsContainerRef?: ElementRef;\n\n  constructor(private evtSvc: EventService, public channelService: ChannelService, public userService: UserService, public authService: AuthService) {}\n\n\n  onCloseThread() {\n    this.evtSvc.openThread(false);\n\n    if (window.innerWidth > 792 && window.innerWidth \n    \n\n    \n        \n  Thread\n    {{\n      this.channelService.channels[this.channelService.selectedChannel].name\n    }}\n  \n\n\n\n\n\n  @if(this.channelService.selectedChannelChats[this.channelService.selChatIndex])\n  { @for(message of\n  this.channelService.selectedChannelChats[this.channelService.selChatIndex].allMessages;\n  track index; let index = $index; let last = $last) {\n\n  \n  @if(message.messageId ===\n  this.channelService.selectedChannelChats[this.channelService.selChatIndex].allMessages[0].messageId\n  ||\n  this.channelService.getDate(this.channelService.selectedChannelChats[this.channelService.selChatIndex].allMessages[index\n  - 1].timestamp) !== this.channelService.getDate(message.timestamp)) {\n  @if(this.channelService.isToday(message.timestamp)) {\n  \n  } @else {\n  \n  }}\n\n  \n  @if(message.member !== this.authService.uid) { @if(last) {\n  } @else {\n  \n  } } @else { @if(last) {\n  } @else {\n  \n  } }\n\n  \n  @if(message.messageId ===\n  this.channelService.selectedChannelChats[this.channelService.selChatIndex].allMessages[0].messageId\n  &&\n  this.channelService.selectedChannelChats[this.channelService.selChatIndex].allMessages.length\n  > 1) {\n  \n    \n      {{\n        this.channelService.selectedChannelChats[\n          this.channelService.selChatIndex\n        ].allMessages.length - 1\n      }}\n      Antworten\n    \n    \n  \n  }}}\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Thread    {{      this.channelService.channels[this.channelService.selectedChannel].name    }}    @if(this.channelService.selectedChannelChats[this.channelService.selChatIndex])  { @for(message of  this.channelService.selectedChannelChats[this.channelService.selChatIndex].allMessages;  track index; let index = $index; let last = $last) {    @if(message.messageId ===  this.channelService.selectedChannelChats[this.channelService.selChatIndex].allMessages[0].messageId  ||  this.channelService.getDate(this.channelService.selectedChannelChats[this.channelService.selChatIndex].allMessages[index  - 1].timestamp) !== this.channelService.getDate(message.timestamp)) {  @if(this.channelService.isToday(message.timestamp)) {    } @else {    }}    @if(message.member !== this.authService.uid) { @if(last) {  } @else {    } } @else { @if(last) {  } @else {    } }    @if(message.messageId ===  this.channelService.selectedChannelChats[this.channelService.selChatIndex].allMessages[0].messageId  &&  this.channelService.selectedChannelChats[this.channelService.selChatIndex].allMessages.length  > 1) {            {{        this.channelService.selectedChannelChats[          this.channelService.selChatIndex        ].allMessages.length - 1      }}      Antworten            }}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThreadBoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeSeparatorComponent.html":{"url":"components/TimeSeparatorComponent.html","title":"component - TimeSeparatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TimeSeparatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/shared/time-separator/time-separator.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-time-separator\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./time-separator.component.html\n            \n\n\n\n            \n                styleUrl\n                ./time-separator.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                forDate\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        forDate\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/time-separator/time-separator.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-time-separator',\n  standalone: true,\n  imports: [],\n  templateUrl: './time-separator.component.html',\n  styleUrl: './time-separator.component.scss'\n})\nexport class TimeSeparatorComponent {\n\n  @Input() forDate: string = '';\n\n}\n\n    \n\n    \n        \n  \n  {{ forDate }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ forDate }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimeSeparatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadFormComponent.html":{"url":"components/UploadFormComponent.html","title":"component - UploadFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UploadFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/starting-page/signuppicture/upload-form/upload-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-upload-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ImageCropperModule\n                            NgIf\n                            HammerModule\n                            MatProgressBarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./upload-form.component.html\n            \n\n\n\n            \n                styleUrl\n                ./upload-form.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                croppedImage\n                            \n                            \n                                imageChangedEvent\n                            \n                            \n                                isUploaded\n                            \n                            \n                                isUploading\n                            \n                            \n                                loginService\n                            \n                            \n                                randomPath\n                            \n                            \n                                storage\n                            \n                            \n                                storageRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cropperReady\n                            \n                            \n                                fileChangeEvent\n                            \n                            \n                                imageCropped\n                            \n                            \n                                imageLoaded\n                            \n                            \n                                loadImageFailed\n                            \n                            \n                                setUploadedToFalse\n                            \n                            \n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/starting-page/signuppicture/upload-form/upload-form.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cropperReady\n                        \n                    \n                \n            \n            \n                \ncropperReady()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/signuppicture/upload-form/upload-form.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileChangeEvent\n                        \n                    \n                \n            \n            \n                \nfileChangeEvent(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/signuppicture/upload-form/upload-form.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageCropped\n                        \n                    \n                \n            \n            \n                \nimageCropped(event: ImageCroppedEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/signuppicture/upload-form/upload-form.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        ImageCroppedEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageLoaded\n                        \n                    \n                \n            \n            \n                \nimageLoaded(image: LoadedImage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/signuppicture/upload-form/upload-form.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                image\n                                            \n                                                        LoadedImage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadImageFailed\n                        \n                    \n                \n            \n            \n                \nloadImageFailed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/signuppicture/upload-form/upload-form.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUploadedToFalse\n                        \n                    \n                \n            \n            \n                \nsetUploadedToFalse()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/signuppicture/upload-form/upload-form.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n            \n                \nupload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-page/signuppicture/upload-form/upload-form.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signuppicture/upload-form/upload-form.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        croppedImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signuppicture/upload-form/upload-form.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageChangedEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signuppicture/upload-form/upload-form.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUploaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signuppicture/upload-form/upload-form.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUploading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signuppicture/upload-form/upload-form.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoginService\n\n                    \n                \n                \n                    \n                        Default value : inject(LoginService)\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signuppicture/upload-form/upload-form.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Math.random().toString(36).substring(2)\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signuppicture/upload-form/upload-form.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getStorage()\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signuppicture/upload-form/upload-form.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storageRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ref(this.storage, this.randomPath)\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-page/signuppicture/upload-form/upload-form.component.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { AuthService } from '../../../services/auth.service';\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { ImageCropperModule } from 'ngx-image-cropper';\nimport { ImageCroppedEvent, LoadedImage } from 'ngx-image-cropper';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { HammerModule } from '@angular/platform-browser';\nimport { NgIf } from '@angular/common';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { LoginService } from '../../../services/login.service';\n\n@Component({\n  selector: 'app-upload-form',\n  standalone: true,\n  imports: [ImageCropperModule, NgIf, HammerModule, MatProgressBarModule],\n  templateUrl: './upload-form.component.html',\n  styleUrl: './upload-form.component.scss'\n})\nexport class UploadFormComponent {\n  authService: AuthService = inject(AuthService);\n  loginService: LoginService = inject(LoginService)\n\n\n  imageChangedEvent: any = '';\n  croppedImage: any = '';\n\n  constructor(\n    private sanitizer: DomSanitizer\n  ) {\n  }\n\n  setUploadedToFalse(){\n    this.isUploaded=false\n  }\n  fileChangeEvent(event: any): void {\n   \n    this.imageChangedEvent = event;\n  }\n  imageCropped(event: ImageCroppedEvent) {\n    if (event.objectUrl) {\n      this.croppedImage = this.sanitizer.bypassSecurityTrustUrl(event.objectUrl);\n\n      // event.blob can be used to upload the cropped image\n    }\n  }\n  imageLoaded(image: LoadedImage) {\n    // show cropper\n  }\n  cropperReady() {\n    // cropper ready\n  }\n  loadImageFailed() {\n    // show message\n  }\n\n  storage = getStorage();\n  randomPath = Math.random().toString(36).substring(2);\n  storageRef = ref(this.storage, this.randomPath);\n  isUploading: boolean = false;\n  isUploaded:boolean = false;\n\n\n\n  upload() {\n    fetch(this.croppedImage.changingThisBreaksApplicationSecurity)\n      .then(response => response.blob())\n      .then(blob => {\n        this.isUploading = true;\n        uploadBytes(this.storageRef, blob).then((snapshot) => {\n          this.isUploading=false;\n          this.isUploaded=true;\n          // Zuweisung der photoURL-Eigenschaft nach Abschluss des Uploads\n          getDownloadURL(snapshot.ref).then((downloadURL) => {\n            this.authService.photoURL = downloadURL;\n          });\n  \n        }).catch((error) => {\n          console.error(\"Fehler beim Hochladen des Bildes:\", error);\n          this.isUploading=false;\n          this.isUploaded=true;\n        });\n      })\n      .catch(error => {\n        console.error(\"Fehler beim Extrahieren des Blobs:\", error);\n        this.isUploading=false;\n        this.isUploaded=true;\n      });\n  }\n}\n\n    \n\n    \n        \n\n    \n    Profilfoto\n    \n    \n    \n\n    \n    Hochladen\n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Profilfoto                    Hochladen    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UploadFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chatRefs\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                photoURL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/user.class.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chatRefs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.class.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.class.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.class.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.class.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photoURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.class.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    id: string;\n    name: string;\n    email: string;\n    photoURL: string;\n    chatRefs: string []\n\n\n    constructor(obj?:any) {\n        this.id = obj ? obj.id : '';\n        this.name = obj ? obj.name : '';\n        this.email = obj ? obj.email : '';\n        this.photoURL = obj ? obj.photoURL : '';\n        this.chatRefs = obj && obj.chatRefs? obj.chatRefs : [];\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUserData\n                            \n                            \n                                firestore\n                            \n                            \n                                selectedUser\n                            \n                            \n                                unsubUsers\n                            \n                            \n                                users\n                            \n                            \n                                usersName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterCurrentUser\n                            \n                            \n                                getPartnerId\n                            \n                            \n                                getUsersData\n                            \n                            \n                                ngonDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setUserObject\n                            \n                            \n                                subUsersList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterCurrentUser\n                        \n                    \n                \n            \n            \n                \nfilterCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPartnerId\n                        \n                    \n                \n            \n            \n                \ngetPartnerId(members: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                members\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersData\n                        \n                    \n                \n            \n            \n                \ngetUsersData(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngonDestroy\n                        \n                    \n                \n            \n            \n                \nngonDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserObject\n                        \n                    \n                \n            \n            \n                \nsetUserObject(obj: any, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: string; name: any; email: any; photoURL: any; chatRefs: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subUsersList\n                        \n                    \n                \n            \n            \n                \nsubUsersList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubUsers\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/services/user.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usersName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { Firestore, onSnapshot, collection, addDoc, doc, updateDoc, deleteDoc } from '@angular/fire/firestore';\nimport { User } from '../models/user.class';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  firestore: Firestore = inject(Firestore);\n\n  users: User[] = [];\n  usersName: string[] = [];\n  selectedUser: number = 0;\n  currentUserData: User | undefined;\n  unsubUsers;\n  //unsubCurrentUser;\n\n  constructor(private authService: AuthService) {\n    this.unsubUsers = this.subUsersList();\n    // this.unsubCurrentUser = this.subCurrentUser();\n  }\n\n  ngOnInit() {\n    console.log('Users are ', this.users);\n  }\n\n  subUsersList() {\n    return onSnapshot(collection(this.firestore, 'users'), (list) => {\n      this.users = [];\n      this.usersName = [];\n      list.forEach(element => {\n        this.users.push(this.setUserObject(element.data(), element.id),);\n        this.usersName.push(element.data()['name']);\n      })\n      this.filterCurrentUser();\n    });\n  }\n\n  /*subCurrentUser() {\n    console.log(this.authService.currentUser?.uid);\n    if (this.authService.currentUser?.uid) {\n      return onSnapshot(doc(collection(this.firestore, 'users'), this.authService.currentUser.uid), (doc) => {\n        console.log(doc.data());\n      }\n      )\n    };\n  } */\n\n\n  setUserObject(obj: any, id: string) {\n    return {\n      id: id,\n      name: obj.name,\n      email: obj.email || '',\n      photoURL: obj.photoURL || '',\n      chatRefs: obj.chatRefs || []\n    };\n  }\n\n\n  ngonDestroy() {\n    this.unsubUsers();\n  }\n\n\n  getUsersData(id: string) {\n    let index = this.users.findIndex(obj => obj.id === id);\n    return index;\n  }\n  \n\n  filterCurrentUser() {\n    if (this.users) {\n\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkspaceMenuComponent.html":{"url":"components/WorkspaceMenuComponent.html","title":"component - WorkspaceMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WorkspaceMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/workspace-menu/workspace-menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-workspace-menu\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                WorkspaceUserProfilComponent\n                            MatDialogModule\n                                SearchInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./workspace-menu.component.html\n            \n\n\n\n            \n                styleUrl\n                ./workspace-menu.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                channelListOpen\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                chats\n                            \n                            \n                                    Public\n                                chatService\n                            \n                            \n                                    Private\n                                chatSubscription\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                messageListOpen\n                            \n                            \n                                    Public\n                                usersService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onOpenChannel\n                            \n                            \n                                onOpenNewChat\n                            \n                            \n                                onOpenPrivateChat\n                            \n                            \n                                openAddChannelDialog\n                            \n                            \n                                toggleChannelList\n                            \n                            \n                                toggleMessageList\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                openChannel\n                            \n                            \n                                openNewChat\n                            \n                            \n                                openPrivateChat\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, usersService: UserService, channelService: ChannelService, chatService: ChatService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        openChannel\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openNewChat\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openPrivateChat\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOpenChannel\n                        \n                    \n                \n            \n            \n                \nonOpenChannel(i: number, channelRef: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                channelRef\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOpenNewChat\n                        \n                    \n                \n            \n            \n                \nonOpenNewChat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOpenPrivateChat\n                        \n                    \n                \n            \n            \n                \nonOpenPrivateChat(chat: any, index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                chat\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddChannelDialog\n                        \n                    \n                \n            \n            \n                \nopenAddChannelDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Opens AddChannelDialog by click\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleChannelList\n                        \n                    \n                \n            \n            \n                \ntoggleChannelList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMessageList\n                        \n                    \n                \n            \n            \n                \ntoggleMessageList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelListOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chats\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chatService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chatSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageListOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        usersService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/workspace-menu/workspace-menu.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter } from '@angular/core';\nimport { WorkspaceUserProfilComponent } from '../shared/workspace-user-profil/workspace-user-profil.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { DialogAddChannelComponent } from '../dialogs/dialog-add-channel/dialog-add-channel.component';\nimport { UserService } from '../../services/user.service';\nimport { ChannelService } from '../../services/channel.service';\nimport { ChatService } from '../../services/chat.service';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\nimport { SearchInputComponent } from '../shared/search-input/search-input.component';\n\n\n@Component({\n  selector: 'app-workspace-menu',\n  standalone: true,\n  imports: [WorkspaceUserProfilComponent, MatDialogModule, SearchInputComponent],\n  templateUrl: './workspace-menu.component.html',\n  styleUrl: './workspace-menu.component.scss'\n})\nexport class WorkspaceMenuComponent {\n\n  channelListOpen = true;\n  messageListOpen = true;\n  chats: any[] = [];\n  @Output() openChannel = new EventEmitter();\n  @Output() openPrivateChat = new EventEmitter();\n  @Output() openNewChat = new EventEmitter();\n  private chatSubscription: Subscription | undefined;\n\n\n  constructor(public dialog: MatDialog, public usersService: UserService, public channelService: ChannelService, public chatService: ChatService, public authService: AuthService) {}\n\n  ngOnInit() {\n    this.chatSubscription = this.chatService.chats$.subscribe(chats => {\n      this.chats = chats;\n      console.log('Das sind alle Chats',chats)\n    });\n  }\n  \n  ngOnDestroy() {\n    this.chatSubscription?.unsubscribe();\n  }\n\n  toggleChannelList() {\n    this.channelListOpen = !this.channelListOpen;\n  }\n\n  toggleMessageList() {\n    this.messageListOpen = !this.messageListOpen;\n  }\n\n\n  onOpenNewChat() {\n    this.openNewChat.emit();\n  }\n\n\n  onOpenChannel(i:number, channelRef:string) {\n    this.channelService.unsubSglChannelChats();\n    this.channelService.subSglChannelChats(channelRef);\n    this.channelService.selectedChannel = i;\n    this.openChannel.emit();\n  }\n\n\n  onOpenPrivateChat(chat: any, index: number) {\n    if(this.chatService.unsubPrivateChatMessages) {\n      this.chatService.unsubPrivateChatMessages();\n    }\n    this.chatService.currentChat = chat;\n    this.chatService.selChatIndex = index;\n    this.chatService.selChatRef = chat.chatRef;\n    this.chatService.getPrivateChatMessages(chat);\n    this.openPrivateChat.emit();\n  }\n\n\n  /**\n   * Opens AddChannelDialog by click\n   */\n  openAddChannelDialog() {\n    this.dialog.open(DialogAddChannelComponent, {panelClass: 'dialog-bor-rad-round'});\n  }\n\n}\n\n\n\n    \n\n    \n        \n  \n    \n    Devspace\n  \n  \n\n\n\n\n\n\n  \n    \n      \n      \n        Channels\n      \n    \n    \n  \n\n  @if(channelListOpen) {\n  \n    @for (channel of channelService.channels; track channel.id; let index =\n    $index) {\n    \n      {{ channel.name }}\n    \n    }\n    \n      Channel hinzufügen\n    \n  \n  }\n\n  \n  \n    \n    \n      Direktnachrichten\n    \n  \n\n  @if(messageListOpen && chatService.privateChats) {\n\n  \n    \n    \n    } -->\n    @for (chat of chatService.privateChats; track chat.chatId; let index =\n    $index) { @if(chat.members.length === 2) {\n    } @else if(chat.members.length === 1) {\n    \n    } }\n  \n  }\n\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Devspace                              Channels                  @if(channelListOpen) {      @for (channel of channelService.channels; track channel.id; let index =    $index) {          {{ channel.name }}        }          Channel hinzufügen        }                  Direktnachrichten        @if(messageListOpen && chatService.privateChats) {              } -->    @for (chat of chatService.privateChats; track chat.chatId; let index =    $index) { @if(chat.members.length === 2) {    } @else if(chat.members.length === 1) {        } }    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WorkspaceMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkspaceUserProfilComponent.html":{"url":"components/WorkspaceUserProfilComponent.html","title":"component - WorkspaceUserProfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WorkspaceUserProfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/shared/workspace-user-profil/workspace-user-profil.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-workspace-user-profil\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./workspace-user-profil.component.html\n            \n\n\n\n            \n                styleUrl\n                ./workspace-user-profil.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openShowProfilDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onWorkspace\n                            \n                            \n                                ownChat\n                            \n                            \n                                userId\n                            \n                            \n                                userImage\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/shared/workspace-user-profil/workspace-user-profil.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onWorkspace\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/workspace-user-profil/workspace-user-profil.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ownChat\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/workspace-user-profil/workspace-user-profil.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/workspace-user-profil/workspace-user-profil.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userImage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/workspace-user-profil/workspace-user-profil.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/shared/workspace-user-profil/workspace-user-profil.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openShowProfilDialog\n                        \n                    \n                \n            \n            \n                \nopenShowProfilDialog(memberId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/shared/workspace-user-profil/workspace-user-profil.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                memberId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/shared/workspace-user-profil/workspace-user-profil.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { DialogShowProfilComponent } from '../../dialogs/dialog-show-profil/dialog-show-profil.component';\nimport { UserService } from '../../../services/user.service';\n\n@Component({\n  selector: 'app-workspace-user-profil',\n  standalone: true,\n  imports: [MatDialogModule, ],\n  templateUrl: './workspace-user-profil.component.html',\n  styleUrl: './workspace-user-profil.component.scss'\n})\nexport class WorkspaceUserProfilComponent {\n\n  @Input() userName: string = '';\n  @Input() userImage: string = '';\n  @Input() userId: string = '';\n  @Input() ownChat: boolean = false;\n  @Input() onWorkspace: boolean = false;\n\n  constructor(public dialog: MatDialog, private userService: UserService) {}\n\n\n  openShowProfilDialog(memberId: string) {\n    if(this.userId && this.onWorkspace !== true) {\n\n    let memberData = this.userService.users[this.userService.getUsersData(memberId)];\n\n    console.log('this is the member', memberId);\n    \n    this.dialog.open(DialogShowProfilComponent, {panelClass: ['dialog-bor-rad-round', 'user-profil-popup'], data: {\n        profilName: memberData.name,\n        profilRef: memberData.id,\n        profilEmail: memberData.email,\n        profilImg: memberData.photoURL,\n      }});\n    } \n  }\n\n\n  \n}\n\n    \n\n    \n        \n  \n  \n    {{ userName }}\n    @if(ownChat){ (Du) }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ userName }}    @if(ownChat){ (Du) }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChannelBoardComponent', 'selector': 'app-channel-board'},{'name': 'ChatBoardComponent', 'selector': 'app-chat-board'},{'name': 'ConfirmationOverlayComponent', 'selector': 'app-confirmation-overlay'},{'name': 'DialogAddChannelComponent', 'selector': 'app-dialog-add-channel'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogShowProfilComponent', 'selector': 'app-dialog-show-profil'},{'name': 'DialogUserMenuComponent', 'selector': 'app-dialog-user-menu'},{'name': 'DialogUserProfilComponent', 'selector': 'app-dialog-user-profil'},{'name': 'EditMsgTextareaComponent', 'selector': 'app-edit-msg-textarea'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageLeftComponent', 'selector': 'app-message-left'},{'name': 'MessageRightComponent', 'selector': 'app-message-right'},{'name': 'NewMsgBoardComponent', 'selector': 'app-new-msg-board'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'SearchMemberInputComponent', 'selector': 'app-search-member-input'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'SignuppictureComponent', 'selector': 'app-signuppicture'},{'name': 'StartAnimationComponent', 'selector': 'app-start-animation'},{'name': 'StartingPageComponent', 'selector': 'app-starting-page'},{'name': 'TextareaMainPageComponent', 'selector': 'app-textarea-main-page'},{'name': 'ThreadBoardComponent', 'selector': 'app-thread-board'},{'name': 'TimeSeparatorComponent', 'selector': 'app-time-separator'},{'name': 'UploadFormComponent', 'selector': 'app-upload-form'},{'name': 'WorkspaceMenuComponent', 'selector': 'app-workspace-menu'},{'name': 'WorkspaceUserProfilComponent', 'selector': 'app-workspace-user-profil'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WorkspaceUserProfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/confirmation-overlay/confirmation-overlay.component.ts\n            \n            component\n            ConfirmationOverlayComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/imprint/imprint.component.ts\n            \n            component\n            ImprintComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/main-page/channel-board/channel-board.component.ts\n            \n            component\n            ChannelBoardComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/main-page/chat-board/chat-board.component.ts\n            \n            component\n            ChatBoardComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/main-page/dialogs/dialog-add-channel/dialog-add-channel.component.ts\n            \n            component\n            DialogAddChannelComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/main-page/dialogs/dialog-edit-channel/dialog-edit-channel.component.ts\n            \n            component\n            DialogEditChannelComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/main-page/dialogs/dialog-show-profil/dialog-show-profil.component.ts\n            \n            component\n            DialogShowProfilComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/main-page/dialogs/dialog-user-menu/dialog-user-menu.component.ts\n            \n            component\n            DialogUserMenuComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/main-page/dialogs/dialog-user-profil/dialog-user-profil.component.ts\n            \n            component\n            DialogUserProfilComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/main-page/main-page.component.ts\n            \n            component\n            MainPageComponent\n            \n                3 %\n                (1/29)\n            \n        \n        \n            \n                \n                src/app/main-page/new-msg-board/new-msg-board.component.ts\n            \n            component\n            NewMsgBoardComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main-page/shared/edit-msg-textarea/edit-msg-textarea.component.ts\n            \n            component\n            EditMsgTextareaComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/main-page/shared/message-left/message-left.component.ts\n            \n            component\n            MessageLeftComponent\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/app/main-page/shared/message-right/message-right.component.ts\n            \n            component\n            MessageRightComponent\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/main-page/shared/search-input/search-input.component.ts\n            \n            component\n            SearchInputComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/main-page/shared/search-member-input/search-member-input.component.ts\n            \n            component\n            SearchMemberInputComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/main-page/shared/textarea-main-page/textarea-main-page.component.ts\n            \n            component\n            TextareaMainPageComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/main-page/shared/time-separator/time-separator.component.ts\n            \n            component\n            TimeSeparatorComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/main-page/shared/workspace-user-profil/workspace-user-profil.component.ts\n            \n            component\n            WorkspaceUserProfilComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/main-page/thread-board/thread-board.component.ts\n            \n            component\n            ThreadBoardComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/main-page/workspace-menu/workspace-menu.component.ts\n            \n            component\n            WorkspaceMenuComponent\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                src/app/models/channel.class.ts\n            \n            class\n            Channel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/chat.class.ts\n            \n            class\n            Chat\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/message.class.ts\n            \n            class\n            Message\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/privateChat.class.ts\n            \n            class\n            PrivateChat\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/reaction.class.ts\n            \n            class\n            Reaction\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/user.class.ts\n            \n            class\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/pipes/input-filter.pipe.ts\n            \n            pipe\n            InputFilterPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/privacy-policy/privacy-policy.component.ts\n            \n            component\n            PrivacyPolicyComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/animation-state.service.ts\n            \n            injectable\n            AnimationStateService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                src/app/services/channel.service.ts\n            \n            injectable\n            ChannelService\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/app/services/chat.service.ts\n            \n            injectable\n            ChatService\n            \n                0 %\n                (0/38)\n            \n        \n        \n            \n                \n                src/app/services/event.service.ts\n            \n            injectable\n            EventService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/services/fileupload.service.ts\n            \n            injectable\n            FileUploadService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/guest-user.service.ts\n            \n            injectable\n            GuestUserService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/overlay.service.ts\n            \n            injectable\n            OverlayService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/reset-password.service.ts\n            \n            injectable\n            ResetPasswordService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/search.service.ts\n            \n            injectable\n            SearchService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/starting-page/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/starting-page/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/starting-page/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/starting-page/signuppicture/signuppicture.component.ts\n            \n            component\n            SignuppictureComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/starting-page/signuppicture/upload-form/upload-form.component.ts\n            \n            component\n            UploadFormComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/starting-page/start-animation/start-animation.component.ts\n            \n            component\n            StartAnimationComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/starting-page/starting-page.component.ts\n            \n            component\n            StartingPageComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/types/messages.class.ts\n            \n            interface\n            Message\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/cdk : ^17.3.1\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/fire : ^17.0.1\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/material : ^17.3.1\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/platform-server : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            @angular/ssr : ^17.3.0\n        \n            @ctrl/ngx-emoji-mart : ^9.2.0\n        \n            express : ^4.18.2\n        \n            firebase : ^10.9.0\n        \n            firebaseui : ^6.1.0\n        \n            hammerjs : ^2.0.8\n        \n            ngx-image-cropper : ^7.2.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDabubble\nThis project was generated with Angular CLI version 17.3.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    31 Components\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserType   (src/.../user.class.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/types/user.class.ts\n    \n    \n        \n            \n                \n                    \n                    UserType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideRouter(routes), \n    provideClientHydration(), \n    importProvidersFrom(provideFirebaseApp(() => initializeApp({\"projectId\":\"dabubble-9fc3f\",\"appId\":\"1:417516174579:web:e3fefddc3232d2519d4b86\",\"databaseURL\":\"https://dabubble-9fc3f-default-rtdb.europe-west1.firebasedatabase.app\",\"storageBucket\":\"dabubble-9fc3f.appspot.com\",\"apiKey\":\"AIzaSyA9N9zFR70oYil8Dz6QeuY_e69rHSw3Hpo\",\"authDomain\":\"dabubble-9fc3f.firebaseapp.com\",\"messagingSenderId\":\"417516174579\"}))), \n    importProvidersFrom(provideFirestore(() => getFirestore())), \n    importProvidersFrom(provideDatabase(() => getDatabase())), provideAnimationsAsync(),\n    importProvidersFrom(provideAuth(() => getAuth())),\n    importProvidersFrom(provideStorage(() => getStorage())) ]\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
